### YamlMime:Tutorial
title: Teams Bot com logon único
metadata:
  title: Teams Bot com SSO
  description: Neste tutorial, você aprenderá a configurar o SSO em um bot para Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Leia mais sobre a autenticação de bot
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c911a81f35a09698ee6294574ea6f7b6f0b63916
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64736882"
items:
- durationInMinutes: 1
  content: "Teams bots são bots de conversa que executam tarefas automatizadas repetitivas realizadas pelos usuários, como o atendimento ao cliente. O usuário precisa entrar com suas credenciais várias vezes para executar tarefas repetitivas. O método de autenticação SSO (logon único) no Azure Active Directory atualiza silenciosamente o token de autenticação. Isso resulta na redução do número de vezes que os usuários precisam inserir suas credenciais de entrada. \n\nUm bot se comporta de maneira diferente, dependendo da conversa em que ele está envolvido:\n\n* Os bots em conversas de chat em grupo e canal exigem que o usuário @mention o bot.\n* Bots em uma conversa privada não exigem uma @menção. Todas as mensagens enviadas pelo usuário são roteadas para o bot.\n\nEste guia passo a passo ajuda você a criar um bot com a autenticação de SSO habilitada. Você verá a seguinte saída:\n\n![Celular conectado ao bot](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "Instale as seguintes ferramentas e configure seu ambiente de desenvolvimento:  \n\n* Conta Microsoft Teams ativa com imagem de perfil\n\n  > [!TIP]\n  > Verifique se Microsoft Teams conta não é uma conta de convidado.\n\n* [solução de túnel ngrok](https://ngrok.com/) ou equivalente\n\n  > [!NOTE]\n  > Depois de baixar o ngrok, inscreva-se e instale [o authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 ou a versão mais recente\n* [Microsoft 365 conta de desenvolvedor](concepts/build-and-test/prepare-your-o365-tenant.md) ou acesso Teams conta com as permissões apropriadas para instalar um aplicativo\n"
- title: Configurar o bot no Azure Serviço de Bot
  durationInMinutes: 5
  content: "Para autenticar o bot com SSO, você pode configurar o bot no Azure Serviço de Bot. Registre o bot no Azure Serviço de Bot ao desenvolver e hospedá-lo no Azure. Execute as etapas a seguir:\n\n* Use o ngrok para criar um túnel para os pontos de extremidade do servidor Web.\n* Crie um recurso de Bot do Azure para registrar o bot no Azure Serviço de Bot.\n* Crie um segredo do cliente que habilite a autenticação de SSO do bot.\n* Adicione Microsoft Teams canal para implantar o bot em um Teams canal.\n* Adicione o ponto de extremidade de mensagens ao túnel ngrok que você criou.\n\nUse o ngrok para criar um túnel para os pontos de extremidade HTTPS disponíveis publicamente do servidor Web em execução localmente. Execute o seguinte comando no ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Para criar um recurso de Bot do Azure**\n\n1. Vá para o [portal Microsoft Azure aplicativo](https://portal.azure.com/).\n1. Selecione **Criar um recurso**.\n1. Na caixa de pesquisa, insira o **bot do Azure** e selecione a tecla Enter.\n1. Selecione **o Bot do Azure**.\n\n    ![Criar cartão de bot do Azure](~/assets/images/bots/createazurebot.png)\n\n1. Selecionar **Criar**.\n1. Insira o nome do identificador do bot necessário no **identificador do Bot**.\n1. Na lista **suspensa** Assinatura, selecione a assinatura.\n1. Na lista **suspensa grupo de** recursos, selecione o grupo de recursos.\n    \n    Para criar um novo recurso, selecione **Criar**, insira o nome do recurso, selecione **OK** e selecione o local necessário na  lista suspensa Novo local do grupo de recursos.\n\n    > [!NOTE]\n    > Na seção ID do Aplicativo da Microsoft, **Criar nova ID** de Aplicativo da Microsoft já está selecionado. Você pode selecionar **Usar o registro de aplicativo existente**, inserir **a ID do aplicativo** existente e inserir **a senha do aplicativo existente**.\n\n1. Selecione **Examinar + criar**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Se a validação for aprovada, selecione **Criar**.\n\n    Leva alguns instantes para que o serviço de bot seja provisionado.\n\n1. Selecione **Acessar recursos**. O bot e os recursos relacionados são listados no grupo de recursos.\n\n    Agora seu bot do Azure foi criado.\n\n    ![Recurso de bot do Azure criado](~/assets/images/bots/Azurebotresource.png)\n\n**Para criar o segredo do cliente**\n\n1. No **Configurações**, selecione **Configuração**.\n\n   > [!TIP]\n   > Salve a **ID do Aplicativo da Microsoft** ou **a ID do Cliente** para referência futura.\n\n1. Selecione **MultiLocatário em** Tipo **de Bot**.\n\n     ![Tipo de bot](~/assets/images/bots/bot-type.png)\n\n1. Ao lado da **ID do Aplicativo da Microsoft**, selecione **Gerenciar**.\n\n     ![ID do Aplicativo microsoft](~/assets/images/bots/MicrosoftAppID.png)\n\n1. Na seção **Segredos do cliente** , selecione **Novo segredo do cliente**. A **janela Adicionar um segredo do** cliente é exibida.  \n\n1. Insira **Descrição** e selecione **Adicionar**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. Na coluna **Valor** , selecione **Copiar para a área de transferência** e salve a ID do segredo do cliente para referência futura.\n\n     ![Valor do segredo do cliente](~/assets/images/bots/valueclientsecret.png)\n   \n**Para adicionar o Microsoft Teams canal**\n\n1. Vá para **Casa**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Abra o bot, que está listado na **seção Recursos** recentes.\n1. Selecione **Canais** no painel esquerdo e selecione **Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Abrir Teams de canais](~/assets/images/bots/channel-teams.png)    \n      ![Selecione Teams](~/assets/images/bots/select-teams.png)    \n1. Selecione **Salvar**.\n1. Marque a caixa de seleção para aceitar os termos de serviço e selecione **Concordar**.</br>\n      ![Termos de serviço](~/assets/images/bots/select-terms-of-service.png)\n\n**Para adicionar o ponto de extremidade de mensagens**\n\n1. Em **Configurações** para o bot do Azure que você criou, selecione **Configuração**.\n1. Vá para ngrok.\n1. Copie a URL HTTPS (https para io), conforme mostrado na imagem a seguir:\n\n    ![URL HTTPS do ngrok](~/assets/images/bots/ngrokURL.png)\n\n1. No **ponto de extremidade de Mensagens**, use a URL HTTPS disponível no ngrok e, no final da URL, adicione **/api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Selecione **Aplicar**.\n\n    Você configurou com êxito um bot no Azure Serviço de Bot e agora precisa configurar a conexão de serviço de bot.\n"
- title: Configurar o SSO para o bot
  durationInMinutes: 5
  content: "Para garantir que o Serviço de Bot permita que o usuário entre e acesse o bot, você deve configurar o SSO para o bot. Para fazer isso, execute as seguintes etapas:\n\n* Adicione o URI de Redirecionamento ao recurso de bot do Azure.\n* Exponha o ponto de extremidade da API para especificar o local de onde os recursos podem ser acessados.\n* Autorizar aplicativos cliente.\n* Adicione as permissões de API necessárias para chamadas downstream.\n* Habilitar concessão implícita.\n* Atualizar manifesto.\n* Configure a Serviço de Bot conexão.\n\n**Para adicionar o URI de redirecionamento ao recurso de bot do Azure**\n\n1. Adjacente à **ID do Aplicativo da Microsoft**, selecione **Gerenciar**.</br>\n    ![Gerenciar a ID do aplicativo](~/assets/images/bots/select-manage.png)\n1. No painel esquerdo do recurso de bot, selecione **Autenticação**.\n1. Em **Configurações de plataforma**, selecione **Adicionar uma plataforma**.\n1. Selecione **Web**.\n\n1. Insira **URIs de Redirecionamento** como `https://token.botframework.com/.auth/web/redirect` e selecione **Configurar**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    O URI de redirecionamento é adicionado ao recurso de bot do Azure.\n\n    ![URI de redirecionamento adicionado ao recurso de bot](~/assets/images/bots/redirectURIadded.png)\n\n**Para expor o ponto de extremidade da API**\n\n1. No painel esquerdo, selecione **Expor uma API**.\n1. Selecione **Definir** para o URI da ID do Aplicativo.\n1. Use o URI da ID do aplicativo **mostrado e acrescente api://botid-** no início do URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Selecione **Salvar**. Salve o **URI da ID do Aplicativo** para referência futura.\n1. Selecione **Adicionar um escopo**.\n1. No **nome do escopo**, insira **access_as_user**.\n1. Nesse **Who pode consentir?**, alterne para **Administradores e usuários**.\n1. Insira os seguintes valores nas caixas:\n\n    | Campo | Valor |\n    | ----- | ----- |\n    | Nome de exibição do consentimento do administrador | Teams pode acessar o perfil do usuário |\n    | Descrição do consentimento do administrador | Permite Teams chamar as APIs Web do aplicativo como o usuário atual. |\n    | Nome de exibição de consentimento do usuário | Teams pode acessar seu perfil de usuário e fazer solicitações em seu nome |\n    | Descrição de consentimento do usuário | Habilite Teams para chamar as APIs desse aplicativo com os mesmos direitos que você tem. |\n\n1. Verifique se o **Estado** está definido como **Habilitado**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Selecione **Adicionar escopo**. O nome do escopo corresponde automaticamente ao URI da ID do aplicativo, com **/access_as_user** adicionado ao final.\n\n    ![API exposta e escopo adicionado](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Para autorizar aplicativos cliente**\n\nAdicione as seguintes IDs como aplicativos **cliente autorizados** e marque também a caixa de seleção para **escopos autorizados**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams aplicativo móvel ou desktop)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams aplicativo Web)</br>     \n    ![Adicionar aplicativo cliente ao aplicativo](~/assets/images/bots/addclientapplication1.png)        \n\n**Para adicionar as permissões de API necessárias para chamadas downstream**\n\n1. Selecione **permissões de API** no painel esquerdo.\n1. Adicione todas as permissões delegadas pelo usuário que seu aplicativo requer para APIs downstream, por exemplo, User.Read.</br>\n    ![Permissões de usuário da API](~/assets/images/bots/APIpermissions.png)\n\n**Para habilitar a concessão implícita**\n\n1. Selecione **Autenticação** no painel esquerdo.\n1. Marque as **caixas de seleção tokens** de **acesso e tokens de ID** .</br>\n    ![Caixas de seleção de autenticação para o aplicativo](~/assets/images/bots/authenticationcheckboxes.png)\n1. Selecione **Salvar** para salvar as alterações.\n\n**Para atualizar o manifesto**\n\n1. Selecione **Manifesto** no painel esquerdo.\n1. Verifique se o item de configuração está **definido como \"accessTokenAcceptedVersion\": 2**. Caso contrário, altere seu valor para **2** e selecione **Salvar**. (Se você já estiver testando seu bot no Teams, deverá desassociá-lo e Teams. Em seguida, entre novamente para ver essa alteração).</br>\n    ![Atualizar manifesto](~/assets/images/bots/update-manifest.png)</br>\n\n**Para configurar uma Serviço de Bot conexão**\n\n1. Vá para **Configuração pageAdd** >  **OAuth Connection Configurações**.\n1. Selecione **Adicionar Conexão OAuth Configurações**.\n1. Em **Nova Configuração de Conexão**, insira os seguintes detalhes:\n\n    | Campo | Valor ou descrição |\n    | ----- | ----- |\n    | Nome | Insira o nome da nova configuração de conexão. Você pode usar o nome nas configurações do código do serviço de bot. |\n    | Service Provider | Selecione **Azure Active Directory V2**. |\n    | ID do cliente | Salvo anteriormente como sua **ID de Aplicativo da Microsoft**. |\n    | Segredo do cliente | Salvo anteriormente **como Valor** da ID do segredo do cliente. |\n    | URL Exchange token | Use a **URL da ID do Aplicativo** obtida anteriormente ao expor o ponto de extremidade da API. |\n    | ID do locatário | Insira **comum**. |\n    | Scopes | Insira **User.Read e** também adicione todos os **Escopos necessários** ao especificar permissões para APIs downstream. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Selecione **Salvar**.\n1. Selecione **Aplicar**.\n"
- title: Configurar e executar o exemplo de bot
  durationInMinutes: 1
  content: >
    Configure o exemplo de bot para entender como autenticar o bot de conversa no Microsoft Teams.


    **Para configurar e executar o exemplo de bot**


    1. Abra o Visual Studio.

    1. No Visual Studio, selecione **Clonar um repositório**.

    1. No local **do repositório**, insira `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Certifique-se de observar **o caminho** em que o repositório é clonado.

    1. Selecione **FileOpen** >  >  **Project/Solution**.

    1. Vá para **o Microsoft-Teams-Samples > exemplos > bot-conversation-sso-quickstart > csharp_dotnetcore** pasta.

    1. Abra o **arquivo BotSSOCSharp.csproj** .

    1. Abra o **arquivo appsettings.json** .

    1. Atualize **a configuração de appsettings.json** para que o bot use e `MicrosoftAppId` `MicrosoftAppPassword`. Use o nome da conexão OAuth como o **Nome da Conexão**.

        > [!NOTE]
        > Você pode obter a partir `MicrosoftAppId` da página configuração do bot. O `MicrosoftAppPassword` valor da ID de segredo do cliente que você salvou anteriormente.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Selecione a **tecla F5** para executar este projeto.

        <br>

        <details>

        <summary><b>Solução de Problemas</b></summary>

        Se você receber o **erro Não é possível localizar** o pacote, siga estas etapas:

        1.  Vá para **Ferramentas** >  **NuGet Gerenciador de Pacotes** >  **Gerenciador de Pacotes Configurações**.
        1.  Na janela **Opções** exibida, **selecione NuGet Gerenciador de Pacotes** >  **Empacote de Fontes**.
        1.  Selecione **Adicionar**.
        1.  Em **Nome**, insira `nuget.org` e em **Origem**, insira `https://api.nuget.org/v3/index.json`.
        1.  Selecione **Atualizar** e **OK**.
        1.  Recompile seu projeto.
        <br>

        </details>
- title: Configurar e executar o Teams aplicativo
  durationInMinutes: 2
  content: >
    A maneira mais abrangente de testar seu bot é criando um pacote de aplicativos e carregando-o para Teams. Esse método é a única maneira de testar a funcionalidade completa disponível para o bot, em todos os escopos. Você pode configurar e executar o Teams aplicativo carregando o `manifest.zip` arquivo.


    **Para executar o Teams, carregando o manifest.zip arquivo**


    1. Em Visual Studio, vá para a `appPackage/` pasta.

    1. Abra o arquivo `manifest.json`.

    1. No arquivo `manifest.json` , localize **{TODO: MicrosoftAppId}** e substitua-o pela sua ID de aplicativo da Microsoft.

    1. No Windows Explorer Teams, acesse os exemplos de > > > **bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage**.

    1. Compacte o conteúdo da pasta `appPackage/` a ser criada `manifest.zip`.

    1. Vá para Teams.

    1. Para carregar`manifest.zip`, selecione **Armazenar > Gerenciar seus aplicativos > Upload um aplicativo personalizado** e abra`manifest.zip`.

    1. Selecione **Adicionar** para adicionar o bot de conversa ao chat.

        Você pode interagir com esse bot enviando uma mensagem. O Bot troca um token de SSO e faz uma chamada para o API do Graph em seu nome e retorna os resultados. Ele mantém você conectado, a menos que você envie uma mensagem para **fazer logoff**.

    1. Envie uma mensagem para o bot. O bot de conversa solicita permissões pela primeira vez.

        ![Permissões para bot](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Selecione **Continuar** para aceitar as permissões.


    1. Selecione **Aceitar** **para Permissões solicitadas**.

        ![Celular conectado ao bot](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Desafio completo
  durationInMinutes: 1
  content: >
    Você conseguiu algo assim?


    ![Celular conectado ao bot](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Você concluiu o tutorial para começar a usar o SSO em um bot para Microsoft Teams o Bot Framework.
