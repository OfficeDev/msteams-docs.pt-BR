### YamlMime:Tutorial
title: Criar seu primeiro aplicativo usando o JavaScript
metadata:
  title: Olá, Mundo com JavaScript
  description: Neste tutorial, você aprenderá a criar um Olá, Mundo com JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Voltar à Introdução geral
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 81947eab4f7236e6cdb7a2e9d6956d1b0dde2c7a
  ms.sourcegitcommit: 3bfd0d2c4d83f306023adb45c8a3f829f7150b1d
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 04/27/2022
  ms.locfileid: "65073706"
items:
- durationInMinutes: 1
  content: "Inicie Microsoft Teams desenvolvimento de aplicativos com seu primeiro Teams aplicativo. Você criará três aplicativos Teams: um aplicativo guia, um aplicativo de bot e um aplicativo de extensão de mensagens. \n\nCada aplicativo terá uma funcionalidade, que vem com sua própria interface do usuário e experiência do usuário:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos.\" border=\"false\":::\n\n> [!NOTE]\n> Neste tutorial, você criará um aplicativo guia primeiro, seguido por um aplicativo de bot e, em seguida, um aplicativo de extensão de mensagens. No entanto, você pode optar por criar um aplicativo com qualquer funcionalidade primeiro, sem prejudicar a funcionalidade de outros aplicativos.\n\nNeste tutorial, você aprenderá:\n\n- Como configurar um novo projeto com o Teams Toolkit.\n- Como criar três aplicativos com uma funcionalidade diferente cada: guia, bot e extensão de mensagens.\n- A estrutura do aplicativo:\n    - A parte da guia com JavaScript usando React.\n    - O restante dos recursos com Node.js.\n- Como implantar seu aplicativo\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará para criar e implantar seus aplicativos.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de ferramentas do Teams](#install-the-teams-toolkit) | Uma Microsoft Visual Studio code que cria um scaffolding de projeto para seu aplicativo. Use a versão mais recente. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams colaborar com todas as pessoas com quem você trabalha por meio de aplicativos para chat, reuniões, chamadas – tudo em um só lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Ambiente de runtime javaScript de back-end. Use a versão mais recente do v14 LTS.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de build javaScript, TypeScript ou Estrutura do SharePoint (SPFx) . Use a versão 1.55 ou posterior. |\n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [CLI do Azure](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-end baseado em nuvem para seu Teams aplicativo no Azure. |\n| &nbsp; | [React Developer Tools para Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [React Developer Tools para MicrosoftEdge&nbsp;](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Uma extensão de DevTools do navegador para a biblioteca javaScript React software livre. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, uma ferramenta baseada em navegador que permite executar uma consulta do Microsoft Graph dados. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo Teams, incluindo para sua organização ou a Teams armazenamento. |\n\n\n> [!TIP]\n> Se você trabalha com os dados do Microsoft Graph, deve aprender e marcar o Microsoft Graph Explorer. Essa ferramenta baseada em navegador permite que você consulte o Microsoft Graph fora de um aplicativo.\n\n\n## <a name=\"prepare-development-environment\"></a>Preparar o ambiente de desenvolvimento\n\nDepois de instalar as ferramentas necessárias, configure o ambiente de desenvolvimento.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalar o Teams Toolkit\n\nO Teams Toolkit ajuda a simplificar o processo de desenvolvimento com ferramentas para provisionar e implantar recursos de nuvem para seu aplicativo, publicar na Teams e muito mais. \n \nVocê pode usar o kit de ferramentas com Visual Studio Code, ou a CLI (interface de linha de comando), chamada `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code e selecione o modo **de** exibição Extensões (**Ctrl+Shift+X** / **⌘⇧-X** ou **Exibir > Extensões**).\n1. Na caixa de pesquisa, insira **Teams Toolkit**.\n1. Selecione **Instalar** ao lado do Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"A ilustração mostra a instalação Teams Toolkit extensão.\" border=\"false\":::\n\n O Teams Toolkit ícone é exibido na Visual Studio Code lateral depois que ele é instalado.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"A ilustração mostra o Teams Toolkit na Visual Studio Code lateral.\" border=\"false\":::\n\nVocê também pode encontrar o Teams Toolkit no [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nPara instalar a CLI do TeamsFx, use o gerenciador de `npm` pacotes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nDependendo da configuração, talvez seja necessário usar para `sudo` instalar a CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEssa condição é mais comum em sistemas Linux e macOS.\n\nCertifique-se de adicionar o cache global npm ao path. Essa etapa normalmente é feita como parte do Node.js instalador.  \n\nVocê pode usar a CLI com o `teamsfx` comando. Verifique se o comando está funcionando executando `teamsfx -h`.\n\n> [!CAUTION]\n> Antes de executar o TeamsFx em terminais do PowerShell, você deve habilitar a política de execução \"assinada remotamente\" para o PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de Teams desenvolvimento\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, em que você conversa, compartilha arquivos e executa reuniões. Esse espaço também é onde seu sideload e teste seu aplicativo. Vamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre em sua conta Microsoft 365 para exibir essa opção.\n\n > [!NOTE]\n > O sideload é necessário para visualizar e testar aplicativos Teams ambiente local. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode fazer sideload de aplicativos Teams:\n\n 1. No cliente Teams, selecione o **ícone da** Loja.\n 1. Selecione **Gerenciar seus aplicativos**.\n 1. Selecione **Publicar um aplicativo**.\n 1. Procure a opção para Upload **um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado Teams.\":::\n\n     > [!NOTE]\n     > Se você não tiver a opção de carregar um aplicativo personalizado, fale com seu Teams administrador.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário Teams desenvolvedor gratuito (opcional)\n\nSe você não tiver uma conta Teams desenvolvedor, poderá obtê-la gratuitamente. Participe do programa Microsoft 365 desenvolvedor!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, selecione **Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemplo do que você vê depois de se inscrever no programa Microsoft 365 desenvolvedor.\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem o **Upload uma opção de aplicativo personalizado** Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você quiser hospedar seu aplicativo ou acessar recursos no Azure, deverá ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configurou sua conta. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar! Selecione o aplicativo que você deseja fazer primeiro.\n"
- title: Criar workspace do projeto para seu aplicativo guia
  durationInMinutes: 1
  content: "\nComece Microsoft Teams desenvolvimento de aplicativos criando seu primeiro aplicativo. Este aplicativo usa a funcionalidade Tab.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos. A guia está realçada.\" border=\"false\":::\n\nNesta página, você aprenderá:\n1. [Como configurar um novo projeto tab com o Teams Toolkit](#create-your-tab-project-workspace)\n1. [Sobre a estrutura de diretório do seu aplicativo](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Criar seu workspace de projeto de guia\n\nSe os pré-requisitos estão em vigor, vamos começar!\n\n> [!NOTE]\n> A Visual Studio Code da interface do usuário mostrada é do Mac. Ele pode ser diferente dependendo do seu sistema operacional, Teams Toolkit versão e ambiente.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\" border=\"false\":::\n\n1. Selecione **Criar um novo Teams para** criar um aplicativo usando Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"O assistente é iniciado para criar um novo projeto\" border=\"false\":::\n\n1. Verifique se **Tab** está selecionado como a funcionalidade que você deseja criar em seu aplicativo. Clique em **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tab.png\" alt-text=\"Selecionar Funcionalidade do Aplicativo\" border=\"false\":::\n\n1. Selecione **JavaScript** como linguagem de programação.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"false\":::\n\n1. Insira `helloworld` como o nome do aplicativo. Certifique-se de usar apenas caracteres alfanuméricos. Selecione **Enter** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab.png\" alt-text=\"Captura de tela mostrando onde inserir o nome do aplicativo.\" border=\"false\":::\n\n    O aplicativo Teams guia é criado em alguns segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/app-created.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\" border=\"false\":::\n\n    Depois que o aplicativo é criado, Teams Toolkit exibe uma mensagem para indicar o local em que o workspace do projeto é criado. Essa pasta é o local padrão especificado nas Visual Studio Code configurações.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensagem de localização\":::\n\n    A mensagem oferece duas opções:\n    \n    - **Alterar local**\n    - **Depuração local**\n    \n    Para este tutorial, você não precisa usar essas opções.\n\n    > [!NOTE]\n    > Se você optar por alterar o local do workspace, ele será refletido somente para projetos criados após o recarregamento Visual Studio Code. Nenhuma alteração é feita no local dos projetos existentes.\n\n    <details>\n    <summary>Uma recapitulação rápida da criação de um Teams aplicativo.</summary>\n    Assista a esta breve recapitulação para criar um Teams aplicativo.\n\n    ![Criar um aplicativo do Teams](~/assets/videos/javascript-tab-app.gif) </details>\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nUse a CLI `teamsfx` para criar o seu primeiro projeto. Inicie pela pasta onde deseja criar a pasta do projeto.\n\n``` bash\nteamsfx new\n```\n\nVocê pode usar a CLI para criar um novo Teams aplicativo. A CLI orienta você por uma série de perguntas. Cada pergunta inclui uma instrução sobre como respondá-la.\n\nPor exemplo, use teclas de direção para selecionar uma opção. Depois de fazer a escolha, selecione **Enter** para confirmá-la.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n1. Selecione a **funcionalidade** Tab.\n1. Selecione **Azure** como hospedagem front-end.\n1. Não selecione nenhum recurso de nuvem.\n1. Selecione **JavaScript** como linguagem de programação.\n1. Pressione **Inserir** para selecionar a pasta padrão do espaço de trabalho.\n1. Insira `helloworld` como o nome do seu aplicativo. O nome do aplicativo deve ter apenas caracteres alfanuméricos.\n\n  Depois de responder a todas as perguntas, seu projeto será criado.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Faça um tour pelo código-fonte do aplicativo guia\n\nTeams Toolkit fornece todos os componentes para a criação de um aplicativo. Depois de criar o projeto, você pode exibir as pastas e os arquivos do projeto na área **explorer** do Visual Studio Code.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-folder-structure-tab1.png\" alt-text=\"guia hw\" border=\"true\":::\n\nEmbora você esteja livre para escolher qualquer estrutura de interface do usuário (ou não usar nenhuma), este código de modelo de exemplo fornece um scaffolding com React componentes.\n\nEntre outros itens nessa estrutura de diretório, o Toolkit mantém:\n\n| Nome da pasta | Conteúdos |\n| --- | --- |\n| `.fx/configs` | Arquivos de configuração que o usuário pode personalizar para o Teams aplicativo. |\n| - `.fx/configs/config.<envName>.json` | Arquivo de configuração para cada ambiente. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Arquivo de parâmetros para provisionamento do BICEP do Azure para cada ambiente. |\n| - `.fx/configs/projectSettings.json` | Configurações globais de projeto que se aplicam a todos os ambientes. |\n| - `.fx/configs/localSettings.json` | Arquivo de configuração para depuração local. |\n| - `.fx/states` | Provisione a saída gerada pelo Teams Toolkit.  O kit de ferramentas cria essa pasta depois que você provisiona recursos para seu aplicativo. |\n| - `.fx/states/state.<envName>.json` | Provisione o arquivo de saída para cada ambiente. |\n| - `.fx/states/<env>.userdata` | Dados confidenciais do usuário para a saída de provisionamento para cada ambiente. |\n| `tabs` | Código para a funcionalidade tab necessária em runtime, como o aviso de privacidade, os termos de uso e as guias de configuração. |\n| - `tabs/src/index.jsx` | Ponto de entrada para o aplicativo de front-end, em que o componente principal do aplicativo é renderizado com `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Código para lidar com o roteamento de URL no aplicativo. Ele chama o [Microsoft Teams JavaScript client SDK](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) para estabelecer a comunicação entre seu aplicativo e o Teams. |\n| - `tabs/src/components/Tab.jsx` | Código para implementar a interface do usuário do seu aplicativo. |\n| - `tabs/src/components/TabConfig.jsx` | Código para implementar a interface do usuário que configura seu aplicativo. |\n| `templates/appPackage` | Arquivos de modelo de manifesto do aplicativo e os ícones do aplicativo: color.png e outline.png. |\n| - `templates/appPackage/manifest.local.template.json` | Manifesto do aplicativo para executar o aplicativo no ambiente local  |\n| - `templates/appPackage/manifest.remote.template.json` | Manifesto do aplicativo para executar o aplicativo em um ambiente remoto, como um site do Azure |\n| `templates/azure` | Arquivos de modelo BICEP |\n\nQuando você adiciona a funcionalidade de nuvem, Teams Toolkit adiciona as pastas necessárias ao projeto. A `api` pasta mantém o código em qualquer Azure Functions você escreve.\n"
- title: Compilar e executar seu primeiro aplicativo de guia
  durationInMinutes: 1
  content: "\nDepois de configurar o workspace do projeto com Teams Toolkit, crie seu projeto de guia. Você precisará entrar em sua conta de Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Entre em sua conta Microsoft 365 usuário\n\nUse sua Microsoft 365 para entrar no Teams. Se você estiver usando um locatário Microsoft 365 programa de desenvolvedor, a conta de administrador configurada durante o registro será sua Microsoft 365 conta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.\n1. Selecione **Entrar no M365**.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n\n1. Entre em sua conta Microsoft 365 usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n1. Retorne ao Teams Toolkit dentro Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra o nome Microsoft 365 conta. Teams Toolkit **exibirá o Sideload habilitado se** o sideload estiver habilitado para sua Microsoft 365 conta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de tela mostrando onde entrar no Microsoft 365 e no Azure.\" border=\"false\":::\n\n    Agora você está pronto para compilar o aplicativo e execute-o no ambiente local!\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Agora que o ambiente de desenvolvimento está configurado, você pode criar, compilar e implantar seu primeiro Teams aplicativo.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Compilar e executar seu aplicativo localmente em Visual Studio Code\n\nPara compilar e executar seu aplicativo localmente:\n\n1. No Visual Studio Code, selecione **F5** para executar o aplicativo no modo de depuração.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Saiba o que acontece quando você executa seu aplicativo localmente no depurador.</summary>\n\n    Caso esteja se perguntando, ao pressionar a tecla **F5**, Teams Toolkit:\n\n    1. Verifica os seguintes pré-requisitos:\n      * Você está conectado com uma conta Microsoft 365 cliente.\n      * O sideload está habilitado para sua conta Microsoft 365 usuário.\n      * A versão Node.js com suporte está instalada.\n      * Os pacotes NPM para o aplicativo guia são instalados.\n      * O certificado de desenvolvimento para localhost está instalado.           \n      * A porta está disponível para o aplicativo guia.\n\n      > [!NOTE]\n      > Se Teams Toolkit não conseguir verificar um pré-requisito específico, ele solicitará que você o verifique.\n\n    2. Registra o aplicativo no Azure AD e configura o aplicativo.\n    3. Registra o aplicativo no Teams Portal do Desenvolvedor e configura o aplicativo.\n    4. Inicia o aplicativo guia.\n    5. Inicia Teams em um navegador da Web e o sideload do aplicativo guia.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Captura de tela mostrando quando a tecla F5 é pressionada.\":::\n\n    > [!NOTE]\n    > Quando você executa o aplicativo pela primeira vez, todas as dependências são baixadas e o aplicativo é criado. Uma janela do navegador é aberta quando o build é concluído. Esse processo pode levar de 3 a 5 minutos para ser concluído.\n\n    O kit de ferramentas solicita que você instale um certificado local, se necessário. Esse certificado permite que o Teams carregue seu aplicativo a partir de `https://localhost`.\n\n1. Selecione **Sim** se a caixa de diálogo a seguir for exibida:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Captura de tela mostrando o prompt para instalar um certificado SSL para permitir Teams carregar seu aplicativo do localhost.\":::\n\n    Ou selecione **Continuar**, dependendo do sistema operacional:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Captura de tela mostrando o prompt para instalar um certificado SSL para permitir Teams carregar seu aplicativo do localhost no Mac.\":::\n\n    Teams cliente Web é aberto em uma janela do navegador.\n\n1. Entre com sua conta Microsoft 365, se solicitado.\n\n1. Selecione **Adicionar** quando solicitado a fazer sideload do aplicativo Teams em seu computador local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Adicionar o aplicativo ao Teams\":::\n\n1. Parabéns, seu primeiro aplicativo está em execução no Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-debug.png\" alt-text=\"Captura de tela do aplicativo concluído\":::\n\n1. Percorrer a página para exibir os detalhes do usuário.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-authorize.png\" alt-text=\"Captura de tela da seção de informações do usuário na guia\":::\n    \n1. Selecione **Autorizar** para permitir que seu aplicativo recupere detalhes do usuário usando o Microsoft Graph.\n\n    O aplicativo solicita permissão para conceder acesso para exibir detalhes do usuário.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-graph-permission.png\" alt-text=\"Captura de tela da autorização do aplicativo para acessar detalhes do usuário\":::\n\n1. Selecione **Aceitar para** permitir que seu aplicativo acesse os detalhes do usuário.\n\n    Sua fotografia e detalhes aparecem em suas guias pessoais.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-user-info.png\" alt-text=\"Captura de tela das informações do usuário na guia\":::\n\n    Você pode fazer atividades normais de depuração, como definir pontos de interrupção, como se fosse qualquer outro aplicativo Web. O aplicativo dá suporte à recarga dinâmica. Se você alterar qualquer arquivo dentro do projeto, a página será recarregada.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Saiba como solucionar problemas se o aplicativo não for executado localmente.</summary>\n\n  Para executar seu aplicativo com êxito Teams, verifique se você habilitou o sideload em sua Teams conta. Você pode saber mais sobre o sideload na seção Pré-requisitos.\n\n  </details>\n\n  Você sabe como usar o Toolkit para configurar um aplicativo guia e execute-o localmente. Em seguida, vamos aprender a criar um chatbot de conversação com Toolkit!\n"
- title: Criar workspace do projeto para seu aplicativo de bot
  durationInMinutes: 1
  content: "\nVocê criou seu aplicativo de guia. Agora vamos criar seu primeiro aplicativo de bot.\n\nA funcionalidade do bot de um Teams cria um chatbot ou um bot de conversa. Você o usa para executar tarefas simples e automatizadas, como fornecer atendimento ao cliente. Um bot conversa com um serviço Web e ajuda você a usar suas ofertas. Você pode obter a previsão do tempo, fazer reservas ou qualquer outro serviço oferecido usando um bot de conversação.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos. O bot está realçado.\" border=\"false\":::\n\nComo você já se preparou para criar esses aplicativos, você pode configurar um novo projeto de Teams para criar o aplicativo de bot.\n\nNeste tutorial, você aprenderá:\n\n1. [Como configurar um novo projeto de Bot com o Teams Toolkit.](#create-your-bot-project-workspace)\n1. [Sobre a estrutura de diretório do seu projeto de aplicativo.](#take-a-tour-of-the-bot-app-source-code)\n\n> [!IMPORTANT]\n> Atualmente, os bots estão disponíveis no Nuvem da Comunidade Governamental (GCC), mas não estão disponíveis no GCC-High e departamento de defesa (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Criar seu workspace de projeto de bot\n\nSe os pré-requisitos estão em vigor, vamos começar!\n\n> [!NOTE]\n> A Visual Studio Code da interface do usuário mostrada é do Mac. Ele pode ser diferente dependendo do seu sistema operacional, Teams Toolkit versão e ambiente.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\" border=\"false\":::\n\n1. Selecione **Criar um novo Teams para** criar um aplicativo usando o Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Início do assistente para Criar Novo Projeto\" border=\"false\":::\n\n1. Selecione **Bot**, desmarque **Tab** e selecione **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-capabilities-bot.png\" alt-text=\"Captura de tela mostrando como adicionar capacidades ao seu novo aplicativo.\" border=\"false\":::\n\n1. Selecione **JavaScript** na seção **Linguagem de** Programação.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language-bot.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"false\":::\n\n1. Insira um nome adequado para seu aplicativo, como `hellobot`. Verifique se o nome do aplicativo é alfanumérico. Selecione **Enter** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/enter-name-bot.png\" alt-text=\"Captura de tela mostrando onde inserir o nome do aplicativo.\" border=\"false\":::\n\n    Seu Teams aplicativo com uma funcionalidade de Bot é criado em alguns segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-created-bot.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\" border=\"false\":::\n\n    Depois que o aplicativo é criado, o Teams Toolkit exibe uma mensagem para indicar o local em que o workspace do projeto é criado. Essa pasta é o local padrão especificado nas Visual Studio Code configurações.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensagem de localização\":::\n\n    A mensagem oferece duas opções:\n    \n    - **Alterar local**\n    - **Depuração local**\n    \n    Para este tutorial, você não precisa usar essas opções.\n\n    > [!NOTE]\n    > Se você optar por alterar o local do workspace, ele será refletido somente para projetos criados após o recarregamento Visual Studio Code. Nenhuma alteração é feita no local dos projetos existentes.\n\n<details>\n<summary>Uma recapitulação rápida da criação de um Teams aplicativo.</summary>\nAssista a esta breve recapitulação para criar um Teams aplicativo.\n\n![Criar um Teams aplicativo](~/assets/videos/javascript-bot-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nUse a CLI `teamsfx` para criar o seu primeiro projeto.  Inicie pela pasta onde deseja criar a pasta do projeto.\n\n``` bash\nteamsfx new\n```\n\nVocê pode usar a CLI para criar um novo Teams aplicativo. A CLI orienta você por uma série de perguntas. Cada pergunta inclui uma instrução sobre como respondá-la.\n\nPor exemplo, use teclas de direção para selecionar uma opção. Depois de fazer a escolha, selecione **Enter** para confirmá-la.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n1. Selecione **Bot** e desmarque **Tab**.\n1. Selecione **JavaScript** como linguagem de programação.\n1. Selecione **Enter** para selecionar a pasta de workspace padrão.\n1. Insira um nome adequado para seu aplicativo, como `HelloBot`.  O nome do aplicativo deve consistir apenas de caracteres alfanuméricos.\n\nDepois de responder a todas as perguntas, seu projeto será criado.\n\n---\n\n## <a name=\"take-a-tour-of-the-bot-app-source-code\"></a>Faça um tour pelo código-fonte do aplicativo de bot\n\nDepois que o scaffolding for concluído, exiba os diretórios e arquivos do projeto na área explorer do Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/hw-folder-structure-bot.png\" alt-text=\"Project arquivos scaffolded para bot no Visual Studio Code.\" border=\"false\":::\n\n| Nome da pasta | Conteúdos |\n| --- | --- |\n| `.fx/configs` | Arquivos de configuração que o usuário pode personalizar para o Teams aplicativo. |\n| `.fx/configs/config.<envName>.json` | Arquivo de configuração para cada ambiente. |\n| `.fx/configs/azure.parameters.<envName>.json` | Arquivo de parâmetros para provisionamento do BICEP do Azure para cada ambiente. |\n| `.fx/configs/projectSettings.json` | Configurações globais de projeto que se aplicam a todos os ambientes. |\n| `.fx/configs/localSettings.json` | Arquivo de configuração para depuração local. |\n| `.fx/states` | Provisionar a saída gerada pelo Toolkit.  O kit de ferramentas cria essa pasta depois que você provisiona recursos para seu aplicativo. |\n| `.fx/states/state.<envName>.json` | Provisione o arquivo de saída para cada ambiente. |\n| `.fx/states/<env>.userdata` | Dados confidenciais do usuário para a saída de provisionamento para cada ambiente. |\n| `bot` |  Código para a funcionalidade do Bot necessária em runtime. |\n| `bot/teamsBot.js` | Ponto de entrada principal para o aplicativo de bot. |\n| `templates/appPackage` | Arquivos de modelo de manifesto do aplicativo e os ícones do aplicativo, color.png e outline.png. |\n| `templates/appPackage/manifest.local.template.json` | Manifesto do aplicativo para executar o aplicativo no ambiente local  |\n| `templates/appPackage/manifest.remote.template.json` | Manifesto do aplicativo para executar o aplicativo em um ambiente remoto, como o site do Azure |\n| `templates/azure` | Arquivos de modelo BICEP |\n\n> [!Tip]\n> Familiarize-se com os bots fora do Teams antes de integrar o seu primeiro bot dentro do Teams.\n"
- title: Criar e executar seu primeiro aplicativo de bot
  durationInMinutes: 1
  content: "\nDepois de configurar o workspace do projeto com Teams Toolkit, crie seu projeto de bot. Verifique se você entrou em sua conta Microsoft 365 usuário.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Entre em sua conta Microsoft 365 usuário\n\nUse essa conta para entrar no Teams. Se você estiver usando um locatário Microsoft 365 programa de desenvolvedor, a conta de administrador configurada durante o registro será sua Microsoft 365 conta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.  \n1. Selecione **Entrar no M365**.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n\n1. Entre em sua conta Microsoft 365 usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n1. Retorne ao Teams Toolkit dentro Visual Studio Code.\n\n    Use essa conta para entrar no Teams. Se você estiver usando um locatário Microsoft 365 programa de desenvolvedor, a conta de administrador configurada durante o registro será sua Microsoft 365 conta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de tela mostrando onde entrar no Microsoft 365 e no Azure.\" border=\"false\":::\n\n    Agora você está pronto para compilar o aplicativo e execute-o localmente!\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Agora que o ambiente de desenvolvimento está configurado, você pode criar, compilar e implantar seu primeiro Teams aplicativo.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Criar e executar seu primeiro aplicativo de bot localmente\n\nPara compilar e executar seu aplicativo no ambiente local:\n\n1. Selecione **F5** no Visual Studio Code para executar seu aplicativo no modo de depuração.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Saiba o que acontece quando você executa seu aplicativo localmente no depurador.</summary>\n\n    Caso esteja se perguntando, ao pressionar a tecla **F5**, a Teams Toolkit:\n\n    1. Verifica todos os seguintes pré-requisitos:\n      - Você está conectado com uma conta Microsoft 365 cliente.\n      - O sideload está habilitado para sua conta Microsoft 365 usuário.\n      - A versão Node.js com suporte está instalada.\n      - Os pacotes NPM para o aplicativo de bot são instalados.\n      - O Ngrok está instalado.\n      - A porta exigida pelo aplicativo de bot está disponível.\n\n      > [!NOTE]\n      > Se Teams Toolkit não conseguir verificar um pré-requisito específico, ele solicitará que você o verifique.\n\n    2. Inicia o Ngrok para criar um túnel HTTP.\n    3. Registra o aplicativo no Azure AD e configura o aplicativo.\n    4. Registra o aplicativo de bot no Bot Framework e configura o aplicativo de bot.\n    5. Registra o aplicativo no Teams Portal do Desenvolvedor e configura o aplicativo.\n    6. Inicia o aplicativo de bot.\n    7. Inicia Teams em um navegador da Web e o sideload do aplicativo de bot.\n\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Captura de tela mostrando quando a tecla F5 é pressionada para depuração.\":::\n\n    > [!NOTE]\n    > Quando você executa o aplicativo pela primeira vez, todas as dependências são baixadas e o aplicativo é criado. Uma janela do navegador é aberta automaticamente quando a compilação é concluída. Esse processo pode levar de 3 a 5 minutos para ser concluído.\n\n    Teams executa seu aplicativo em um navegador da Web.\n\n1. Entre com sua conta Microsoft 365, se solicitado.\n\n1. Selecione **Adicionar** quando solicitado a fazer sideload do aplicativo Teams em seu computador local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/add-bot-app-local-debug.png\" alt-text=\"Captura de tela mostrando que o bot está sendo adicionado Teams cliente.\":::\n\n    Agora o bot está sendo executado com êxito Teams! Depois que o aplicativo é carregado, uma sessão de chat com o bot é aberta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-added-bot-local-debug.png\" alt-text=\"Captura de tela mostrando que o bot está em execução Teams cliente.\":::\n\n    Você pode digitar para `welcome` mostrar um cartão de introdução e digitar para `learn` ir para a documentação de comando de bot e cartão adaptável.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-app-learn-local-debug.png\" alt-text=\"Captura de tela mostrando o cartão de aprendizado no bot Teams cliente.\":::       \n\n    Você pode fazer atividades normais de depuração, como definir pontos de interrupção, como com qualquer outro aplicativo Web. Abra o arquivo `bot/teamsBot.js` e localize o método `onMessage()`. Defina um ponto de interrupção em qualquer caso. Em seguida, digite algum texto.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Saiba como solucionar problemas se o aplicativo não for executado localmente.</summary>\n\n  Para executar seu aplicativo com êxito Teams, verifique se você habilitou o sideload em sua Teams conta. Você pode saber mais sobre o sideload na seção Pré-requisitos.\n\n  > [!IMPORTANT]\n  > Atualmente, os aplicativos de sideload estão disponíveis em Nuvem da Comunidade Governamental (GCC), GCC-Alta e DOD.\n\n  > [!TIP]\n  > Verifique se há problemas antes de realizar o sideload do aplicativo usando a ferramenta [de validação de aplicativo](https://dev.teams.microsoft.com/appvalidation.html). Essa ferramenta está incluída no kit de ferramentas. Corrija os erros para realizar o sideload do aplicativo.\n  </details> \n"
- title: Criar workspace do projeto para seu aplicativo de extensão de mensagens
  durationInMinutes: 1
  content: "\nVocê criou seu aplicativo de bot. Agora, vamos criar seu primeiro aplicativo de extensão de mensagens.\n\nA funcionalidade extensão de mensagens permite que você interaja com um serviço Web. Use a área de composição, a caixa de comando ou um sistema de mensagens Teams cliente para pesquisar e iniciar ações em um sistema externo.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos. a extensão de mensagens está realçada.\" border=\"false\":::\n\nHá dois tipos de **extensões de mensagens** do Teams:\n\n- [Comandos de pesquisa](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md): você pode pesquisar sistemas externos. Em seguida, você pode inserir seus resultados em uma mensagem na forma de um cartão.\n- [Comandos de](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md) ação: você pode apresentar aos usuários um pop-up modal para coletar ou exibir informações. Em seguida, você pode processar a interação deles e enviar informações de volta para Teams.\n\nVamos criar um aplicativo de extensão de mensagens com um *comando de pesquisa*. Use-o para pesquisar dados externos e inserir os resultados em uma mensagem Teams cliente.\n\nComo você já se preparou para criar esses aplicativos, você pode configurar um novo projeto de Teams para criar o aplicativo de extensão de mensagens.\n\n> [!NOTE]\n> As extensões de mensagens dependem dos bots para fornecer uma caixa de diálogo entre o usuário e seu código.\n\n\nNeste tutorial, você aprenderá:\n\n1. [Como configurar um novo projeto de Extensão de Mensagens com Teams Toolkit.](#create-your-messaging-extension-project-workspace)\n1. [Sobre a estrutura de diretório do seu projeto de aplicativo.](#take-a-tour-of-the-messaging-extension-app-source-code)\n\n## <a name=\"create-your-messaging-extension-project-workspace\"></a>Criar seu workspace de projeto de extensão de mensagens\n\nSe os pré-requisitos estão em vigor, vamos começar!\n\n> [!NOTE]\n> A Visual Studio Code da interface do usuário mostrada é do Mac. Ele pode ser diferente dependendo do seu sistema operacional, Toolkit versão e ambiente.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Criar Project** no lado esquerdo do Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\" border=\"false\":::\n\n1. Selecione **Criar Novo Project** para criar um aplicativo usando o Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Início do assistente para Criar Novo Projeto\" border=\"false\":::\n\n1. Selecione **Extensão de Mensagens**, desmarque **Tab** e selecione **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-mex.png\" alt-text=\"Captura de tela mostrando como adicionar capacidades ao seu novo aplicativo.\" border=\"false\":::\n\n1. Selecione **JavaScript** como linguagem de programação.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-language-mex.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"false\":::\n\n1. Insira um nome adequado para seu aplicativo. Verifique se o nome do aplicativo é alfanumérico. Selecione **Enter** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/enter-name-mex.png\" alt-text=\"Captura de tela mostrando como inserir o nome do aplicativo.\" border=\"false\":::\n\n    Teams Toolkit criar o aplicativo em alguns segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created-mex.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\" border=\"false\":::\n\n    Depois que o aplicativo é criado, o Teams Toolkit exibe uma mensagem para indicar o local em que o workspace do projeto é criado. Esse é o local padrão especificado nas Visual Studio Code configurações.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensagem de localização\":::\n\n    A mensagem oferece duas opções:\n    \n    - **Alterar local**\n    - **Depuração local**\n    \n    Para este tutorial, você não precisa usar essas opções.\n\n    > [!NOTE]\n    > Se você optar por alterar o local do workspace, ele será refletido somente para projetos criados após o recarregamento Visual Studio Code. Nenhuma alteração é feita no local dos projetos existentes.\n\n  <details>\n  <summary>Uma recapitulação rápida da criação de um Teams aplicativo.</summary>\n  Assista a esta breve recapitulação para criar um Teams aplicativo.\n\n  ![Criar um Teams aplicativo](~/assets/videos/javascript-msg-ext-app.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nUse a CLI `teamsfx` para criar o seu primeiro projeto. Inicie pela pasta onde deseja criar a pasta do projeto.\n\n``` bash\nteamsfx new\n```\n\nVocê pode usar a CLI para criar um novo Teams aplicativo. A CLI orienta você por uma série de perguntas. Cada pergunta inclui uma instrução sobre como respondá-la.\n\nPor exemplo, use teclas de direção para selecionar uma opção. Depois de fazer a escolha, selecione **Enter** para confirmá-la.\n\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n1. Selecione **Extensão de** Mensagem e desmarque **a guia**.\n1. Selecione **JavaScript** como linguagem de programação.\n1. Selecione **Enter** para selecionar a pasta de workspace padrão.\n1. Insira um nome adequado para seu aplicativo, como `HelloMsgExtn`.  O nome do aplicativo deve consistir apenas de caracteres alfanuméricos.\n\n  Depois que todas as perguntas forem respondidas, seu projeto será criado.\n\n---\n\n## <a name=\"take-a-tour-of-the-messaging-extension-app-source-code\"></a>Faça um tour pelo código-fonte do aplicativo de extensão de mensagens\n\nUma extensão de mensagens usa o Bot Framework. Use-o para interagir com seu serviço por meio de uma conversa. Depois que o scaffolding for concluído, exiba os diretórios e arquivos do projeto na área explorer do Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/hw-folder-structure-mex.png\" alt-text=\"Layout de arquivo de um projeto de bot\" border=\"false\":::\n\n| Nome da pasta | Conteúdos |\n| --- | --- |\n| `.fx/configs` | Arquivos de configuração que o usuário pode personalizar para o Teams aplicativo. |\n| `.fx/configs/config.<envName>.json` | Arquivo de configuração para cada ambiente. |\n| `.fx/configs/azure.parameters.<envName>.json` | Arquivo de parâmetros para provisionamento do BICEP do Azure para cada ambiente. |\n| `.fx/configs/projectSettings.json` | Configurações globais de projeto que se aplicam a todos os ambientes. |\n| `.fx/configs/localSettings.json` | Arquivo de configuração para depuração local. |\n| `.fx/states` | Provisionar a saída gerada pelo Toolkit.  O kit de ferramentas cria essa pasta depois que você provisiona recursos para seu aplicativo. |\n| `.fx/states/state.<envName>.json` | Provisione o arquivo de saída para cada ambiente. |\n| `.fx/states/<env>.userdata` | Dados confidenciais do usuário para a saída de provisionamento para cada ambiente. |\n| `bot` |  Código para o Bot necessário em runtime. |\n| `bot/messageExtensionBot.js` | Ponto de entrada principal para o aplicativo de extensão de mensagens. |\n| `templates/appPackage` | Arquivos de modelo de manifesto do aplicativo e os ícones do aplicativo, color.png e outline.png. |\n| `templates/appPackage/manifest.local.template.json` | Manifesto do aplicativo para executar o aplicativo no ambiente local  |\n| `templates/appPackage/manifest.remote.template.json` | Manifesto do aplicativo para executar o aplicativo em um ambiente remoto, como o site do Azure |\n| `templates/azure` | Arquivos de modelo BICEP |\n\n> [!Tip]\n> Familiarize-se com bots e extensão de mensagens fora do Teams antes de integrar seu aplicativo Teams.\n"
- title: Criar e executar seu primeiro aplicativo de extensão de mensagens
  durationInMinutes: 1
  content: "\nDepois de configurar o workspace do projeto com Teams Toolkit, compile seu projeto. Você precisará entrar em sua conta de Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Entre em sua conta Microsoft 365 usuário\n\nUse essa conta para entrar no Teams. Se você estiver usando um locatário Microsoft 365 programa de desenvolvedor, a conta de administrador configurada durante o registro será sua Microsoft 365 conta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.  \n1. Selecione **Entrar no M365**.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n\n1. Entre em sua conta Microsoft 365 usuário.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n1. Retorne ao Teams Toolkit dentro Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra o nome Microsoft 365 conta. O Teams Toolkit exibirá **Sideload habilitado** se o sideload estiver habilitado para sua Microsoft 365 conta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de tela mostrando onde entrar no Microsoft 365 e no Azure.\" border=\"false\":::\n\n    Agora você está pronto para compilar o aplicativo e execute-o localmente!\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Agora que o ambiente de desenvolvimento está configurado, você pode criar, compilar e implantar seu primeiro Teams aplicativo.\n\n---\n\n## <a name=\"build-and-run-your-app-in-the-local-environment\"></a>Compilar e executar seu aplicativo no ambiente local\n\nUma extensão de mensagens permite que você interaja com um serviço Web. Ele aproveita o recurso de mensagens e a comunicação segura de um bot. O aplicativo de extensão de mensagens é adicionado a um serviço Web registrado como um bot. \n\n### <a name=\"build-and-run-your-app-locally\"></a>Compilar e executar seu aplicativo localmente\n\n1. Selecione **F5** no Visual Studio Code para executar seu aplicativo no modo de depuração.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Saiba o que acontece quando você executa seu aplicativo localmente no depurador.</summary>\n\n    Quando você seleciona **F5**, o Teams Toolkit:\n\n    1. Verifica todos os seguintes pré-requisitos:\n      - Você está conectado com uma conta Microsoft 365 cliente.\n      - O sideload está habilitado para sua conta Microsoft 365 usuário.\n      - A versão Node.js com suporte está instalada.\n      - Os pacotes NPM para o aplicativo de bot são instalados.\n      - O Ngrok está instalado.\n      - A porta exigida pelo aplicativo de bot está disponível.\n\n      > [!NOTE]\n      > Se Teams Toolkit não conseguir verificar um pré-requisito específico, ele solicitará que você o verifique.\n\n    2. Inicia o Ngrok para criar um túnel HTTP.\n    3. Registra o aplicativo no Azure AD e configura o aplicativo.\n    4. Registra o aplicativo de bot no Bot Framework e configura o aplicativo.\n    5. Registra o aplicativo no Teams Portal do Desenvolvedor e configura o aplicativo.\n    6. Inicia o aplicativo de extensão de mensagens hospedado localmente.\n    7. Inicia Teams em um navegador da Web e o sideload do Teams aplicativo.\n    \n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/f5-build-and-run-mex.png\" alt-text=\"Captura de tela mostrando quando a tecla F5 é pressionada para depurar.\":::\n\n    > [!NOTE]\n    > Quando você executa o aplicativo pela primeira vez, todas as dependências são baixadas e o aplicativo é criado. Uma janela do navegador é aberta quando o build é concluído. Esse processo pode levar de 3 a 5 minutos para ser concluído.\n\n    Teams executar seu aplicativo em um navegador da Web.\n    \n1. Entre com sua conta Microsoft 365, se solicitado.\n1. Selecione **Adicionar** para adicionar o aplicativo à sua conta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/add-mex-app-local-debug.png\" alt-text=\"Captura de tela que mostra a mensagem para adicionar o aplicativo\" border=\"false\":::\n\n    O kit de ferramentas exibe uma mensagem para indicar que o aplicativo foi adicionado Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-added-local-debug.png\" alt-text=\"Captura de tela que mostra a mensagem para experimentar o aplicativo agora ou mais tarde\" border=\"true\":::\n\n    - Se você selecionar **Obter,** poderá experimentar o aplicativo mais tarde na lista de aplicativos de Sideload.\n    - Se você selecionar **Experimentar**, Teams carregará seu aplicativo.\n\n1. Selecione **Experimentar**.\n\n    O aplicativo extensão de mensagens é carregado em um aplicativo de chatbot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/app-added-mex-local-debug.png\" alt-text=\"Captura de tela que mostra o sideload do aplicativo Teams\" border=\"false\":::\n\n    Como os aplicativos de extensão de mensagens dependem de bots para habilitar a comunicação entre o usuário e o serviço Web, seu aplicativo é carregado em um recurso de chat de um bot.\n\n    - Se você criou um aplicativo de bot antes de criar o aplicativo de extensão de mensagens, poderá ver que ele está carregado no mesmo aplicativo de bot que você criou. As mensagens de chat anteriores estão visíveis.\n    - Se você criou uma extensão de mensagens primeiro, seu aplicativo será carregado em qualquer chat aberto no Teams.\n\n### <a name=\"test-your-app\"></a>Testar seu aplicativo\n\nNa primeira vez que seu aplicativo for carregado, o aplicativo de extensão de mensagens estará aberto para você testar. Este aplicativo de exemplo permite pesquisar pacotes npm de software livre no registro de software.\n\n#### <a name=\"to-run-a-search-query\"></a>Para executar uma consulta de pesquisa\n\n1. Vamos inserir uma cadeia de caracteres de pesquisa na caixa de pesquisa, como \"cli\". Você obterá uma lista dos itens correspondentes:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/mex-search-string.png\" alt-text=\"Captura de tela que mostra como usar o aplicativo para pesquisa\" border=\"true\":::\n\n1. Selecione um dos resultados da pesquisa. Ele será exibido na área de composição para que você possa enviar o resultado para o canal.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-result.png\" alt-text=\"Captura de tela que mostra o resultado da pesquisa\" border=\"false\":::\n\n1. Selecione as **instruções enviar** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-sent.png\" alt-text=\"Captura de tela que mostra o resultado da pesquisa enviado no chat\" border=\"false\":::\n\n    Agora, você aprendeu a criar e executar um aplicativo de extensão de mensagens básico!         \n\n## <a name=\"optional-scenarios\"></a>Cenários opcionais\n\nVocê testou o recurso de pesquisa de um aplicativo de extensão de mensagens básico. Agora, você pode experimentar algumas outras funcionalidades desse aplicativo. Esses são cenários opcionais neste aplicativo.\n<br>\n<br>\n<details>\n<summary>Para criar um cartão</summary>\n\n1. Selecione **Criar Cartão**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-added-mex-local-debug.png\" alt-text=\"Captura de tela que mostra como criar um cartão\" border=\"false\":::\n\n1. Insira os detalhes do cartão, conforme mostrado, e selecione **Enviar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-details.png\" alt-text=\"Captura de tela que mostra como adicionar detalhes de um cartão\" border=\"true\":::\n\n    Os detalhes do cartão aparecem na área de composição.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-added.png\" alt-text=\"Captura de tela que mostra como adicionar detalhes de um cartão\" border=\"true\":::\n\n1. Selecione o **ícone Enviar** na área de composição.\n\n    O aplicativo envia o cartão no chat do bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-sent.png\" alt-text=\"Captura de tela que mostra o cartão enviado\" border=\"false\":::\n</details>\n<br>\n<details>\n<summary>Para abrir seu aplicativo na área de composição</summary>\n\nEscolha uma das seguintes maneiras de abrir seu aplicativo.\n\n**Usando `@mention`:**\n\n1. Insira `@your-app-name` a área de comando do seu aplicativo.\n    \n    O aplicativo abre a caixa de pesquisa e você pode usá-la para executar uma consulta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mention-mex-app.png\" alt-text=\"Captura de tela que mostra como @mention aplicativo de extensão de mensagens\" border=\"false\":::\n\n1. Insira uma cadeia de caracteres de pesquisa e selecione uma no resultado da pesquisa.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-box-search.png\" alt-text=\"Captura de tela que mostra como executar uma pesquisa usando o aplicativo de extensão de mensagens\" border=\"false\":::\n\n    Ele é exibido na área de comando como um cartão.\n\n1. Copie o cartão para colá-lo na área de composição.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card.png\" alt-text=\"Captura de tela que mostra o resultado da pesquisa em um cartão\" border=\"false\":::\n    \n1. Envie o cartão usando a área de composição.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card-sent.png\" alt-text=\"Captura de tela que mostra o resultado da pesquisa em um chat\" border=\"false\":::\n\n**Usando o ícone de três pontos:**\n\n1. Inicie a extensão de mensagens de três pontos na parte inferior da área de composição.\n1. Selecione seu aplicativo de extensão de mensagens.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/three-dot-mex.png\" alt-text=\"Captura de tela que mostra como abrir o aplicativo de extensão de mensagens de exemplo\" border=\"false\":::\n\n    O aplicativo de extensão de mensagens é carregado com as opções para executar uma pesquisa e criar cartões adaptáveis.\n</details>\n<br>\n<details>\n<summary>Executar o aplicativo de aplicativos com sideload</summary>\n\nVocê pode abrir um aplicativo Teams sideload na lista de aplicativos com sideload. \n\n1. Selecione o **ícone da** Loja na Teams lateral.\n1. Selecione Gerenciar **aplicativos**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/sideloaded-apps.png\" alt-text=\"Captura de tela que mostra aplicativos com sideload\" border=\"false\":::\n\n1. Selecione o ícone de três pontos para seu aplicativo e, em seguida, selecione **Exibir detalhes**. Você também pode copiar o link para o aplicativo e usá-lo para abrir o aplicativo.\n1. Selecione **Abrir** para carregar o aplicativo e, em seguida, **selecione Experimentar**. \n    \n    O aplicativo é carregado Teams.\n</details>\n<br>\n<br>\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Saiba como solucionar problemas se o aplicativo não for executado localmente.</summary>\n\nPara executar seu aplicativo em Teams, você deve ter uma Microsoft 365 de desenvolvimento que permita o sideload do aplicativo. Você pode saber mais sobre o sideload na seção Pré-requisitos.\n</details>\n"
- title: Implantar seu primeiro Teams aplicativo
  durationInMinutes: 1
  content: "\nVocê aprendeu a criar, compilar e executar um aplicativo Teams com os recursos Tab, Bot e Extensão de Mensagens. A etapa final é implantar seu aplicativo no Azure.\n\nVamos implantar o primeiro aplicativo com a funcionalidade Tab no Azure usando Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Entrar em sua conta do Azure\n\nUse essa conta para acessar o portal Microsoft Azure e provisionar novos recursos de nuvem para dar suporte ao seu aplicativo.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Abra a pasta do projeto na qual você criou o aplicativo guia.\n1. Selecione o Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.  \n1. Selecione **Entrar no Azure**.\n\n    > [!TIP]\n    > Se você tiver a extensão de Conta do Azure instalada e estiver usando a mesma conta, ignore esta etapa. Use a mesma conta que você está usando em outras extensões.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n1. Entre em sua conta do Azure usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra as duas contas separadamente. Ele também lista o número de assinaturas utilizáveis do Azure disponíveis para você. Verifique se você tem pelo menos uma assinatura utilizável do Azure disponível. Caso contrário, saia e use uma conta diferente.\n\n    Agora você está pronto para implantar seu aplicativo no Azure!\n\n    Parabéns, você criou três tipos de Teams aplicativos! \n    Agora, vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Teams Toolkit.\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Parabéns, você criou três tipos de Teams aplicativos! \n    Agora, vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Teams Toolkit.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Saiba o que acontece quando você implanta o seu aplicativo no Azure</summary>\n\n  Antes da implantação, o aplicativo era executado localmente:\n\n  * O back-end é executado usando o **Azure Functions Core Tools**.\n  * O ponto de extremidade HTTP do aplicativo, onde o Microsoft Teams carrega o aplicativo, é executado localmente.\n\n  A implantação é um processo de duas etapas. Você provisiona os recursos em uma assinatura ativa do Azure e, em seguida, implanta ou carrega o código de back-end e front-end do aplicativo no Azure.\n\n  * O back-end, se configurado, usa vários serviços do Azure, incluindo o Serviço de Aplicativo do Azure e o Azure Armazenamento.\n  * O front-end do aplicativo será implantado em uma conta de Armazenamento do Microsoft Azure configurada para hospedagem Web estática.\n\n  </details>\n"
- title: Parabéns!
  durationInMinutes: 1
  content: "\nVocê já fez isso!\n\nVocê criou três aplicativos, cada um com uma funcionalidade diferente: um aplicativo guia, um aplicativo de bot e um aplicativo de extensão de mensagens.\n\nAgora que você aprendeu a criar aplicativos básicos, pode passar para a criação de aplicativos mais complexos. Para começar, tente adicionar recursos aos seus aplicativos existentes.\n\nPara adicionar recursos ao seu aplicativo existente:\n\n1. Selecione **Adicionar funcionalidade na** seção **Desenvolvimento** da barra Teams Toolkit lateral.\n\n1. Selecione a funcionalidade que você deseja adicionar ao seu aplicativo.\n\nIsso é tudo. Teams Toolkit adiciona o scaffolding para a nova funcionalidade à estrutura de diretório do aplicativo. Siga os procedimentos para compilar e implantar o aplicativo, e seu aplicativo terá vários recursos. \n\nVocê concluiu o tutorial para criar aplicativos com JavaScript."
