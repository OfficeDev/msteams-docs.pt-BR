### YamlMime:Tutorial
title: Crie seu primeiro aplicativo de guia usando JavaScript
metadata:
  title: Olá, Mundo com JavaScript
  description: Neste tutorial, você aprenderá a criar um Olá, Mundo com JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 04/05/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Voltar à Introdução geral
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c4cfc63bd658ee1fe4497cc03070e211dc4aa865
  ms.sourcegitcommit: 8dc78c520aaf10ef76fc1f7c927bc54e2a13fe29
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 05/25/2022
  ms.locfileid: "65670745"
items:
- durationInMinutes: 1
  content: "Inicie Microsoft Teams desenvolvimento de aplicativos com seu primeiro Teams aplicativo. Você criará um aplicativo guia com Teams. \n\nSeu aplicativo terá uma funcionalidade, que vem com sua própria interface do usuário e experiência do usuário:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos.\" border=\"false\":::\n\n> [!NOTE]\n> Neste tutorial, você criará um aplicativo guia com Javascript.\n\nNeste tutorial, você aprenderá:\n\n- Como configurar um novo projeto com o Teams Toolkit.\n- Como criar um aplicativo guia.\n- A estrutura do aplicativo:\n    - A parte da guia com JavaScript usando React.\n    - O restante dos recursos com Node.js.\n- Como implantar seu aplicativo.\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará para criar e implantar seus aplicativos.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de ferramentas do Teams](#install-the-teams-toolkit) | Uma Microsoft Visual Studio code que cria um scaffolding de projeto para seu aplicativo. Use a versão 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | O Microsoft Teams para colaborar com todos com quem você trabalha por meio de aplicativos para chats, reuniões, chamadas - tudo em um só lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Ambiente de runtime do JavaScript de back-end. Use a versão mais recente do v16 LTS.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de compilação JavaScript, TypeScript ou Estrutura do SharePoint (SPFx). Use a versão 1.55 ou posterior. |\n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [CLI do Azure](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-end baseado em nuvem para seu Teams aplicativo no Azure. |\n| &nbsp; | [React Developer Tools para Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [React Developer Tools para Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Uma extensão de DevTools do navegador para a biblioteca javaScript React software livre. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, uma ferramenta baseada em navegador que permite executar uma consulta do Microsoft Graph dados. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo do Teams, inclusive para sua organização ou para a loja do Teams. |\n\n\n> [!TIP]\n> Se você trabalha com os dados do Microsoft Graph, deve aprender e marcar o Microsoft Graph Explorer. Essa ferramenta baseada em navegador permite que você consulte o Microsoft Graph fora de um aplicativo.\n\n\n## <a name=\"prepare-development-environment\"></a>Preparar o ambiente de desenvolvimento\n\nDepois de instalar as ferramentas necessárias, configure o ambiente de desenvolvimento.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalar o Teams Toolkit\n\nO Teams Toolkit ajuda a simplificar o processo de desenvolvimento com ferramentas para provisionar e implantar recursos de nuvem para seu aplicativo, publicar na Teams e muito mais. \n \nVocê pode usar o kit de ferramentas com Visual Studio Code, ou a CLI (interface de linha de comando), chamada `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code e selecione o modo **de** exibição Extensões (**Ctrl+Shift+X** / **⌘⇧-X** ou **Exibir > Extensões**).\n1. Na caixa de pesquisa, insira **Teams Toolkit**.\n1. Selecione **Instalar** ao lado do Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"A ilustração mostra a instalação Teams Toolkit extensão.\" border=\"false\":::\n\n O Teams Toolkit ícone é exibido na Visual Studio Code lateral depois que ele é instalado.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"A ilustração mostra o Teams Toolkit na Visual Studio Code lateral.\" border=\"false\":::\n\nVocê também pode encontrar o Teams Toolkit no [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nPara instalar a CLI do TeamsFx, use o gerenciador de `npm` pacotes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nDependendo da configuração, talvez seja necessário usar para `sudo` instalar a CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEssa condição é mais comum no Linux e macOS sistemas.\n\nCertifique-se de adicionar npm cache global ao path. Essa etapa normalmente é feita como parte do Node.js instalador.  \n\nVocê pode usar a CLI com o `teamsfx` comando. Verifique se o comando está funcionando executando `teamsfx -h`.\n\n> [!CAUTION]\n> Antes de executar o TeamsFx em terminais do PowerShell, você deve habilitar a política de execução \"assinada remotamente\" para o PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de Teams desenvolvimento\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, em que você conversa, compartilha arquivos e executa reuniões. Esse espaço também é onde seu sideload e teste seu aplicativo. Vamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre em sua conta Microsoft 365 para exibir essa opção.\n\n > [!NOTE]\n > O sideload é necessário para visualizar e testar aplicativos Teams ambiente local. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode fazer sideload de aplicativos Teams:\n\n 1. No cliente Teams, selecione o **ícone da** Loja.\n 1. Selecione **Gerenciar seus aplicativos**.\n 1. Selecione **Publicar um aplicativo**.\n 1. Procure a opção para Upload **um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado Teams.\":::\n\n     > [!NOTE]\n     > Se você não tiver a opção de carregar um aplicativo personalizado, fale com seu Teams administrador.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário Teams desenvolvedor gratuito (opcional)\n\nSe você não tiver uma conta Teams desenvolvedor, poderá obtê-la gratuitamente. Participe do programa Microsoft 365 desenvolvedor!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, selecione **Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem o **Upload uma opção de aplicativo personalizado** Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você quiser hospedar seu aplicativo ou acessar recursos no Azure, deverá ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configurou sua conta. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar! Selecione o aplicativo que você deseja fazer primeiro.\n"
- title: Criar workspace do projeto para seu aplicativo guia
  durationInMinutes: 1
  content: "\nComece Microsoft Teams desenvolvimento de aplicativos criando seu primeiro aplicativo. Esse aplicativo usa a funcionalidade de tabulação.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Diagrama mostrando que esse aplicativo tem três recursos. A guia está realçada.\" border=\"false\":::\n\nNesta página, você aprenderá:\n1. [Como configurar um novo projeto de guia com o Teams Toolkit](#create-your-tab-project-workspace)\n1. [Sobre a estrutura de diretório do seu aplicativo](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Criar seu workspace de projeto de guia\n\nSe os pré-requisitos estão em vigor, vamos começar!\n\n> [!NOTE]\n> A Visual Studio Code da interface do usuário mostrada é do Mac. Ele pode ser diferente dependendo do seu sistema operacional, Teams Toolkit versão e ambiente.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\" border=\"false\":::\n\n1. Selecione **Criar um novo Teams para** criar um aplicativo usando Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"O assistente é iniciado para criar um novo projeto\" border=\"false\":::\n\n1. Verifique se **Tab** está selecionado como a funcionalidade que você deseja criar em seu aplicativo. Selecione **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tabapp.png\" alt-text=\"Selecionar Funcionalidade do Aplicativo\" border=\"false\":::\n\n1. Selecione **JavaScript** como linguagem de programação.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"false\":::\n\n1. Selecione a **pasta workspace** escolhendo a pasta necessária.  \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-folder.png\" alt-text=\"select-folder\" border=\"false\":::\n\n1. Insira `helloworld` como o nome do aplicativo. Certifique-se de usar apenas caracteres alfanuméricos. Selecione **Enter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab.png\" alt-text=\"Captura de tela mostrando onde inserir o nome do aplicativo.\" border=\"false\":::\n\n    O aplicativo Teams guia é criado em alguns segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tap-app-created1.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\" border=\"false\":::\n\n    Depois que seu aplicativo é criado, Teams Toolkit exibe a seguinte mensagem:.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/preview-project.png\" alt-text=\"Visualização Project.\" border=\"false\":::\n    \n    Você pode selecionar **a depuração local** para visualizar seu projeto. \n    \n    <details>\n    <summary>Uma recapitulação rápida da criação de um Teams aplicativo.</summary>\n    Assista a esta breve recapitulação para criar um Teams aplicativo.\n\n    ![Criar um aplicativo do Teams](~/assets/videos/javascript-tab-app1.gif) </details>\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nUse a CLI `teamsfx` para criar o seu primeiro projeto. Inicie pela pasta onde deseja criar a pasta do projeto.\n\n``` bash\nteamsfx new\n```\n\nVocê pode usar a CLI para criar um novo Teams aplicativo. A CLI orienta você por uma série de perguntas. Cada pergunta inclui uma instrução sobre como respondá-la.\n\nPor exemplo, use teclas de direção para selecionar uma opção. Depois de fazer a escolha, selecione **Enter** para confirmá-la.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n1. Selecione a **funcionalidade** Tab.\n1. Selecione **Azure** como hospedagem front-end.\n1. Não selecione nenhum recurso de nuvem.\n1. Selecione **JavaScript** como linguagem de programação.\n1. Pressione **Inserir** para selecionar a pasta padrão do espaço de trabalho.\n1. Insira `helloworld` como o nome do seu aplicativo. O nome do aplicativo deve ter apenas caracteres alfanuméricos.\n\n  Depois de responder a todas as perguntas, seu projeto será criado.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Faça um tour pelo código-fonte do aplicativo guia\n\nTeams Toolkit fornece todos os componentes para a criação de um aplicativo. Depois de criar o projeto, você pode exibir as pastas e os arquivos do projeto na área **explorer** do Visual Studio Code.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-folder-structure-tab12.png\" alt-text=\"guia estrutura\" border=\"true\":::\n\n\nEmbora você esteja livre para escolher qualquer estrutura de interface do usuário (ou não usar nenhuma), este código de modelo de exemplo fornece um scaffolding com React componentes.\n\nEntre outros itens nessa estrutura de diretório, o Toolkit mantém:\n\n| Nome da pasta | Conteúdos |\n| --- | --- |\n| `.fx/configs` | Arquivos de configuração que o usuário pode personalizar para o Teams aplicativo. |\n| - `.fx/configs/config.<envName>.json` | Arquivo de configuração para cada ambiente. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Arquivo de parâmetros para provisionamento do BICEP do Azure para cada ambiente. |\n| - `.fx/configs/projectSettings.json` | Configurações globais de projeto que se aplicam a todos os ambientes. |\n| - `.fx/states` | Provisione a saída gerada pelo Teams Toolkit.  O kit de ferramentas cria essa pasta depois que você provisiona recursos para seu aplicativo. |\n| - `.fx/states/state.<envName>.json` | Provisione o arquivo de saída para cada ambiente. |\n| - `.fx/states/<env>.userdata` | Dados confidenciais do usuário para a saída de provisionamento para cada ambiente. |\n| `tabs` | Código para a funcionalidade tab necessária em runtime, como o aviso de privacidade, os termos de uso e as guias de configuração. |\n| - `tabs/src/index.jsx` | Ponto de entrada para o aplicativo de front-end, em que o componente principal do aplicativo é renderizado com `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Código para lidar com o roteamento de URL no aplicativo. Ele chama o [Microsoft Teams JavaScript client SDK](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) para estabelecer a comunicação entre seu aplicativo e o Teams. |\n| - `tabs/src/components/Tab.jsx` | Código para implementar a interface do usuário do seu aplicativo. |\n| - `tabs/src/components/TabConfig.jsx` | Código para implementar a interface do usuário que configura seu aplicativo. |\n| `templates/appPackage` | Arquivos de modelo de manifesto do aplicativo e os ícones do aplicativo: color.png e outline.png. |\n| - `templates/appPackage/manifest.template.json` | Manifesto do aplicativo para executar o aplicativo no ambiente local ou remoto.  |\n| `templates/azure` | Arquivos de modelo BICEP |\n\nQuando você adiciona a funcionalidade de nuvem, Teams Toolkit adiciona as pastas necessárias ao projeto. A `api` pasta mantém o código em qualquer Azure Functions você escreve.\n"
- title: Compilar e executar seu primeiro aplicativo de guia
  durationInMinutes: 1
  content: "\nDepois de configurar o workspace do projeto com Teams Toolkit, crie seu projeto de guia. Você precisará entrar em sua conta de Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Entre em sua conta Microsoft 365 usuário\n\nUse sua Microsoft 365 para entrar no Teams. Se você estiver usando um locatário Microsoft 365 programa de desenvolvedor, a conta de administrador configurada durante o registro será sua Microsoft 365 conta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.\n1. Selecione **Entrar no M365**.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n\n1. Entre em sua conta Microsoft 365 usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n1. Retorne ao Teams Toolkit dentro Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra o nome Microsoft 365 conta. Teams Toolkit **exibirá o Sideload habilitado se** o sideload estiver habilitado para sua Microsoft 365 conta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de tela mostrando onde entrar no Microsoft 365 e no Azure.\" border=\"false\":::\n\n    Agora você está pronto para compilar o aplicativo e execute-o no ambiente local!\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Agora que o ambiente de desenvolvimento está configurado, você pode criar, compilar e implantar seu primeiro Teams aplicativo.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Compilar e executar seu aplicativo localmente em Visual Studio Code\n\nPara compilar e executar seu aplicativo localmente:\n\n1. No Visual Studio Code, selecione **F5** para executar o aplicativo no modo de depuração.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Saiba o que acontece quando você executa seu aplicativo localmente no depurador.</summary>\n\n    Caso esteja se perguntando, ao pressionar a tecla **F5**, Teams Toolkit:\n\n    1. Verifica os seguintes pré-requisitos:\n      * Você está conectado com uma conta Microsoft 365 cliente.\n      * O sideload está habilitado para sua conta Microsoft 365 usuário.\n      * A versão Node.js com suporte está instalada.\n      * Os pacotes NPM para o aplicativo guia são instalados.\n      * O certificado de desenvolvimento para localhost está instalado.           \n      * A porta está disponível para o aplicativo guia.\n\n      > [!NOTE]\n      > Se Teams Toolkit não conseguir verificar um pré-requisito específico, ele solicitará que você o verifique.\n\n    2. Registra o aplicativo com Azure AD e configura o aplicativo.\n    3. Registra o aplicativo no Teams Portal do Desenvolvedor e configura o aplicativo.\n    4. Inicia o aplicativo guia.\n    5. Inicia Teams em um navegador da Web e o sideload do aplicativo guia.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Captura de tela mostrando quando a tecla F5 é pressionada.\":::\n\n    > [!NOTE]\n    > Quando você executa o aplicativo pela primeira vez, todas as dependências são baixadas e o aplicativo é criado. Uma janela do navegador é aberta quando o build é concluído. Esse processo pode levar de 3 a 5 minutos para ser concluído.\n\n    O kit de ferramentas solicita que você instale um certificado local, se necessário. Esse certificado permite que o Teams carregue seu aplicativo a partir de `https://localhost`.\n\n1. Selecione **Sim** se a caixa de diálogo a seguir for exibida:\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-warning.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n    Ou selecione **Continuar**, dependendo do sistema operacional:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Captura de tela mostrando o prompt para instalar um certificado SSL para permitir Teams carregar seu aplicativo do localhost no Mac.\":::\n\n    Teams cliente Web é aberto em uma janela do navegador.\n\n1. Entre com sua conta Microsoft 365, se solicitado.\n\n1. Selecione **Adicionar** quando solicitado a fazer sideload do aplicativo Teams em seu computador local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Adicionar o aplicativo ao Teams\":::\n\n1. Parabéns, seu primeiro aplicativo está em execução no Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-localdebug.png\" alt-text=\"Captura de tela do aplicativo concluído\":::\n\n   Você pode adicionar o recurso de SSO para recuperar os detalhes do usuário. Você pode fazer atividades normais de depuração, como definir pontos de interrupção, como se fosse qualquer outro aplicativo Web. O aplicativo dá suporte à recarga dinâmica. Se você alterar qualquer arquivo dentro do projeto, a página será recarregada.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Saiba como solucionar problemas se o aplicativo não for executado localmente.</summary>\n\n  Para executar seu aplicativo com êxito Teams, verifique se você habilitou o sideload em sua Teams conta. Você pode saber mais sobre o sideload na seção Pré-requisitos.\n\n  </details>\n\n \n"
- title: Implantar seu primeiro Teams aplicativo
  durationInMinutes: 1
  content: "\nVocê aprendeu a criar, compilar e executar Teams aplicativo Tab. A etapa final é implantar seu aplicativo no Azure.\n\nVamos implantar o primeiro aplicativo com a funcionalidade Tab no Azure usando Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Entrar em sua conta do Azure\n\nUse essa conta para acessar o portal Microsoft Azure e provisionar novos recursos de nuvem para dar suporte ao seu aplicativo.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Abra a pasta do projeto na qual você criou o aplicativo guia.\n1. Selecione o Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.  \n1. Selecione **Entrar no Azure**.\n\n    > [!TIP]\n    > Se você tiver a extensão de Conta do Azure instalada e estiver usando a mesma conta, ignore esta etapa. Use a mesma conta que você está usando em outras extensões.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n1. Entre em sua conta do Azure usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra as duas contas separadamente. Ele também lista o número de assinaturas utilizáveis do Azure disponíveis para você. Verifique se você tem pelo menos uma assinatura utilizável do Azure disponível. Caso contrário, saia e use uma conta diferente.\n\n    Agora você está pronto para implantar seu aplicativo no Azure!\n\n    Parabéns, você criou um Teams aplicativo! \n    Agora, vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Teams Toolkit.\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Parabéns, você criou um Teams aplicativo! \n    Agora, vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Teams Toolkit.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Saiba o que acontece quando você implanta o seu aplicativo no Azure</summary>\n\n  Antes da implantação, o aplicativo era executado localmente:\n\n  * O back-end é executado usando o **Azure Functions Core Tools**.\n  * O ponto de extremidade HTTP do aplicativo, onde o Microsoft Teams carrega o aplicativo, é executado localmente.\n\n  A implantação é um processo de duas etapas. Você provisiona os recursos em uma assinatura ativa do Azure e, em seguida, implanta ou carrega o código de back-end e front-end do aplicativo no Azure.\n\n  * O back-end, se configurado, usa vários serviços do Azure, incluindo o Serviço de Aplicativo do Azure e o Azure Armazenamento.\n  * O front-end do aplicativo será implantado em uma conta de Armazenamento do Microsoft Azure configurada para hospedagem Web estática.\n\n  </details>\n"
- title: Parabéns!
  durationInMinutes: 1
  content: "\nVocê já fez isso!\n\nVocê criou um aplicativo guia.\n\nAgora que você aprendeu a criar um aplicativo básico, pode passar para a criação de aplicativos mais complexos. Para começar, tente adicionar recursos aos seus aplicativos existentes.\n\nPara adicionar recursos ao seu aplicativo existente:\n\n1. Selecione **Adicionar recursos** na **seção Desenvolvimento** da Teams Toolkit lateral.\n\n1. Selecione a funcionalidade que você deseja adicionar ao seu aplicativo.\n\nIsso é tudo. Teams Toolkit adiciona o scaffolding para a nova funcionalidade à estrutura de diretório do aplicativo. Siga os procedimentos para compilar e implantar o aplicativo, e seu aplicativo terá vários recursos. \n\nVocê concluiu o tutorial para criar um aplicativo guia com JavaScript."
