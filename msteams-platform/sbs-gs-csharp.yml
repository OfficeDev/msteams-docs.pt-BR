### YamlMime:Tutorial
title: 'Criar seu primeiro aplicativo usando C #'
metadata:
  title: 'Olá, Mundo com C #'
  description: Neste tutorial, você aprenderá a criar um aplicativo Olá, Mundo com C#.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Voltar à Introdução geral
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: e3d4a0ff69b2bd0d882a7ae6d6224548955f1171
  ms.sourcegitcommit: 5070746e736edb4ae77cd3efcb2ab8bb2e5819a0
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 06/16/2022
  ms.locfileid: "66124008"
items:
- durationInMinutes: 1
  content: >
    Comece Microsoft Teams desenvolvimento de aplicativos criando seu primeiro aplicativo com uma guia, um bot e uma funcionalidade de extensão de mensagem.


    >Esse aplicativo terá todos os recursos e cada um terá sua própria interface do usuário e experiência do usuário:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagrama mostrando que esse aplicativo tem três recursos." border="true":::


    Neste tutorial, você aprenderá:


    - Como configurar um novo projeto.

    - Como criar três aplicativos com uma funcionalidade diferente cada: guia, bot e extensão de mensagem usando C# e Visual Studio 2019.

    - Como implantar seu aplicativo no Portal do Desenvolvedor.
- title: Pré-requisitos
  durationInMinutes: 1
  content: "Aqui está uma lista de ferramentas que você precisará instalar para criar e implantar um Teams aplicativo.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> Instale uma das duas cargas de trabalho a seguir:<br> • **ASP.NET desenvolvimento para a Web** <br> • **Desenvolvimento multiplataforma do .NET Core** | .NET. Você pode instalar a edição de comunidade gratuita do Visual Studio 2019 e instalar as cargas de trabalho também. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git para usar o repositório de aplicativos C# de exemplo GitHub. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams recursos do aplicativo (bot de conversação e extensão de mensagem) exigem conexões de entrada. Você precisa expor seu sistema de desenvolvimento para Teams por um túnel. Um túnel não é necessário para aplicativos que incluem apenas guias. Esse pacote é instalado no diretório do projeto (usando npm`devDependencies`). |\n| &nbsp; | [Kit de ferramentas do Teams](#install-teams-toolkit) | Uma Visual Studio 2019 que cria um scaffolding de projeto para seu aplicativo. Use a versão mais recente. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo do Teams, inclusive para sua organização ou para a loja do Teams. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | O Microsoft Teams para colaborar com todos com quem você trabalha por meio de aplicativos para chats, reuniões, chamadas - tudo em um só lugar. |\n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [e Microsoft Azure CLI](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-end baseado em nuvem para seu Teams aplicativo no Azure. |\n\n\n## <a name=\"verify-git-installation\"></a>Verificar a instalação do git\n\nSe Visual Studio instalação solicitar que você adicione `git` ao caminho, selecione-o. \n\nPara verificar a versão do git instalada:\n\n1. Abra uma janela de terminal. \n2. Execute o seguinte comando para verificar a `git` versão instalada no computador:\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemplo de saída: `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Instalar Teams Toolkit\n\nTeams Toolkit ajuda a simplificar o processo de desenvolvimento com ferramentas para criar um scaffolding de projeto para seu aplicativo. Ele cria a estrutura de diretório necessária para todos os recursos selecionados com os arquivos necessários em vigor, prontos para compilar o projeto.\n\nTeams Toolkit está disponível como uma extensão Visual Studio 2019.\n\nPara instalar Teams Toolkit extensão:\n\n1. Abra Visual Studio 2019 e selecione As **Extensões Gerenciam** > **Extensões**.\n1. Na caixa de pesquisa, insira **Teams Toolkit**.\n1. Selecione **Baixar** ao lado do Teams Toolkit.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"A imagem mostra a instalação para Teams Toolkit\"::: \n\n    As alterações estarão disponíveis depois que você fechar Visual Studio 2019. É necessário, pois o Visual Studio 2019 deve ser reiniciado após a instalação da extensão.\n\n1. Selecione **Fechar**.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"A imagem mostra a instalação feita para Teams Toolkit\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" border=\"true\":::\n\n1. Feche Visual Studio 2019.\n    \n    O instalador do VSIX é aberto com instruções para instalar a extensão.\n\n1. Siga as instruções do instalador do VSIX para concluir a instalação do kit de ferramentas.\n1. Abra Visual Studio 2019 novamente.\n\nOs Teams aplicativos estarão disponíveis como um modelo no Visual Studio 2019.\n\nVocê também pode encontrar o Teams Toolkit no [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de Teams desenvolvimento\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, em que você conversa, compartilha arquivos e executa reuniões. Esse espaço também é onde você faz sideload e testa seu aplicativo. Vamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre em sua conta Microsoft 365 para exibir essa opção.\n\n> [!NOTE]\n> O sideload é necessário para visualizar e testar aplicativos Teams ambiente local. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode fazer sideload de aplicativos Teams:\n\n1. No cliente Teams, selecione o **ícone da** Loja.\n1. Selecione **Gerenciar seus aplicativos**.\n1. Procure a opção para Upload **um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado Teams.\":::\n\n    > [!NOTE]\n    > Se Teams não mostrar a opção de carregar um aplicativo personalizado, fale com seu Teams administrador.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário Teams desenvolvedor gratuito (opcional)\n\nSe você não tiver uma conta Teams, poderá obtê-la gratuitamente. Participe do programa Microsoft 365 desenvolvedor!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, selecione **Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida:\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemplo do que você vê depois de se inscrever no programa Microsoft 365 desenvolvedor.\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem o **Upload uma opção de aplicativo personalizado** Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você quiser hospedar seu aplicativo ou acessar recursos no Azure, deverá ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configura suas contas. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar!\n\n> [!NOTE]\n> Use uma janela de terminal adequada em sua plataforma. Esses exemplos usam o Git Bash, mas podem ser executados na maioria das plataformas.\n\nAbra a versão mais recente do Visual Studio e instale as atualizações.\n\nVocê pode usar a mesma janela de terminal para executar os comandos neste tutorial.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Baixar o exemplo\n\nPara este tutorial, use [o Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) exemplo em C#. Você pode baixá-lo e cloná-lo GitHub.\n\nPara usar esse exemplo, clone o repositório de exemplo de uma das seguintes maneiras:\n\n- [Usando o Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [Usando Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Para usar o Git Bash para clonar o repositório de exemplo\n\n- Execute o seguinte comando em uma janela de terminal para clonar o repositório de exemplo em seu computador:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    O repositório de exemplo para o aplicativo C# é clonado no computador no local padrão.\n\n    > [!TIP]\n    > Você pode [bifurcar](https://help.github.com/articles/fork-a-repo/) [esse repositório](https://github.com/OfficeDev/Microsoft-Teams-Samples) para modificar e salvar suas alterações no GitHub.\n\n    <a name=\"BuildRun\"></a>\n\n    Você pode exibir o repositório clonado abrindo-o no Visual Studio 2019. \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Para usar Visual Studio 2019 para clonar o repositório de exemplo\n\n1. Abra Visual Studio 2019.\n1. Selecione **Clonar um repositório**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"Clonar o repositório de exemplo para c# Teams aplicativo\" border=\"true\":::\n\n1. Insira `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` como caminho para clonar o repositório:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"Clonar o repositório de exemplo para c# Teams aplicativo\" border=\"true\":::\n\n1. Insira o local onde você deseja clonar o repositório e selecione **Clonar**.\n\n    O repositório de exemplo é clonado e Visual Studio aberto. Você pode exibir o repositório clonado no **Gerenciador de Soluções**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"Repositório de exemplo para c# Teams aplicativo clonado\" border=\"true\":::\n\nAgora que você clonou o repositório de exemplo, vamos criar seu primeiro aplicativo C# para Teams.\n"
- title: Compilar e executar seu primeiro aplicativo em C#
  durationInMinutes: 1
  content: "\nDepois de clonar o repositório para o aplicativo de exemplo C#, você pode compilar e executar o aplicativo em seu ambiente local.\n\nNesta página, você aprenderá a:\n1. [Desenvolver seu primeiro aplicativo](#build-your-first-app)\n1. [Implantar seu aplicativo de exemplo localmente](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>Desenvolver seu primeiro aplicativo\n\nVocê pode exibir a estrutura do projeto no **Gerenciador de Soluções** depois que o workspace for criado. Agora, você deve compilar e executar seu aplicativo.\n\n**Para compilar e executar o exemplo clonado**\n\n1. Abra o arquivo de **solução Microsoft.Teams. Samples.HelloWorld.sln** do diretório **Microsoft-Teams-Samples/samples/app-hello-world/csharp** do exemplo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Imagem mostrando a estrutura Olá, Mundo diretório da solução\" border=\"true\":::\n\n1. Selecione o **Project** e selecione **Microsoft.Teams. Propriedades Samples.HelloWorld.Web**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"Imagem mostrando Project menu para selecionar a opção Propriedades\" border=\"true\":::\n\n1. Selecione **Depurar** no painel esquerdo **da janela Propriedades** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"Imagem mostrando janela Propriedades\" border=\"true\":::\n\n1. Mover-se pela tela para exibir o servidor **Web Configurações**.\n\n1. Faça as seguintes configurações no painel **Depurar** :\n    - **Defina a URL do Aplicativo** como `http://localhost:3333/`.\n    - Limpar **Habilitar SSL**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"Imagem mostrando as configurações do servidor Web para propriedades do projeto em C#\" border=\"true\":::\n\n1. Selecione **Compilar Solução** **no menu** Compilar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"Imagem mostrando o build concluído\" border=\"true\":::\n\n1. Selecione a **tecla F5** ou inicie **a depuração** no menu **Depurar** para executar o exemplo.\n\n    Quando o aplicativo é iniciado, uma janela do navegador é aberta. Ele mostra a raiz do seu aplicativo. Você pode acessar as seguintes URLs para verificar se todas as URLs do aplicativo estão sendo carregadas:\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"Imagem mostrando o host local\" border=\"true\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"Imagem mostrando a página Olá do aplicativo\" border=\"true\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"Imagem mostrando a primeira guia do aplicativo\" border=\"true\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"Imagem mostrando a segunda guia do aplicativo\" border=\"true\":::\n\n    > [!Note]\n    > Se você receber um erro `Could not find a part of the path … bin\\roslyn\\csc.exe`, atualize o pacote com o comando `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`.\n\n## <a name=\"deploy-your-sample-app-locally\"></a>Implantar seu aplicativo de exemplo localmente\n\nMicrosoft Teams aplicativos são aplicativos Web que fornecem um ou mais recursos. Disponibilizar seu aplicativo na Internet para que a plataforma Teams possa carregá-lo. Hospede seu aplicativo usando `ngrok` para criar um túnel para o processo local em seu computador.\n\nDepois de hospedar seu aplicativo, anote sua URL raiz, como `https://yourteamsapp.ngrok.io` ou `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel usando ngrok\n\nDepois de instalar o ngrok, você pode criar um túnel para implantar seu aplicativo localmente:\n\n1. Abra uma nova janela de terminal.\n1. Execute o comando a seguir para criar um túnel. O aplicativo de exemplo usa a porta 3333.\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    O túnel ngrok é criado. Veja um exemplo:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"Imagem mostrando o túnel ngrok\" border=\"true\":::\n\n    Você pode tentar adicionar `hello`, `first`ou à `second` URL do túnel ngrok para exibir páginas de guias diferentes do aplicativo.\n    \n    O Ngrok escuta solicitações da Internet e as roteia para seu aplicativo em execução na porta 3333.\n\nPara verificar a implantação local do aplicativo:\n\n1. Abra o navegador.\n1. Carregue seu aplicativo usando a seguinte URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Aqui está um exemplo da URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"Imagem mostrando o aplicativo C# em execução localmente no túnel ngrok\" border=\"true\":::\n\n1. Anote o endereço de encaminhamento no console do ngrok. Você precisa dessa URL para implantar seu aplicativo no Teams.\n\n    > [!NOTE]\n    > Se você usou uma porta diferente durante o [build](#build-your-first-app), use o mesmo número da porta para configurar o `ngrok` túnel.\n    > [!TIP]\n    > É uma boa ideia executar em uma `ngrok` janela de terminal diferente. Ele ajuda a evitar `ngrok` interferir no aplicativo, quando você precisará parar, recriar e executar novamente o aplicativo. A `ngrok` sessão fornece informações úteis de depuração nesta janela.\n    > [!IMPORTANT]\n    > Se você usar a versão gratuita do ngrok, seu aplicativo estará disponível somente durante a sessão atual em seu computador de desenvolvimento. Ele não estará disponível se a máquina estiver desligada ou estiver dormindo. Quando você reinicia o serviço, ele retorna um novo endereço. Em seguida, você deve atualizar cada local que usa o endereço desatualizado. Lembre-se desta etapa ao compartilhar o aplicativo para teste.\n"
- title: Configurar seu primeiro aplicativo C# usando o Portal do Desenvolvedor
  durationInMinutes: 1
  content: "\nVocê pode usar o [Portal do](https://dev.teams.microsoft.com/) Desenvolvedor para carregar o pacote do aplicativo para Teams e configurar os recursos do aplicativo. O Portal do Desenvolvedor é Teams aplicativo que simplifica a criação e o registro de um aplicativo. Instale a partir da Teams armazenamento!\n\nDepois de criar e testar seu Teams, você pode configurá-lo e visualizá-lo usando o Portal do Desenvolvedor.\n\nNesta página, você aprenderá a configurar [o pacote do aplicativo no Portal do Desenvolvedor](#configure-the-app-package-in-developer-portal).\n\n<details>\n<summary>Opção Publicar no Visual Studio 2019</summary>\n\nEste tutorial usa o Portal do Desenvolvedor para configurar as funcionalidades do aplicativo e publicar seu aplicativo. \n\nNo entanto, Visual Studio 2019 tem suporte interno para implantação de aplicativos em diferentes provedores, incluindo o Azure:\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Imagem mostrando o item de menu Publicar no Azure no Visual Studio 2019\" border=\"true\":::\n\nMicrosoft Azure hospeda seu aplicativo .NET em uma camada gratuita. Ele usa uma infraestrutura compartilhada que é suficiente para executar o `Hello World` exemplo. Para obter mais informações, consulte [criar uma nova conta gratuita do Azure](https://azure.microsoft.com/free/).\n\nSe você usar essa opção, poderá inserir os detalhes do site do Azure e dos recursos do Azure e publicar seu aplicativo. \n\nPara este tutorial, você não precisa usar esta etapa.\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>Configurar o pacote do aplicativo no Portal do Desenvolvedor\n\nVocê pode usar [o Portal do](https://dev.teams.microsoft.com/) Desenvolvedor para configurar o pacote do aplicativo e seus recursos. O Portal do Desenvolvedor é Teams aplicativo que simplifica a criação e o registro de um aplicativo. Instale a partir da Teams armazenamento!\n\nA configuração do pacote do aplicativo inclui:\n\n1. [Importando o pacote do aplicativo para o Portal do Desenvolvedor](#import-the-app-package-in-developer-portal)\n1. [Configurando funcionalidades do aplicativo](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>Importar o pacote do aplicativo no Portal do Desenvolvedor\n\nPara importar o pacote do aplicativo:\n\n1. Abra o Microsoft Teams.\n\n1. Selecione o **ícone** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: da Loja na barra à esquerda.\n\n1. Pesquise **o Portal do** Desenvolvedor na barra de pesquisa e selecione **Portal do Desenvolvedor**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Selecione o aplicativo Portal do Desenvolvedor\" border=\"true\":::\n\n1. Selecione **Abrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Imagem mostrando o aplicativo Abrir Portal do Desenvolvedor\" border=\"true\":::\n\n    O Portal do Desenvolvedor é aberto.\n\n1. Selecione a **guia Aplicativos** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Aplicativo portal do desenvolvedor\" border=\"true\":::\n\n1. Selecione **Importar aplicativo**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Imagem mostrando o botão Importar aplicativo\" border=\"true\":::\n\n1. Selecione o pacote do aplicativo `helloworldapp.zip` no seguinte caminho na estrutura de diretório do repositório de exemplo C#:\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    O **Olá, Mundo** aplicativo é importado no Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Imagem mostrando o aplicativo importado no Teams\" border=\"true\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Faça um tour pelo seu aplicativo no Portal do Desenvolvedor\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, você pode exibir seus detalhes, incluindo o arquivo de manifesto.\n\n#### <a name=\"view-app-information\"></a>Exibir informações do aplicativo\n\n1. Selecione **Informações Básicas** no painel esquerdo do Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"A imagem mostra o painel esquerdo do Portal do Desenvolvedor\" border=\"true\":::\n\n1. Observe as seguintes informações das informações básicas:\n    - ID do aplicativo\n    - Informações do desenvolvedor\n    - URLs do aplicativo\n\n1. Selecione **Identidade Visual** no painel esquerdo para exibir as informações de identidade visual.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Imagem mostrando informações de identidade visual do aplicativo\" border=\"true\":::\n\n    Esses detalhes serão importantes se você estiver escrevendo um novo aplicativo para distribuição.\n\n#### <a name=\"view-app-features\"></a>Exibir recursos do aplicativo\n\n- Selecione **Recursos do aplicativo** no painel esquerdo do Portal do Desenvolvedor.\n\n    Os recursos do aplicativo aparecem no painel direito. Você pode exibir cartões para aplicativo pessoal, Bot e Extensão de Mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Imagem mostrando os recursos do aplicativo\" border=\"true\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Exibir o manifesto do aplicativo\n\nUse o arquivo de manifesto para configurar recursos, recursos necessários e outros atributos importantes para seu aplicativo.\n\nPara exibir o manifesto do aplicativo:\n\n- Selecione **Publicar** no painel esquerdo para abrir a lista suspensa e, em seguida, selecione **Pacote do aplicativo**.\n    \n    O arquivo de manifesto aparece no painel direito.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"Imagem mostrando o arquivo de manifesto do aplicativo no Portal do Desenvolvedor\" border=\"true\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>Configurar os recursos do aplicativo\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, a próxima etapa é configurar os recursos do aplicativo. O Portal do Desenvolvedor contém todas as informações do aplicativo em seções diferentes. Isso facilita a configuração dos recursos do aplicativo.\n\nUsando o Portal do Desenvolvedor, você pode:\n- [Configurar o aplicativo de guia pessoal](#configure-personal-tab-app)\n- [Configurar bot](#configure-bot)\n- [Configurar a extensão de mensagem](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurar o aplicativo de guia pessoal\n\nPara configurar o aplicativo de guia pessoal:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no cartão **de aplicativo Pessoal** no painel **Recursos do** aplicativo e selecione **Editar**.\n\n    Os detalhes da guia Olá são exibidos.\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone da guia Olá e selecione **Editar** para abrir os detalhes do aplicativo para atualização.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Imagem mostrando o menu da guia Olá\" border=\"true\":::\n\n1. Insira os detalhes do aplicativo para a guia Olá em **Adicionar uma guia ao seu aplicativo pessoal**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Imagem mostrando detalhes da guia Olá\" border=\"true\":::\n\n    Insira os seguintes detalhes:\n    - **Nome**: guia Olá.\n    - **URL de conteúdo** **e URL do site**: o endereço de encaminhamento na sessão do console do ngrok.\n    - **Contexto**: selecione **a guia Pessoal**.\n\n1. Selecione **Atualizar**.\n\n    Os detalhes da guia Olá aparecem no **painel Aplicativo** Pessoal.\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"Imagem mostrando os detalhes da guia Olá a serem salvos\" border=\"true\":::\n\n    O **painel Aplicativo Pessoal** agora mostra a nova guia e uma guia Sobre criada automaticamente.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Imagem mostrando os detalhes da guia Olá e Sobre\" border=\"true\":::\n\n#### <a name=\"configure-bot\"></a>Configurar bot\n\nÉ fácil adicionar a funcionalidade de bots ao seu aplicativo. O Olá, Mundo de exemplo já tem um bot como parte, mas você deve registrá-lo com Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Imagem mostrando o aplicativo de bot importado sem nenhuma ID do aplicativo\" border=\"true\":::\n\nO bot que foi importado do exemplo não tem uma ID de aplicativo associada. Você precisará excluí-lo e criar um bot. O Portal do Desenvolvedor cria uma nova ID de aplicativo e a registra com Teams.\n\nAdicionar e configurar um bot envolve:\n\n1. [Adicionando um novo bot](#to-add-a-new-bot)\n1. [Adicionando bot ao aplicativo](#to-add-bot-to-app)\n1. [Configurando o escopo do bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Para adicionar um novo bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no **cartão bot** no painel recursos **do** aplicativo e selecione **Excluir**.\n\n1. Selecione **Ferramentas** para adicionar funcionalidade.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Imagem mostrando a opção Ferramentas\" border=\"true\":::\n\n1. Selecione **Gerenciamento de Bot** no **painel** Ferramentas.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Imagem mostrando o painel de gerenciamento de bots\" border=\"true\":::\n\n1. Selecione **+ Novo Bot** no painel **de gerenciamento de** Bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Imagem mostrando a nova opção de bot\" border=\"true\":::\n\n1. Insira um nome adequado para o bot e selecione **Adicionar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Imagem mostrando como adicionar bot\" border=\"true\":::\n\n    O **painel** Configurar é exibido mostrando detalhes do novo bot no painel esquerdo.\n\n1. Insira a URL de encaminhamento no `ngrok` console e selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"Imagem mostrando como adicionar o ponto de extremidade do bot\" border=\"true\":::\n\n1. Selecione **Segredos do cliente** e, em **seguida, selecione Adicionar um segredo do cliente ao bot** para gerar uma senha para o bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"Imagem mostrando a seção Segredo do cliente\" border=\"true\":::\n\n    O Portal do Desenvolvedor gera uma senha para o bot.\n\n    Você pode usar o ícone :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: para copiar a senha. Para este tutorial, você não precisa copiá-lo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"Imagem mostrando o segredo do cliente gerado\" border=\"true\":::\n\n1. Selecione **OK**.\n\n1. Selecione **< Bots para** retornar ao **painel de gerenciamento de** Bot.\n\n    O **painel de gerenciamento** de bot mostra o novo Bot adicionado com uma ID do aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"Imagem mostrando o novo bot com a ID do aplicativo\" border=\"true\":::\n\n1. Salve a ID do Bot juntamente com a senha da **seção Segredo do** cliente.\n\n##### <a name=\"to-add-bot-to-app\"></a>Para adicionar bot ao aplicativo\n\n1. Abra o **painel Recursos do** aplicativo e selecione o **cartão do Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Imagem mostrando o cartão do bot\" border=\"true\":::\n\n    O **painel Bot** é exibido.\n\n1. Selecione seu aplicativo de bot **em Selecionar um bot existente**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"Imagem mostrando como adicionar um aplicativo de bot existente\" border=\"true\":::\n\n    O novo bot é adicionado ao seu aplicativo com sua própria ID de aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"Imagem mostrando o novo bot adicionado ao aplicativo\" border=\"true\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Para configurar o escopo do bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no novo **cartão do Bot** e selecione **Editar**.\n\n1. Mova-se **pelo painel Bot** para exibir a **seção Comandos** e selecione **+ Adicionar um Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Imagem mostrando a seção de comandos\" border=\"true\":::\n\n1. Insira um nome e uma descrição adequados para o **Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Imagem mostrando como adicionar detalhes de comandos\" border=\"true\":::\n\n1. Selecione todos os três escopos para o comando e selecione **Adicionar**.\n    - **Pessoal**\n    - **Equipe**\n    - **Chat em grupo**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Imagem mostrando como salvar detalhes dos comandos\" border=\"true\":::\n\n    O novo comando é adicionado à seção **Comandos** do **painel Bot** .\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Imagem mostrando os detalhes dos comandos a serem salvos\" border=\"true\":::\n\n    Os detalhes do comando são salvos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Imagem mostrando os detalhes dos comandos salvos\" border=\"true\":::\n\n1. Abra **o painel Recursos** do aplicativo e selecione **Cartão de aplicativo** pessoal para exibir os detalhes da guia do aplicativo.\n\n    Você verá que uma guia para o novo chatbot é adicionada ao seu aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"Imagem mostrando o chatbot configurado\" border=\"true\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurar a extensão de mensagem\n\nAs extensões de mensagem permitem que os usuários solicitem informações do seu serviço e postem essas informações. As informações são postadas na forma de cartões na conversa do canal. As extensões de mensagem aparecem na parte inferior da caixa de redação.\n\nPara adicionar uma nova extensão de mensagem:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no cartão extensão **de** mensagem no painel **recursos do** aplicativo e selecione **Excluir**.\n\n1. Selecione **Extensão de** Mensagem no **painel Recursos do** aplicativo.\n\n1. Selecione o nome do aplicativo de bot na lista **suspensa** Selecionar um bot existente no **painel Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Imagem mostrando o painel Extensão de mensagem para selecionar o bot existente\" border=\"true\":::\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"Imagem mostrando o botão Salvar extensão de mensagem\" border=\"true\":::\n\n    A extensão de mensagem é salva e a **seção Comandos** aparece no **painel Extensão de** mensagem.\n\n1. Selecione **+ Adicionar um comando para** definir o escopo do que seu aplicativo de extensão de mensagem pode fazer.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Imagem mostrando a seção Comando\" border=\"true\":::\n\n1. Verifique se **a Pesquisa** está selecionada como o tipo de comando que você deseja adicionar na caixa de diálogo Adicionar **um comando** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar um Comando\" border=\"true\":::\n\n1. Insira as informações adequadas nos seguintes detalhes:\n    - ID do comando\n    - Título do comando\n    - Descrição do comando\n\n1. Percorrer a caixa de diálogo para exibir os detalhes restantes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Imagem mostrando os detalhes restantes na caixa de diálogo Adicionar um Comando\" border=\"true\":::\n\n1. Verifique **se Make default** está selecionado.\n1. Selecione os seguintes contextos para o comando de extensão de mensagem:\n    - Caixa de comando\n    - Caixa de redação\n    - Mensagem\n1. Insira informações adequadas para os seguintes detalhes:\n    - Nome do parâmetro\n    - Título do parâmetro\n    - Descrição do parâmetro\n\n1. Selecione **Texto** como o tipo de entrada.\n1. Selecione **Salvar**.\n1. O comando de extensão de mensagem é salvo e aparece na lista de comandos no **painel Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Imagem mostrando o novo Comando adicionado\" border=\"true\":::\n\n1. Selecione **Salvar**.\n1. Abra **o painel recursos** do aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Imagem mostrando os recursos configurados para Olá, Mundo aplicativo\" border=\"true\":::\n\n    Você verá todos os três recursos – aplicativo de guia pessoal, bot e extensão de mensagem – configurados para o Olá, Mundo aplicativo. A próxima etapa é registrar seu aplicativo no Teams e testar seu aplicativo.\n"
- title: Visualizar e testar seu primeiro aplicativo C#
  durationInMinutes: 1
  content: "\nDepois de importar seu aplicativo e configurar os recursos no Portal do Desenvolvedor, você pode visualizar e testar o aplicativo de exemplo.\n\n## <a name=\"preview-your-app-in-teams\"></a>Visualizar seu aplicativo no Teams\n\nDepois de configurar os recursos do seu aplicativo, você pode visualizar e testar seu aplicativo Teams no ambiente local.\n\nPara visualizar seu aplicativo:\n\n1. Selecione **Visualizar no Teams** na barra de ferramentas do Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Imagem mostrando o botão Visualizar\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    O Portal do Desenvolvedor informa que seu aplicativo foi sideload com êxito.\n\n1. Selecione o **ícone da** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: Loja.\n1. Selecione **Gerenciar seus aplicativos**.\n   Seu aplicativo está listado nos aplicativos de sideload. \n1. Localize seu aplicativo usando a caixa de pesquisa, selecione os três pontos em sua linha.\n1. Selecione a **opção Exibir** .\n    A **página Adicionar** é exibida para seu aplicativo.\n1. Selecione **Adicionar** para carregar o aplicativo Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar aplicativo\" border=\"true\":::\n\n    Seu aplicativo agora está disponível no Teams. Você pode exibir todas as guias e testar os recursos:\n\n    - Guia Olá:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Imagem mostrando a guia Olá no ambiente local\" border=\"true\":::\n\n    - Chatbot:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Imagem mostrando o bot do aplicativo no ambiente local\" border=\"true\":::\n\n        Você pode enviar uma mensagem usando o chat.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Imagem mostrando o chat no ambiente local\" border=\"true\":::\n\n    - Extensão de mensagem:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Imagem mostrando a extensão de mensagem no ambiente local\" border=\"true\":::\n\n        Você pode tentar uma pesquisa usando a extensão de mensagem.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Imagem mostrando a pesquisa usando a extensão de mensagem no ambiente local\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - Guia Sobre:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Imagem mostrando a guia Sobre no ambiente local\" border=\"true\":::"
