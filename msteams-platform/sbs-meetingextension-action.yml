### YamlMime:Tutorial
title: Criar extensão de mensagens baseada em ação
metadata:
  title: Criar extensão de mensagens baseada em ação
  description: Neste tutorial, você aprenderá a configurar a extensão de mensagens de ação para Teams.
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: Leia mais para habilitar comandos de ação de extensão de mensagens
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 229f5c3e1d236e41ca45f9c7aea6f8e6e4fe7a3d
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571233"
items:
- durationInMinutes: 1
  content: "As extensões de mensagens permitem que os usuários interajam com serviços Web no Microsoft Teams cliente. Eles ajudam a iniciar ações em um sistema externo a partir da área de mensagem de composição, da caixa de comando ou diretamente de uma mensagem.\n\n**Principais recursos da extensão de mensagens baseada em ação**\n\n* Apresenta ao usuário um pop-up modal para coletar ou exibir informações.\n* Dispara os comandos de ação da área de mensagem de composição, da caixa de comando ou de uma mensagem. \n\nEste guia passo a passo ajuda você a criar Teams de mensagens baseadas em ação para iniciar ações da área de mensagem e mensagem de composição. Você verá a seguinte saída:\n   \n  ![output](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "Certifique-se de instalar as seguintes ferramentas e configurar seu ambiente de desenvolvimento:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) com conta válida\n* [.NET Core SDK](https://dotnet.microsoft.com/download) versão 3.1\n* [Versão mais recente do Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok versão](https://ngrok.com/download) mais recente (somente para teste de devbox) ou qualquer solução de túnel equivalente\n\n  > [!NOTE]\n  > Depois de baixar o ngrok, inscreva-se e instale [authtoken](https://ngrok.com/download).\n"
- title: Configurar ambiente local
  durationInMinutes: 1
  content: "Clone `BotBuilder-Samples` o repositório para seu GitHub local:  \n\n 1. Abra [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n 1. Selecione **Código**.\n 1. No menu suspenso, selecione **Abrir com GitHub Desktop**.\n\n    ![Repositório clone](~/assets/images/sbs-messagingextension-action/botbuilder-sample.png)\n\n 1. Selecione **Clonar**. \n"
- title: Criar e registrar seu bot no portal do Azure AD
  durationInMinutes: 5
  content: "Para criar e registrar seu bot no Microsoft Azure Active Directory (Azure AD), crie um túnel usando o ngrok e adicione o ponto de extremidade de mensagens, execute as seguintes etapas:\n\n* Crie o recurso bot do Azure para registrar bot com o Azure Serviço de Bot.\n* Crie segredo do cliente para habilitar a autenticação SSO do bot.\n* Adicione Teams canal para implantar o bot em um Teams canal.\n* Use ngrok para criar um túnel para os pontos de extremidade do servidor Web.\n* Adicione o ponto de extremidade de mensagens ao túnel de ngrok que você criou.\n\n**Para criar o recurso bot do Azure**\n\n1. Vá para o [portal Microsoft Azure.](https://portal.azure.com/)\n1. Selecione **Criar um recurso**.\n1. Na caixa de pesquisa, digite **Bot do Azure**.\n1. Selecione **Enter**.\n1. Selecione **Bot do Azure**.\n\n     ![Criar cartão de bot do Azure](~/assets/images/sbs-messagingextension-action/azure-bot.png)\n\n1. Selecionar **Criar**.\n1. Insira o nome de alça de bot necessário no **alça bot**.\n1. Selecione sua **Assinatura** na lista de menus suspensos.\n1. Selecione seu **grupo De recursos** na lista de menus suspensos. \n\n    ![Selecionar recurso do bot do Azure](~/assets/images/sbs-messagingextension-action/create-azurebot.png) \n\n   Você também pode criar um novo grupo de recursos (selecione **Criar novo** > digite nome do recurso > selecione **OK**).\n\n1. Na seção **ID do Microsoft App** , por padrão **, Criar nova ID do Microsoft App** está selecionada. \n \n   Você pode selecionar **Usar registro de aplicativo** existente e inserir **ID** de aplicativo existente e senha de aplicativo **existente ou selecionar** **Criar nova ID do Aplicativo microsoft**.\n\n   > [!NOTE]\n   > Não é possível criar mais de um bot com a mesma **ID do Microsoft App**.\n\n1. Selecione **MultiTenant** em **Tipo de Bot**.\n\n    ![Tipo](~/assets/images/sbs-messagingextension-action/bot-type.png)\n\n1. Selecione **Examinar + criar**.\n\n    ![Criar ID do Aplicativo Microsoft](~/assets/images/sbs-messagingextension-action/review-create.png)\n\n1. Se a validação for aprovada, selecione **Criar**. \n\n    Leva alguns instantes para que o serviço de bot seja provisionado. \n\n1. Selecione **Acessar recursos**. \n\n    ![Implantar aplicativo](~/assets/images/sbs-messagingextension-action/resource-file.png)\n\n    Seu bot do Azure foi criado.\n\n    ![Recurso de bot do Azure criado](assets/images/sbs-messagingextension-action/created-azure-bot.png)\n\n**Para criar o segredo do cliente**\n\n  Execute as etapas a seguir se tiver criado uma nova **ID do Microsoft App**:\n\n1. No painel esquerdo, selecione **Configuração**. \n\n   > [!TIP]\n   > Salve a **ID do Microsoft App** ou **a ID do Cliente** para referência futura.\n\n1. Ao lado da **ID do Microsoft App**, selecione **Gerenciar**.\n\n    ![ID do Aplicativo Microsoft](~/assets/images/sbs-messagingextension-action/manage.png)\n\n1. Na seção **Segredos do** cliente, selecione **Novo segredo do cliente**. \n\n    ![Novo segredo do cliente](~/assets/images/sbs-messagingextension-action/adding-client-secret.png)\n\n   A **janela Adicionar um segredo do** cliente é exibida.  \n\n1. Insira **Descrição**.\n\n1. Selecione **Adicionar**.\n\n    ![Adicionar segredo do cliente ao aplicativo](~/assets/images/sbs-messagingextension-action/add-a-clientsecret.png)\n\n1. Na coluna **Valor** , selecione **Copiar para área de transferência**.\n\n     ![Valor do segredo do cliente](~/assets/images/sbs-messagingextension-action/client-secret.png)\n   \n   > [!TIP]\n   > Salve o **valor de segredos do** cliente ou a senha do aplicativo para referência futura.\n\n**Para adicionar o Teams canal**\n\n1. Selecione **Início**.\n\n    ![Página inicial](~/assets/images/sbs-messagingextension-action/select-home.png)\n\n1. Selecione seu bot de **recursos recentes**.\n\n1. Selecione **Canais** no painel esquerdo. \n\n1. Selecione **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Selecione a caixa de seleção para aceitar os **Termos de Serviço**.\n\n1. Selecione **Concordar**.\n\n      ![Termos de serviço](~/assets/images/sbs-messagingextension-action/agree.png)\n\n1. Selecione **Salvar**.\n\n      ![Selecione Teams](~/assets/images/sbs-messagingextension-action/configure-msteams.png)   \n\n**Para criar um túnel para o servidor Web local**\n\nUse o ngrok para criar um túnel para os pontos de extremidade HTTPS disponíveis publicamente do servidor Web em execução local. Execute o seguinte comando em ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> Se você encontrar **ERR_NGROK_4018**, siga as etapas fornecidas no prompt de comando para se inscrever e autenticar o ngrok. Em seguida, execute o `ngrok http -host-header=localhost 3978` comando.\n\n**Para adicionar ponto de extremidade de mensagens**\n\n1. De ngrok, copie a URL HTTPS (https para io).\n\n    ![URL HTTPS do ngrok](~/assets/images/sbs-messagingextension-action/ngrok.png)\n\n    > [!NOTE]\n    > A URL HTTPS em seu ngrok é seu nome de domínio totalmente qualificado.\n    > O `WebAppDomain` é um nome de domínio totalmente qualificado que não inclui `https://` nele.\n\n1. Em **Configurações** para o bot do Azure que você criou, selecione **Configuração**.\n\n1. No **ponto de extremidade mensagens**, use a URL HTTPS disponível no ngrok e, no final da URL, adicione **/api/messages**.\n\n    ![URI do aplicativo](~/assets/images/sbs-messagingextension-action/appuri.png)\n\n1. Selecione **Aplicar**.\n\n    Você definiu com êxito um bot no Azure Serviço de Bot.\n"
- title: Atualizar o registro do aplicativo do Azure AD
  durationInMinutes: 1
  content: "1. Acesse o [Portal do Azure](https://portal.azure.com/).\n\n1. Selecione **Azure Active Directory**.\n\n1. No painel de navegação esquerdo, selecione **Registros de Aplicativos**.\n\n1. Selecione seu bot.\n\n   ![Registro do aplicativo](~/assets/images/sbs-messagingextension-action/app.-registerations.png)\n\n1. Em **Gerenciar**, selecione **Expor uma API**.\n\n1. Selecione **Definir**.\n\n   ![Expor uma API](~/assets/images/sbs-messagingextension-action/set-exposeanapi.png)\n\n1. Definir o **URI de ID do Aplicativo** na forma de `api://{AppID}`.\n\n   ![Definir link](~/assets/images/sbs-messagingextension-action/set-link.png)\n\n1. Insira o `WebAppDomain` valor entre `api://` e `/{AppID}`.</br>\n    `api://2bb1****.ngrok.io/{AppID}`</br>\n    \n   A imagem a seguir mostra o nome de domínio:\n    \n    ![Expor](~/assets/images/sbs-messagingextension-action/exposeanapi.png)\n\n    > [!NOTE]\n    > Se você estiver usando um serviço de tunelamento como ngrok, certifique-se de atualizar o valor sempre que o subdomínio ngrok mudar.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, onde `f631****.ngrok.io` está o novo nome do subdomínio ngrok.\n\n1. Selecione **Adicionar um escopo**. \n\n   ![Selecionar escopo](~/assets/images/sbs-messagingextension-action/addascope.png)\n\n1. No painel exibido, digite como `access_as_user` o **nome do escopo**.\n\n1. Definir **Who pode consentir?** para `Admins and users`.\n\n1. Para configurar os prompts de consentimento do administrador e do usuário com valores apropriados para `access_as_user` escopo, forneça as seguintes informações nos campos:</br>\n\n     * Insira `Teams can access the user’s profile` como **Nome de exibição de consentimento do administrador**.\n\n     * Insira `Allows Teams to call the app’s web APIs as the current user` como **Descrição de consentimento do administrador**.\n\n     * Insira `Teams can access the user profile and make requests on the user’s behalf` como **Nome de exibição de consentimento do usuário**.\n\n     * Insira `Enable Teams to call this app’s APIs with the same rights as the user` como **Descrição de consentimento do usuário**.\n\n1. Verifique se o **Estado** está definido como **Habilitado**.\n\n1. Selecione **Adicionar escopo** para salvar.\n\n    ![Adicionar um escopo](~/assets/images/sbs-messagingextension-action/addascopeuser.png)\n\n    > [!NOTE]\n    > O **nome do escopo** deve corresponder ao URI `/access_as_user` **de ID do** aplicativo com anexado no final.</br>\n       `api://2bb1****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/sbs-messagingextension-action/scopes.png) \n\n1. Na seção **Aplicativos cliente autorizados,** identifique os aplicativos que você deseja autorizar para o aplicativo Web do seu aplicativo. \n\n1. Selecione **Adicionar um aplicativo cliente**. \n\n    ![Selecionar aplicativo cliente](~/assets/images/sbs-messagingextension-action/clientapps.png) \n\n1. Insira **a ID do cliente**: `1fec8e78-bce4-4aaf-ab1b-5451cc387264` para Teams aplicativo móvel ou desktop. \n\n    ![Adicionar aplicativo cliente 1](~/assets/images/sbs-messagingextension-action/addclientapplication1.png) \n\n   Você pode inserir **a ID do cliente**: `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` para Teams web.\n\n    ![Adicionar aplicativo cliente 2](~/assets/images/sbs-messagingextension-action/addclientapplication2.png) \n\n1. Selecione **Escopos autorizados**.\n\n    ![Adicionar aplicativo cliente 2](~/assets/images/sbs-messagingextension-action/authorizedscope.png) \n\n   A imagem a seguir exibe as IDs do cliente:\n\n    ![Aplicativos do cliente](~/assets/images/sbs-messagingextension-action/clientapp.png) \n\n1. No painel esquerdo, selecione **Permissões de API**. \n\n   > [!NOTE]\n   > Os usuários só precisam consentir com essas permissões se o aplicativo do Azure AD estiver registrado em um locatário diferente.\n\n1. Selecione **Adicionar uma permissão**.\n\n    ![Adicionar permissão](~/assets/images/sbs-messagingextension-action/addpermission.png)\n\n1. Selecione **Microsoft Graph**.\n\n1. Selecione **Permissões delegadas**.\n\n1. Adicione as seguintes permissões:</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **perfil**\n     * **User.Read**\n\n1. Selecione **Adicionar permissões**.\n\n     ![Outras permissões](~/assets/images/sbs-messagingextension-action/other-permissions.png)\n\n1. No painel esquerdo, selecione **Autenticação** para definir um URI de redirecionamento. \n\n   > [!NOTE]\n   > Se um aplicativo não tiver o consentimento do administrador de IT, os usuários deverão fornecer consentimento na primeira vez que usarem um aplicativo.\n           \n     1. Selecione **Adicionar uma plataforma**.\n     1. Selecione **Web**.\n\n        ![Web](~/assets/images/sbs-messagingextension-action/web.png)\n\n     1. Insira o URI de redirecionamento para seu aplicativo, aplicando-se `auth-end` ao nome de domínio totalmente qualificado:</br> \n       `https://2bb1****.ngrok.io/auth-end`. </br>\n\n     1. **Habilitar fluxos implícitos de** concessão e híbridos selecionando as seguintes caixas de seleção:\n         * **Tokens de ID**\n         * **Tokens de acesso**\n\n     1. Selecione **Configurar**.\n\n        ![Auth-end](~/assets/images/sbs-messagingextension-action/authend.png)\n"
- title: Configurar configurações do aplicativo e arquivos de manifesto
  durationInMinutes: 1
  content: "1. Navegue **até appsettings.json** no repositório clonado.\n\n    ![Local das configurações do aplicativo](~/assets/images/sbs-messagingextension-action/appsettingslocation.png)\n\n1. Abra **appsettings.json na** versão mais recente do Visual Studio e atualize as seguintes informações:  \n\n     * De `\"MicrosoftAppType\"` definida como **MultiTenant**.\n     * De `\"MicrosoftAppId\"` acordo com a **ID do aplicativo Microsoft do seu bot**.\n     * De `\"MicrosoftAppPassword\"` acordo com o Valor do **seu** bot da **ID do Segredo do Cliente** .\n     * Deixe `\"MicrosoftAppTenantId\"` em branco para o bot MultiTenant.\n     * De `\"BaseUrl\"` acordo com o nome de domínio totalmente qualificado.\n\n    ![Configurações do aplicativo](~/assets/images/sbs-messagingextension-action/json-file.png)\n\n1. Navegue **até manifest.json** no repositório clonado.\n\n    ![Local do arquivo de manifesto](~/assets/images/sbs-messagingextension-action/manifestlocation.png)\n\n1. Abra **manifest.json** na versão mais recente do Visual Studio e faça as seguintes alterações:\n\n     * Substitua o por `<<validDomains>>` seu nome de domínio totalmente qualificado.\n     * Substitua todas as ocorrências por `<<Microsoft-App-ID>>` uma **ID do aplicativo Microsoft do seu bot**.\n\n    ![Imagem de manifesto2](~/assets/images/sbs-messagingextension-action/botid1.png)\n"
- title: Criar e executar o serviço
  durationInMinutes: 1
  content: "**Para criar e executar o serviço usando a versão mais recente do Visual Studio ou linha Command**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Versão mais recente do Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Iniciar a versão mais recente do Visual Studio.\n   1. Navegue **até** **FileOpen** >  >  **Project/Solution**.\n\n      ![Abrir arquivo](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n   1. Selecione **o arquivo TeamsMessagingExtensionsAction.csproj** **csharp_dotnet** pasta.\n\n      ![Arquivo de solução](~/assets/images/sbs-messagingextension-action/openproject.png)\n\n   1. Pressione **F5** para executar o projeto.\n\n   1. Selecione **Sim** se a caixa de diálogo a seguir for exibida:\n\n      ![Certificado de Confiança](~/assets/images/sbs-messagingextension-action/certificate.png)\n\n      Uma página da Web é aberta com uma **mensagem Seu bot está pronto!**.\n\n      ![Aplicativo pronto](~/assets/images/sbs-messagingextension-action/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nNavegue **até amostras > csharp_dotnetcore > 51.teams-messaging-extensions-action** na janela Prompt de Comando e insira o seguinte comando:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: Adicionar aplicativo de Extensão de Mensagens de Ação ao Teams
  durationInMinutes: 1
  content: "1. No repositório clonado, navegue até **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**.\n\n1. Crie uma .zip com os seguintes arquivos presentes na **pasta Manifesto** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Arquivo ZIP](~/assets/images/sbs-messagingextension-action/zipfile.png) \n\n1. Vá para **Microsoft Teams**.\n\n1. Selecione **Aplicativos**.\n\n1. Selecione **Gerenciar seus aplicativos**.\n\n1. Selecione **Fazer o upload de um aplicativo personalizado**.\n\n   ![Carregar](~/assets/images/sbs-messagingextension-action/uploadacustomapp1.png)\n\n1. Selecione **Abrir** para carregar o arquivo .zip que você criou na **pasta Manifesto** .\n\n   ![Selecionar arquivo zip](~/assets/images/sbs-messagingextension-action/openzipfile.png)\n\n1. Selecione **Adicionar**.\n\n   ![Adicionar o aplicativo](~/assets/images/sbs-messagingextension-action/add.png)\n\n                \n"
- title: Interagir com o aplicativo no Teams
  durationInMinutes: 1
  content: "1. Selecione **Criar comando Card** na lista de comandos da caixa de redação.\n\n   ![card](~/assets/images/sbs-messagingextension-action/create-card.png)\n\n1. Insira suas informações no pop-up modal.\n\n   ![information](~/assets/images/sbs-messagingextension-action/output-card.png)\n\n1. Selecione **Enviar**.\n\n   ![submit](~/assets/images/sbs-messagingextension-action/submit.png)\n\n1. Selecione (...) no menu estouro.\n   \n1. Navegue até **Mais ações**.\n\n1. Selecione **Compartilhar Mensagem**.\n\n   ![Cartão de compartilhamento](~/assets/images/sbs-messagingextension-action/sharemessage.png)\n\n1. Selecione a caixa de seleção se precisar incluir imagem e enviar.\n\n   ![output](~/assets/images/sbs-messagingextension-action/sharemessageoutput.png)\n"
- title: Desafio completo
  durationInMinutes: 1
  content: >
    Você achou algo assim?

       ![Saída](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)
- content: Você concluiu o tutorial para começar com um aplicativo **action Messaging Extension** !
