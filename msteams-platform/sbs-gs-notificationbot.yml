### YamlMime:Tutorial
title: Compilar um bot de notificação com JavaScript
metadata:
  title: Compilar um bot de notificação com JavaScript
  description: Neste tutorial, você aprenderá a enviar notificação com JavaScript criando um novo bot de notificação com Teams Toolkit.
  audience: Developer
  level: Beginner
  ms.date: 05/04/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Voltar para Adicionar funcionalidade
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a341b5ae5e7eb4e3a1f9c9630b24fe8b8f805bad
  ms.sourcegitcommit: ca84b5fe5d3b97f377ce5cca41c48afa95496e28
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 06/17/2022
  ms.locfileid: "66143064"
items:
- durationInMinutes: 1
  content: >
    O bot de notificação envia proativamente mensagens Teams chat em grupo ou chat pessoal. Você pode disparar o bot de notificação com uma solicitação HTTP, como cartões ou textos.


    Neste tutorial, você aprenderá:


    - Como criar um bot de notificação com Teams Toolkit.

    - Sobre a estrutura de diretório do seu aplicativo.

    - Como enviar várias notificações.


    Este guia passo a passo ajuda você a criar um bot de notificação com Teams Toolkit. Você verá a seguinte saída:

      :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Saída do gatilho"border="true":::
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas necessárias para criar e implantar seus aplicativos.\n\n| &nbsp; | Instalar | Para usar |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de ferramentas do Teams](#install-the-teams-toolkit) | Uma Microsoft Visual Studio code que cria um scaffolding de projeto para seu aplicativo. Use a versão 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams colaborar com todas as pessoas com quem você trabalha por meio de aplicativos para chat, reunião, chamada e tudo em um só lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Ambiente de runtime do JavaScript de back-end. Use a versão 14 ou 16.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de build javaScript ou TypeScript. Use a versão mais recente. |\n| &nbsp; | [Microsoft 365](https://developer.microsoft.com/en-us/microsoft-365/dev-program) | Acesso à Teams conta com as permissões apropriadas para instalar um aplicativo. |\n\n> [!NOTE]\n> O guia é testado Teams Toolkit versão 4.0.0 e Nodejs versão 14 e 16. As etapas neste guia podem funcionar com outras versões, mas isso não foi testado.\n\n## <a name=\"prepare-development-environment\"></a>Preparar o ambiente de desenvolvimento\n\nDepois de instalar as ferramentas necessárias, configure o ambiente de desenvolvimento.\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalar o Teams Toolkit\n\nO Teams Toolkit ajuda a simplificar o processo de desenvolvimento com ferramentas para provisionar e implantar recursos de nuvem para seu aplicativo, publicar na Teams e muito mais. \n \nVocê pode usar o kit de ferramentas com Visual Studio Code, ou a CLI (interface de linha de comando), chamada `TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code e selecione **Extensões** (**Ctrl+Shift+X** / **⌘⇧-X** ou Exibir **> Extensões**).\n1. Na caixa de pesquisa, insira **Teams Toolkit**.\n1. Selecione **Instalar** ao lado do Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/teams-toolkit.png\" alt-text=\"A ilustração mostra a instalação Teams Toolkit extensão.\" border=\"true\":::\n\n O Teams Toolkit ícone é exibido na Visual Studio Code lateral depois que ele é instalado.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"A ilustração mostra o Teams Toolkit na Visual Studio Code lateral.\" border=\"true\":::\n\nVocê também pode encontrar o Teams Toolkit no [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nPara instalar a CLI do TeamsFx, use o gerenciador de `npm` pacotes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nDependendo da configuração, talvez seja necessário usar para `sudo` instalar a CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nÉ mais comum em sistemas Linux e macOS.\n\nCertifique-se de adicionar npm cache global ao path. Essa etapa normalmente é feita como parte do Node.js instalador.  \n\nVocê pode usar a CLI com o `teamsfx` comando. Teste se o comando está funcionando executando `teamsfx -h`.\n\n> [!NOTE]\n> Antes de executar o TeamsFx em terminais do PowerShell, habilite a **política de** execução com sinal remoto para o PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de Teams desenvolvimento\n\nUm **locatário** é como um espaço ou um contêiner em que você conversa, compartilha arquivos e executa reuniões para sua organização em Teams. Você também pode realizar o sideload e testar o aplicativo.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Isso é conhecido como sideload. Entre em sua conta Microsoft 365 para exibir essa opção.\n\n > [!NOTE]\n > O sideload é necessário para visualizar e testar aplicativos Teams ambiente local. Habilite o Sideload para visualizar e testar seu aplicativo Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nPara verificar o sideload de aplicativos Teams:\n\n 1. No cliente Teams, selecione **Store**.\n 1. Selecione **Gerenciar seus aplicativos**.\n 1. Selecione **Publicar um aplicativo**.\n 1. Procure a opção para Upload **um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado Teams.\":::\n\n     > [!NOTE]\n     > Contate Teams administrador, se você não tiver a opção de carregar um aplicativo personalizado.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário Teams desenvolvedor gratuito (opcional)\n\nSe você não tiver uma conta Teams desenvolvedor, poderá obtê-la gratuitamente. Participe do programa Microsoft 365 desenvolvedor!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Selecione **Configurar assinatura do E5 na** tela de boas-vindas.\n1. Configurar conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n1. Entre no Teams usando a nova conta de administrador. Agora você deve ter a **opção Upload um aplicativo** personalizado.\n"
- title: Criar bot de notificação
  durationInMinutes: 1
  content: "**Para criar um bot de notificação usando Visual Studio Code**\n\n 1. Abra o Visual Studio Code.\n \n 1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n 1. Selecione **Criar um novo aplicativo do Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-teams-app.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\" border=\"true\":::\n\n 1. Selecione **Criar uma nova opção Teams aplicativo** para criar um aplicativo usando Teams Toolkit.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"O assistente é iniciado para criar um novo projeto\" border=\"true\":::\n\n 1. Verifique se **o Bot de** Notificação está selecionado como a funcionalidade que você deseja criar em seu aplicativo. \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-notification-bot.png\" alt-text=\"Selecionar Funcionalidade do Aplicativo\" border=\"true\":::\n\n 1. Selecione **Servidor Restify do Gatilho HTTP** como o gatilho. \n 1. Selecione **OK**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-trigger.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"true\":::  \n\n 1. Selecione **JavaScript** como linguagem de programação.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-script.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\" border=\"true\":::    \n\n 1. Selecione o local para o workspace do projeto.\n 1. Selecione a **pasta Selecionar**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-folder.png\" alt-text=\"Selecionar Pasta\" border=\"true\":::\n \n 1. Insira um nome adequado para seu aplicativo, como mynotificationbot como o nome do aplicativo. \n 1. Selecione **Enter**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/type-notfication-name.png\" alt-text=\"Captura de tela mostrando onde inserir o nome do aplicativo.\" border=\"true\":::\n\n    > [!NOTE]\n    > Certifique-se de usar apenas caracteres alfanuméricos no nome do aplicativo.\n\n     O aplicativo de bot de notificação é criado em alguns segundos.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-bot.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\" border=\"true\":::\n\n 1. Selecione **o ícone Executar e Depurar** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: na Visual Studio Code lateral.\n\n 1. Selecione **Depurar(Edge)** **ou Depurar (Chrome)** na lista suspensa.\n\n 1. Selecione **o botão Iniciar Depuração** .\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Depuração de aplicativos\"border=\"true\"::: \n\n 1. Selecione **Adicionar**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-output.png\" alt-text=\"Minha Saída de Notificação1\"border=\"true\":::\n\n 1. Abra **Windows PowerShell**.\n\n 1. Execute o comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Gatilho do PowerShell\"border=\"true\":::   \n\n     Você obterá a seguinte saída em Teams:\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png\" alt-text=\"Saída do gatilho\"border=\"true\":::\n\n ## <a name=\"take-tour-of-source-code\"></a>Faça um tour pelo código-fonte\n\n Teams Toolkit fornece componentes para a criação de um aplicativo. Depois de criar o projeto, você pode exibir as pastas e os arquivos do projeto na área **explorer** do Visual Studio Code.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/folder-structure.png\" alt-text=\"guia estrutura\" border=\"true\":::\n\n Se você optar por usar a estrutura da interface do usuário, o código de modelo de exemplo a seguir fornecerá um scaffolding com React componentes.\n\n A nova pasta do projeto contém o seguinte conteúdo:\n\n | Nome da pasta | Conteúdos |\n | --- | --- |\n | `.fx` | Project, configuração e informações de ambiente |\n | `.vscode` | Arquivos do VS Code para depuração local |\n | `bot` | O código-fonte do bot |\n | `templates` | Modelos para o manifesto Teams aplicativo e os recursos correspondentes do Azure |\n \n  A implementação de notificação principal na **pasta do bot** e ela contém:\n\n | Nome do arquivo | Conteúdos |\n | --- | --- |\n | `src/adaptiveCards/` | Modelos para cartão adaptável  |\n | `src/internal/` | Código de inicialização gerado para a funcionalidade de notificação |\n | `src/index.*s` | O ponto de entrada para manipular mensagens de bot e enviar notificações |\n | `.gitignore` | Arquivo para excluir arquivos locais do projeto de bot |\n | `package.json` | O arquivo de pacote NPM para o projeto de bot |\n"
- title: Enviar notificação para Teams canal
  durationInMinutes: 1
  content: "**Para enviar notificação para Teams canal**\n\n1. No Visual Studio Code, no **EXPLORER**, selecione **MYNOTIFICATIONBOT> bot> src> index.js**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/file-path.png\" alt-text=\"Caminho do arquivo\" border=\"true\":::\n\n   Você verá a seguinte página:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/default-program.png\" alt-text=\"Programa Padrão\" border=\"true\":::\n\n1. Use o código a seguir depois `for (const target of await bot.notification.installations()) { ` Visual Studio Code.\n\n     ```bash\n     if (target.type === \"Channel\") {\n       const members = await target.members();\n       await target.sendMessage(\"This is a message to channel: \" + members.length + \" members.\");\n       for (const member of members) {\n         await member.sendMessage(\"This is a message to Member: \" + member.account.email);\n       }\n     }\n     /* \n     ```  \n\n      :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/code-add.png\" alt-text=\"Adicionar código\" border=\"true\":::\n\n    **Para personalizar o armazenamento:**\n\n    1. No Visual Studio Code, em **EXPLORER**, selecione **MYNOTIFICATIONBOT> bot> src>> initialize.js**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/initialize-storage.png\" alt-text=\"Armazenamento inicialização\" border=\"true\":::\n    \n       Você verá a seguinte página:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/storage-code.png\" alt-text=\"Armazenamento código\" border=\"true\":::\n\n    1. Atualize o código a seguir **initialize.js** arquivo para personalizar o armazenamento.\n\n         ```bash\n         const myStorage = new MyStorage(...);\n\n         // initialize ConversationBot with notification enabled and customized storage\n         const bot = new ConversationBot({\n             // The bot id and password to create BotFrameworkAdapter.\n             // See https://aka.ms/about-bot-adapter to learn more about adapters.\n             adapterConfig: {\n                 appId: process.env.BOT_ID,\n                 appPassword: process.env.BOT_PASSWORD,\n             },\n             // Enable notification\n             notification: {\n                 enabled: true,\n                 storage: myStorage,\n             },\n          });\n         ```  \n    1. Use seu próprio local de armazenamento em vez **do MyStorage**.\n\n        > [!NOTE]\n        > É necessário usar seu próprio armazenamento para o ambiente de produção. Se o armazenamento não for fornecido, o armazenamento de arquivos local padrão será considerado.\n\n1. Selecione **o ícone Executar e Depurar** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: na Visual Studio Code lateral.\n\n1. Selecione **Depurar(Edge)** **ou Depurar (Chrome)** na lista suspensa.\n\n1. Selecione **o botão Iniciar Depuração** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Depuração de aplicativos\" border=\"true\":::\n\n    Você obterá a seguinte saída em Teams.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation.png\" alt-text=\"Instalação do aplicativo\" border=\"true\":::\n\n1. Selecione **Adicionar a uma equipe** na lista suspensa.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation1.png\" alt-text=\"Minha Saída de Notificação1\" border=\"true\":::\n\n1. Na **caixa Pesquisar**, adicione qualquer **canal**.\n1. Selecione **Configurar um bot**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/setup-bot.png\" alt-text=\"Bot de instalação\" border=\"true\":::\n\n   A tela a seguir é exibida:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-notification.png\" alt-text=\"Notificação channe1\" border=\"true\":::\n\n1. Abra **Windows PowerShell**.\n\n1. Execute o comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Gatilho do PowerShell\"border=\"true\":::   \n\n   Você receberá a notificação no Teams canal:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-output.png\" alt-text=\"Saída do canal\" border=\"true\":::\n\n   Você receberá a notificação no chat pessoal:         \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/member-output.png\" alt-text=\"saída de membro\" border=\"true\":::\n"
- title: Implantar seu primeiro Teams aplicativo
  durationInMinutes: 1
  content: "\nVocê aprendeu a criar e executar um aplicativo Teams com a funcionalidade de bot de notificação. A etapa final é implantar seu aplicativo no Azure.\n\nVamos implantar o primeiro aplicativo com a funcionalidade de bot de notificação no Azure usando Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Entrar em sua conta do Azure\n\nUse sua conta para acessar o portal Microsoft Azure e fornecer provisionar novos recursos de nuvem para dar suporte ao seu aplicativo.\n\n1. Abra o Visual Studio Code.\n1. Abra a pasta do projeto que você criou o aplicativo de bot de notificação.\n1. Selecione o Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra lateral.  \n1. Selecione **Entrar no Azure**.\n\n    > [!TIP]\n    > Se você tiver a extensão de Conta do Azure instalada e estiver usando a mesma conta, ignore esta etapa.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n1. Entre em sua conta do Azure usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra as duas contas separadamente. Ele também lista o número de assinaturas utilizáveis do Azure disponíveis para você. \n    \n    > [!NOTE]\n    > Verifique se você tem pelo menos uma assinatura utilizável do Azure disponível.\n\n    Agora você está pronto para implantar seu aplicativo no Azure!\n\n## <a name=\"deploy-your-app-to-azure\"></a>Implantar seu aplicativo no Azure.\n\n  Em **IMPLANTAÇÃO**, você pode provisionar os recursos de nuvem necessários e o código do aplicativo é copiado para os recursos de nuvem criados.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Provisionar na nuvem em** **DEPLOYMENT**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-cloud.png\" alt-text=\"Captura de tela mostrando os comandos de provisionamento\" border=\"true\":::\n\n1. Selecione um grupo de recursos existente ou crie um novo.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/subscription-cloud.png\" alt-text=\"Captura de tela mostrando recursos para provisionamento\" border=\"true\":::\n\n   > [!NOTE]\n   > Uma caixa de diálogo é exibida mencionando que os custos podem ser incorridos durante a execução de recursos no Azure.\n\n1. Selecione **Provisionar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-confirm.png\" alt-text=\"Captura de tela da caixa de diálogo de provisionamento.\" border=\"true\":::\n\n   O processo de provisionamento cria recursos na nuvem do Azure. Você pode monitorar o progresso observando os diálogos no canto inferior direito.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-provision-success.png\" alt-text=\"Captura de tela mostrando a caixa de diálogo de provisionamento concluída.\" border=\"true\":::\n\n     Você tem a opção de exibir os recursos provisionados. Para este tutorial, você não precisa exibir recursos.\n\n1. Selecione **Implantar na nuvem em** **IMPLANTAÇÃO** após a conclusão do provisionamento.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-cloud.png\" alt-text=\"Captura de tela mostrando onde selecionar para implantar na nuvem.\" border=\"true\":::\n\n1. Selecione **Implantar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/Deploy-confirm.png\" alt-text=\"Implante para confirmar.\" border=\"true\":::\n\n   A implantação leva algum tempo. Você pode monitorar o progresso nas caixas de diálogo no canto inferior direito.\n    \n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-confirmation-cloud.png\" alt-text=\"Implantar confirmação.\" border=\"true\":::\n\n1. Selecione **Depuração Local** em **AMBIENTE** Visual Studio Code.\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/local-debug.png\" alt-text=\"Depuração local.\" border=\"true\":::\n\n1. Selecione **Depurar Borda** na lista suspensa.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/debug-cloud.png\" alt-text=\"Depuração local.\" border=\"true\":::\n\n1. Selecione **Adicionar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/app-cloud-output.png\" alt-text=\"Saída da nuvem do aplicativo.\" border=\"true\":::\n\n1. Abra **Windows PowerShell**.\n\n1. Execute o comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/windows-powershell1.png\" alt-text=\"Windows PowerShell\" border=\"true\":::\n\n    Você receberá a notificação em Teams:\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/cloud-final-output.png\" alt-text=\"Saída Final da Nuvem\" border=\"true\":::\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nNa janela do terminal:\n\n1. Execute `teamsfx new` para criar um novo projeto.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Execute `teamsfx provision` para criar um recurso do Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Execute `teamsfx deploy` para implantar o aplicativo.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Execute `teamsfx preview` para executar o aplicativo.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Desafio completo
  durationInMinutes: 1
  content: >
    Você conseguiu algo assim?

     :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Saída do gatilho"border="true":::
- content: Você concluiu o tutorial para criar o bot de notificação!
