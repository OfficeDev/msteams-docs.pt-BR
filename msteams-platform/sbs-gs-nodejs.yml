### YamlMime:Tutorial
title: Criar seu primeiro aplicativo usando o Node.js
metadata:
  title: Hello World com Node.js
  description: Neste tutorial, você aprenderá a criar o aplicativo Hello World com Node.js.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Visão geral de Voltar para Começar
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 07d6d767cbdb7fefbacde7e0446eb28f9d890b18
  ms.sourcegitcommit: a36760750ff4f510c374a4c956be57f7c1b4a0db
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/20/2022
  ms.locfileid: "63674954"
items:
- durationInMinutes: 1
  content: >
    Inicie Microsoft Teams desenvolvimento de aplicativos criando seu primeiro aplicativo com uma guia, um bot e um recurso de extensão de mensagem.


    >Este aplicativo terá todos os recursos e cada um tem sua própria interface do usuário e UX:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagrama mostrando que esse aplicativo tem três recursos." border="false":::


    Neste tutorial, você aprenderá:


    - Como configurar um novo projeto usando ferramentas de linha de comando.

    - Como criar três aplicativos com um recurso diferente cada, guia, bot e extensão de mensagem.

    - Como implantar seu aplicativo no Portal do Desenvolvedor
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará instalar para criar e implantar um Teams aplicativo.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js e NPM](https://nodejs.org/) | Ambiente de tempo de execução javaScript back-end. Use a versão mais recente do v14 LTS.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams de aplicativo (bots de conversação, extensões de mensagens e webhooks de entrada) exigem conexões de entrada. Um túnel conecta seu sistema de desenvolvimento a Teams. Não é necessário para aplicativos que incluem apenas guias. Este pacote é instalado no diretório do projeto (usando npm `devDependencies`). |\n| &nbsp; | [Microsoft&nbsp; Borda](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de com build javaScript, TypeScript ou Estrutura do SharePoint (SPFx) . Use a versão 1.55 ou posterior. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git para usar o repositório de Node.js exemplo do GitHub. |\n| &nbsp; |  [gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | Kit de ferramentas JavaScript de código aberto. Instale a versão 4.0.0 ou posterior. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams colaborar com todos com os quais você trabalha por meio de aplicativos para chat, reuniões, chamada - tudo em um só lugar. | \n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) e [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-back baseado em nuvem para seu aplicativo Teams no Azure. |\n| &nbsp; | [React ferramentas de desenvolvedor para Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [React de desenvolvedor para MicrosoftEdge&nbsp;](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Ferramentas de navegador para desenvolvimento de guias com JavaScript. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, uma ferramenta baseada em navegador que permite executar uma consulta da Microsoft Graph dados. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo Teams, incluindo a sua organização ou o Teams store. |\n| &nbsp; | **Visual Studio Code Extensões** | &nbsp; |\n| &nbsp; | [Ferramentas principais das funções do Azure](/azure/azure-functions/functions-run-local) | Componentes de back-end localmente durante uma execução de depuração local, incluindo os auxiliares de autenticação necessários ao executar seus serviços no Azure. Ele é instalado no diretório do projeto (usando o npm `devDependencies`). |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | Vinculações personalizadas para implantações de aplicativos de depuração local e funções do Azure. Se você não tiver instalado o SDK .NET 3.1 (ou posterior) globalmente, a versão portátil poderá ser instalada. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Verificar números de versão para ferramentas instaladas\n\nUse os comandos a seguir para verificar se as versões instaladas para as ferramentas são necessárias.\n\n> [!NOTE]\n> Use a janela de terminal com a que você está mais confortável em sua plataforma. Esses exemplos usam Git Bash (incluído na instalação do Git), mas esses scripts serão executados na maioria das plataformas.\n\nPara verificar os números de versão das ferramentas instaladas:\n\n1. Abra uma janela de terminal. \n2. Execute o seguinte comando para verificar a `git` versão instalada no computador:\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemplo de saída: `git version 2.19.0.windows.1`\n    \n3. Execute o seguinte comando para verificar a `node.js` versão:\n    \n    ```bash\n    $ node -v\n    ```\n\n    Exemplo de saída: `v8.9.3`\n\n4. Verifique o número da versão de `npm`:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Exemplo de saída: `5.5.1`\n\n5. Verifique o número da versão de `gulp`:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Exemplo de saída:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Execute o seguinte comando para verificar o número de versão de Visual Studio Code:\n\n    ```bash\n    code --version\n    ```\n\n    Exemplo de saída:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nVocê pode usar uma versão diferente desses aplicativos sem qualquer problema.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário Teams desenvolvimento\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, onde você conversa, compartilha arquivos e executar reuniões.\nEsse espaço também é onde você faz sideload e testa seu aplicativo. \n\nVamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"enable-sideloading-option\"></a>Habilitar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre na sua conta Microsoft 365 para exibir essa opção.\n  \n> [!NOTE]\n> O sideload é necessário para visualizar e testar aplicativos Teams ambiente local. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo Teams localmente.\n\nVocê já tem um locatário e tem acesso ao administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode fazer sideload de aplicativos Teams:\n\n1. No cliente Teams, selecione **Ícone da** Loja.\n1. Selecione **Gerenciar seus aplicativos**.\n1. Procure a opção para Upload **um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos será habilitado.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado Teams.\":::\n\n    > [!NOTE]\n    > Se Teams não mostrar a opção de carregar um aplicativo personalizado, fale com seu Teams administrador.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Criar um locatário Teams desenvolvedor gratuito\n\nSe você não tiver uma conta de desenvolvedor Teams, poderá obter gratuitamente. Participe do programa Microsoft 365 desenvolvedor!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, selecione **Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemplo do que você vê depois de se inscrever no programa Microsoft 365 desenvolvedor.\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem a opção **Upload aplicativo personalizado** no Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você deseja hospedar seu aplicativo ou acessar recursos no Azure, deve ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configura suas contas. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar!\n\nVocê pode continuar a usar essa janela de terminal para executar os comandos a seguir neste tutorial.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Baixar o exemplo\n\nPara este tutorial, use Hello [, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) sample to get started. Você pode baixá-lo e cloná-lo GitHub.\n\n**Para usar o Git Bash para clonar o repositório de exemplo**:\n\n1. Abra uma janela de terminal.\n1. Execute o seguinte comando para clonar o repositório de exemplo no computador:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Você pode [bifurcar](https://help.github.com/articles/fork-a-repo/) [esse repo](https://github.com/OfficeDev/Microsoft-Teams-Samples) se quiser modificar e verificar suas alterações no seu GitHub para referência futura.\n"
- title: Criar seu primeiro Node.js app
  durationInMinutes: 1
  content: "\nDepois de clonar o repo para Node.js de exemplo, você pode criar e testar o aplicativo em seu ambiente local.\n\nNesta página, você aprenderá a:\n1. [Criar e executar seu primeiro aplicativo](#build-and-run-the-sample)\n1. [Testar seu aplicativo de exemplo](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Criar e executar o exemplo\n\nDepois que o repositório for clonado, você poderá criar o aplicativo de exemplo.\n\n1. Abra uma janela de terminal.\n1. Execute o comando alterar diretório no terminal para alterar para o diretório de aplicativo de exemplo:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Instale todas as dependências usando o seguinte comando:\n\n    ```bash\n    npm install\n    ```\n\n    Você deve ver várias dependências sendo instaladas.\n\n1. Execute o aplicativo usando o seguinte comando após a conclusão da instalação:\n\n    ```bash\n    npm start\n    ```\n\n    Quando o aplicativo Hello World é iniciado, ele é exibido `App started listening on port 3333` na janela do terminal.\n\n    > [!NOTE]\n    > Se você vir um número de porta diferente exibido na mensagem acima, é porque você tem uma variável de ambiente PORT definida. Você pode continuar a usar essa porta ou alterar sua variável de ambiente para 3333.\n\n1. Abra uma janela do navegador e use as SEGUINTES URLs para verificar se todas as URLs do aplicativo Hello World estão sendo carregadas:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Imagem mostrando Node.js host local\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Imagem mostrando Node.js local host hello page\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Imagem mostrando Node.js primeiro host local\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Imagem mostrando Node.js segunda guia do host local\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Testar seu aplicativo de exemplo em ambiente local\n\nLembre-se de que os aplicativos Microsoft Teams são aplicativos Web expondo um ou mais recursos. Disponibilizar seu aplicativo na Internet para que a plataforma Teams possa carregá-lo. Para tornar seu aplicativo acessível pela Internet, você precisa *hospedar* seu aplicativo.\n\nPara testes locais, você pode executar o aplicativo em sua máquina local e criar um túnel para ele com um ponto de extremidade da Web. [ngrok](https://ngrok.com) é uma ferramenta gratuita que permite que você faça exatamente isso. Com *o ngrok*, você pode obter um endereço da Web como `https://d0ac14a5.ngrok.io` (essa URL é apenas um exemplo). Você pode [baixar e instalar](https://ngrok.com/download) *o ngrok* para seu ambiente. Certifique-se de adicioná-lo a um local no `PATH`.\n\n### <a name=\"create-ngrok-tunnel\"></a>Criar túnel ngrok\n\nDepois de instalar o ngrok, você pode criar um túnel para implantar seu aplicativo localmente.\n\n1. Abra uma nova janela de terminal.\n1. Execute o seguinte comando para criar um túnel. O aplicativo de exemplo usa a porta 3333:\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    O túnel ngrok é criado. Aqui está um exemplo de túnel ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Imagem mostrando túnel ngrok\" border=\"false\":::\n\n    *O Ngrok* escuta solicitações da Internet e as roteia para seu aplicativo em execução na porta 3333.\n\nPara verificar a implantação local do aplicativo:\n\n1. Abra o navegador.\n1. Carregue seu aplicativo usando a seguinte URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Veja um exemplo da URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Imagem mostrando node.js aplicativo em execução localmente no túnel ngrok\" border=\"false\":::\n\n    Você pode tentar adicionar `hello`, `first`ou à `second` url do túnel ngrok para exibir páginas de tabulação diferentes do aplicativo.\n\n    O Ngrok escuta solicitações da Internet e as encaminha para seu aplicativo em execução na porta 3333.        \n\n1. Anote o endereço de encaminhamento no console ngrok. Você precisa dessa URL para implantar seu aplicativo Teams.\n\n    > [!NOTE]\n    > Se você usou uma porta diferente durante [a com build e](#build-and-run-the-sample) a executar, certifique-se de usar o mesmo número de porta para configurar o *túnel ngrok* .\n    > [!TIP]\n    > É uma boa ideia executar o *ngrok* em uma janela de terminal diferente para mantê-lo em execução sem interferir no aplicativo de nó, que talvez você tenha que parar, recriar e executar de novo. A *sessão ngrok* retornará informações úteis de depuração nesta janela. A versão paga do *ngrok* permite nomes persistentes.\n\n    >[!IMPORTANT] \n    > Se você usar a versão gratuita do ngrok, seu aplicativo estará disponível somente durante a sessão atual em sua máquina de desenvolvimento. Ele não estará disponível se o computador for desligado ou for parar de dormir. Quando você reinicia o serviço, ele retorna um novo endereço. Em seguida, você deve atualizar cada local que usa o endereço desatualizado. Lembre-se desta etapa ao compartilhar o aplicativo para teste.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Criar Node.js pacote de aplicativos\n\nVocê pode usar para `gulp CLI` criar o pacote de aplicativos para Node.js.\n\n1. Abra uma janela de terminal.\n1. Verifique se você está no diretório onde o `node.js` é clonado. Esta é a pasta onde `gulpfile.js` é colocada. \n1. Execute o seguinte comando para criar o pacote Node.js aplicativo.\n\n    ```$ gulp```\n\n    Veja um exemplo da saída do comando:\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    O pacote de aplicativos helloworldapp.zip é criado. Você pode encontrar o arquivo de pacote no caminho a seguir.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Procure o arquivo de pacote do aplicativo, helloworldapp.zip, se o local não estiver claro na ferramenta que você está usando.\n"
- title: Configurar seu primeiro aplicativo Node.js usando o Portal do Desenvolvedor
  durationInMinutes: 1
  content: "\nVocê pode usar [o Portal do Desenvolvedor](https://dev.teams.microsoft.com/) para carregar o pacote de aplicativos Teams e configurar os recursos do aplicativo. O Portal do Desenvolvedor é um Teams que simplifica a criação e o registro de um aplicativo. Instale no Teams store!\n\nDepois de criar e testar seu Teams, você pode configurá-lo e visualiza-lo usando o Portal do Desenvolvedor.\n\nA atualização do pacote de aplicativos inclui:\n\n1. [Importando o pacote de aplicativos para o Portal do Desenvolvedor](#import-the-app-package-to-developer-portal)\n1. [Configurando recursos do aplicativo](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importar o pacote de aplicativos para o Portal do Desenvolvedor\n\nPara importar o pacote do aplicativo:\n\n1. Abra o Microsoft Teams.\n\n1. Selecione o **ícone da** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: Loja na barra à esquerda.\n\n1. Pesquise **o Portal do Desenvolvedor** na barra de pesquisa e selecione **Portal do Desenvolvedor***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Selecionar aplicativo do Portal do Desenvolvedor\" border=\"false\":::\n\n1. Selecione **Abrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Imagem mostrando o aplicativo abrir o Portal do Desenvolvedor\" border=\"false\":::\n\n    O Portal do Desenvolvedor é aberto.\n\n1. Selecione a **guia Aplicativos** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Aplicativo do Portal do Desenvolvedor\" border=\"false\":::\n\n1. Selecione **Importar aplicativo**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Imagem mostrando o botão Importar aplicativo\" border=\"false\":::\n\n1. Abra o pacote do **aplicativohelloworldapp.zip** a partir do seguinte caminho na estrutura de diretório de C# de repo de exemplo:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    O **aplicativo Hello World** é importado no Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Imagem mostrando aplicativo importado em Teams\" border=\"false\":::\n\n    Depois de importar seu aplicativo para o Portal do Desenvolvedor, você poderá exibir seus detalhes no Portal do Desenvolvedor.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Fazer um tour pelo aplicativo no Portal do Desenvolvedor\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, você poderá exibir seus detalhes, incluindo o arquivo de manifesto.\n\n#### <a name=\"view-app-information\"></a>Exibir informações do aplicativo\n\n1. Selecione **Informações Básicas** no painel esquerdo do Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Imagem mostra o painel esquerdo do Portal do Desenvolvedor\" border=\"false\":::\n\n1. Observe as seguintes informações das informações básicas:\n    - ID do aplicativo\n    - Informações do desenvolvedor\n    - URLs do aplicativo\n\n1. Selecione **Identidade visual** no painel esquerdo para exibir as informações de identidade visual.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Imagem mostrando informações de identidade visual do aplicativo\" border=\"false\":::\n\n    Esses detalhes são importantes se você estiver escrevendo um novo aplicativo para distribuição.\n\n#### <a name=\"view-app-features\"></a>Exibir recursos do aplicativo\n\n- Selecione **Recursos do aplicativo** no painel esquerdo do Portal do Desenvolvedor.\n\n    Os recursos do aplicativo aparecem no painel direito. Você pode exibir cartões para Aplicativo Pessoal, Bot e Extensão de Mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Imagem mostrando recursos do aplicativo\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Exibir o manifesto do aplicativo\n\nVocê usa o arquivo de manifesto para configurar recursos, recursos necessários e outros atributos importantes para seu aplicativo.\n\n- Selecione **Publicar** no painel esquerdo para abrir a lista suspenso e selecione **Pacote de aplicativos**.\n\n    O manifesto do aplicativo aparece no painel direito.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Imagem mostrando arquivo de manifesto do aplicativo no Portal do Desenvolvedor\" border=\"false\":::\n\n    O arquivo de manifesto aparece no painel direito.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Configurar os recursos do seu aplicativo\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, a próxima etapa é configurar os recursos do aplicativo. O Portal do Desenvolvedor contém todas as informações do aplicativo em seções diferentes. Isso facilita a configuração dos recursos do aplicativo.\n\nUsando o Portal do Desenvolvedor, você pode:\n1. [Configurar o aplicativo de guia pessoal](#configure-personal-tab-app)\n1. [Configurar bot](#configure-bot)\n1. [Configurar extensão de mensagem](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurar o aplicativo de guia pessoal\n\nPara configurar o aplicativo de guia pessoal:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no **cartão de aplicativo** pessoal no painel Recursos **do** aplicativo e selecione **Editar**.\n\n    Os detalhes da guia Hello são exibidos.\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone da guia Hello e selecione **Editar** para abrir os detalhes do aplicativo para atualização.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Imagem mostrando o menu da guia Hello\" border=\"false\":::\n\n1. Insira os detalhes do aplicativo para a guia Hello em **Adicionar uma guia ao seu aplicativo pessoal**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Imagem mostrando detalhes da guia Hello\" border=\"false\":::\n\n    Insira os seguintes detalhes:\n    - **Nome**: guia Olá.\n    - **URL de conteúdo** **e URL do site**: o endereço de encaminhamento na sessão do console ngrok.\n    - **Contexto**: Selecione **Guia Pessoal**.\n\n1. Selecione **Atualizar**.\n\n    Os detalhes da guia Hello aparecem no **painel Aplicativo** Pessoal.\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Imagem mostrando detalhes da guia Hello a serem salvos\" border=\"false\":::\n\n    O **painel Aplicativo Pessoal** agora mostra a nova guia e uma guia Sobre criada automaticamente.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Imagem mostrando a guia Hello e detalhes da guia Sobre\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Configurar bot\n\nÉ fácil adicionar a funcionalidade de bots ao seu aplicativo. O aplicativo de exemplo Hello World já tem um bot como parte do exemplo, mas você deve registrá-lo com Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Imagem mostrando aplicativo bot importado sem ID do aplicativo\" border=\"false\":::\n\nO bot importado do exemplo não tem uma ID de aplicativo associada. Você precisará excluí-lo e criar um novo bot. O Portal do Desenvolvedor cria uma nova ID de aplicativo e registra-a com Teams.\n\nAdicionar e configurar um bot envolve:\n\n1. [Adicionando um novo bot](#to-add-a-new-bot)\n1. [Adicionar bot ao aplicativo](#to-add-bot-to-app)\n1. [Configurando escopo de bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Para adicionar um novo bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no **cartão Bot** no painel Recursos **do** aplicativo e selecione **Excluir**.\n\n1. Selecione **Ferramentas** para adicionar funcionalidade.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Opção Ferramentas de exibição de imagem\" border=\"false\":::\n\n1. Selecione **Gerenciamento de bot** **no painel** Ferramentas.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Imagem mostrando o painel de gerenciamento de bots\" border=\"false\":::\n\n1. Selecione **+ Novo Bot** no painel de **gerenciamento de** Bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Imagem mostrando a nova opção bot\" border=\"false\":::\n\n1. Insira um nome adequado para seu bot e selecione **Adicionar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Imagem mostrando como adicionar bot\" border=\"false\":::\n\n    O **painel Configurar** aparece mostrando detalhes do novo bot no painel esquerdo.\n\n1. Insira a URL de encaminhamento do `ngrok` console e selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Imagem mostrando como adicionar ponto de extremidade de bot\" border=\"false\":::\n\n1. Selecione **Segredos do** cliente e selecione **Adicionar um segredo do cliente ao bot** para gerar uma senha para o bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Imagem mostrando a seção segredo do cliente\" border=\"false\":::\n\n    O Portal do Desenvolvedor gera uma senha para o bot.\n\n    Você pode usar o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: ícone para copiar a senha. Para este tutorial, você não precisa copiá-lo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Imagem mostrando o segredo do cliente gerado\" border=\"false\":::\n\n1. Clique em **OK**.\n\n1. Selecione **< Bots** para retornar ao painel de gerenciamento **de** Bot.\n\n    O **painel de gerenciamento** de Bot mostra o novo Bot adicionado com uma ID de aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Imagem mostrando novo bot com ID do aplicativo\" border=\"false\":::\n\n1. Certifique-se de salvar a ID do Bot juntamente com a senha da **seção Segredo do** cliente.\n\n##### <a name=\"to-add-bot-to-app\"></a>Para adicionar bot ao aplicativo\n\n1. Abra o **painel Recursos do** aplicativo e selecione o **cartão Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Imagem mostrando o cartão de bot\" border=\"false\":::\n\n    O **painel Bot** é exibido.\n\n1. Selecione seu aplicativo bot em **Selecionar um bot existente** e selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Imagem mostrando como selecionar um aplicativo bot existente\" border=\"false\":::\n\n    O novo bot é adicionado ao seu aplicativo com sua própria ID de aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Imagem mostrando novo bot adicionado ao aplicativo\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Para configurar o escopo do bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no novo **cartão Bot** e selecione **Editar**.\n\n1. Mova pelo painel **Bot** para exibir a seção **Comandos** e selecione **+ Adicionar um Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Seção Comandos de exibição de imagem\" border=\"false\":::\n\n1. Insira um nome e uma descrição adequados para o **Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Imagem mostrando como adicionar detalhes de comandos\" border=\"false\":::\n\n1. Selecione todos os três escopos do comando e selecione **Adicionar**.\n    - **Pessoal**\n    - **Equipe**\n    - **Chat em Grupo**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Imagem mostrando como salvar detalhes de comandos\" border=\"false\":::\n\n    O novo comando é adicionado à seção **Comandos** do painel **Bot** .\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Imagem mostrando detalhes de comandos a serem salvos\" border=\"false\":::\n\n    Os detalhes do comando são salvos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Imagem mostrando detalhes de comandos salvos\" border=\"false\":::\n\n1. Abra **o painel** de recursos do aplicativo e selecione **Cartão de aplicativo** pessoal para exibir os detalhes da guia do aplicativo.\n\n    Você verá que uma guia para seu novo bot de chat é adicionada ao seu aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Imagem mostrando a guia de chat configurada\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurar extensão de mensagem\n\nAs extensões de mensagens permitem que os usuários peçam informações do seu serviço e postem essas informações. As informações são postadas na forma de cartões na conversa do canal. As extensões de mensagens aparecem na parte inferior da caixa de redação.\n\nPara adicionar uma nova extensão de mensagem:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no cartão **Extensão de** Mensagem no painel Recursos **do** Aplicativo e selecione **Excluir**.\n\n1. Selecione **Extensão de** Mensagem no **painel Recursos do** aplicativo.\n\n1. Selecione o nome do seu aplicativo bot na lista suspenso **Selecionar um bot** existente no painel **Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Imagem mostrando painel de extensão de mensagem para selecionar bot\" border=\"false\":::\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Imagem mostrando painel de extensão de mensagem\" border=\"false\":::\n\n    A extensão da mensagem é salva e a seção **Comandos** é exibida no painel **Extensão de** mensagem.\n\n1. Selecione **+ Adicionar um comando** para definir o escopo do que seu aplicativo de extensão de mensagem pode fazer.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Seção Image showing Command\" border=\"false\":::\n\n    A **caixa de diálogo Adicionar um comando** .\n\n1. Verifique se **a Pesquisa** está selecionada como o tipo de comando que você deseja adicionar na **caixa de diálogo Adicionar um comando** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar um Comando\" border=\"false\":::\n\n1. Insira informações adequadas para os seguintes detalhes:\n    - ID do comando\n    - Título do comando\n    - Descrição do comando\n\n1. Mova a caixa de diálogo para exibir os detalhes restantes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Imagem mostrando os detalhes restantes em Adicionar uma caixa de diálogo De comando\" border=\"false\":::\n\n1. Verifique **se Make default** está selecionado.\n1. Selecione os seguintes contextos para o comando de extensão de mensagem:\n    - Caixa de comando\n    - Caixa de redação\n    - Mensagem\n1. Insira informações adequadas para os seguintes detalhes:\n    - Nome do parâmetro\n    - Título do parâmetro\n    - Descrição do parâmetro\n\n1. Selecione **Texto** como o tipo de entrada.\n1. Selecione **Salvar**\n1. O comando de extensão de mensagem é salvo e mostra na lista de comandos no painel **Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Imagem mostrando Comando adicionado\" border=\"false\":::\n\n1. Selecione **Salvar**.\n1. Painel **Abrir recursos do** aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Imagem mostrando recursos configurados para o aplicativo Hello World\" border=\"false\":::\n\n    Você verá todos os três recursos - aplicativo de guia pessoal, bot e extensão de mensagem - configurados para o aplicativo Hello World.\n"
- title: Visualizar e testar seu Node.js aplicativo
  durationInMinutes: 1
  content: "\nDepois de importar seu aplicativo e configurar os recursos no Portal do Desenvolvedor, você pode visualizar e testar o aplicativo de exemplo.\n\n## <a name=\"preview-your-app-in-teams\"></a>Visualizar seu aplicativo em Teams\n\nDepois de configurar os recursos do seu aplicativo, você pode visualizar e testar seu aplicativo Teams no ambiente local.\n\nPara visualizar seu aplicativo:\n\n1. Selecione **Visualizar no Teams** na barra de ferramentas portal do desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Imagem mostrando o botão Visualizar\" border=\"false\":::\n\n    O Portal do Desenvolvedor informa que seu aplicativo é sideload com êxito.\n\n1. Selecione **Gerenciar seus aplicativos**.\n   Seu aplicativo está listado nos aplicativos com sideload. \n1. Encontre seu aplicativo usando a caixa de pesquisa, selecione os três pontos em sua linha.\n1. Selecione a **opção Exibir** .\n    A **página Adicionar** é exibida para seu aplicativo.\n1. Selecione **Adicionar** para carregar o aplicativo Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar aplicativo\" border=\"false\":::\n\n    Seu aplicativo agora está disponível no Teams. Você pode exibir todas as guias e testar os recursos:\n\n    - Guia Olá:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Imagem mostrando a guia Hello no ambiente local\" border=\"false\":::\n\n    - Bot de chat:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Imagem mostrando o bot do aplicativo no ambiente local\" border=\"false\":::\n\n        Você pode enviar uma mensagem usando o chat.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Imagem mostrando chat no ambiente local\" border=\"false\":::\n\n    - Extensão da mensagem:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Imagem mostrando extensão de mensagem no ambiente local\" border=\"false\":::\n\n        Você pode tentar uma pesquisa usando a extensão da mensagem.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Imagem mostrando a pesquisa usando extensão de mensagem no ambiente local\" border=\"false\":::\n\n    - Guia Sobre:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Imagem mostrando a guia Sobre no ambiente local\" border=\"false\":::"
