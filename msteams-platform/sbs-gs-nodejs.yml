### YamlMime:Tutorial
title: Criar seu primeiro aplicativo usando o Node.js
metadata:
  title: Olá, Mundo com Node.js
  description: Neste tutorial, você aprenderá a criar um aplicativo Olá, Mundo com o Node.js configurando um novo projeto, compilar e implantar aplicativos de guia, bot e extensão de mensagem.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Visão geral de Voltar à Introdução
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: b5124b250143bb7aa9a70ad62de68309fbe84285
  ms.sourcegitcommit: 42602e8ec917f5033c0b6a95cf65b428db3c5b0a
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 08/09/2022
  ms.locfileid: "67286039"
items:
- durationInMinutes: 1
  content: >
    Inicie o desenvolvimento de aplicativos do Microsoft Teams criando seu primeiro aplicativo com uma guia, um bot e uma funcionalidade de extensão de mensagem.


    > Esse aplicativo terá todos os recursos e cada um terá sua própria interface do usuário e experiência do usuário:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagrama mostrando que esse aplicativo tem três recursos.":::


    Neste tutorial, você aprenderá:


    - Como configurar um novo projeto usando ferramentas de linha de comando.

    - Como criar três aplicativos com uma funcionalidade diferente cada: guia, bot e extensão de mensagem.

    - Como implantar seu aplicativo no Portal do Desenvolvedor.
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará instalar para criar e implantar um aplicativo do Teams.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js e NPM](https://nodejs.org/) | Ambiente de runtime do JavaScript de back-end. Use a versão mais recente do v16 LTS.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Os recursos do aplicativo Teams (bots de conversa, extensões de mensagem e webhooks de entrada) exigem conexões de entrada. Um túnel conecta seu sistema de desenvolvimento ao Teams. Ele não é necessário para aplicativos que incluem apenas guias. Esse pacote é instalado no diretório do projeto (usando npm `devDependencies`). |\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de compilação JavaScript, TypeScript ou Estrutura do SharePoint (SPFx). Use a versão 1.55 ou posterior. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git para usar o repositório Node.js aplicativo de exemplo do GitHub. |\n| &nbsp; |  [Gole](https://gulpjs.com/docs/en/getting-started/quick-start) | Kit de ferramentas JavaScript de software livre. Instale a versão 4.0.0 ou posterior. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | O Microsoft Teams para colaborar com todos com quem você trabalha por meio de aplicativos para chats, reuniões, chamadas - tudo em um só lugar. | \n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [CLI do Microsoft Azure](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-end baseado em nuvem para seu aplicativo Teams no Azure. |\n| &nbsp; | [React Developer Tools para Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [React Developer Tools para Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Ferramentas de navegador para desenvolvimento de guias com JavaScript. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, uma ferramenta baseada em navegador que permite executar uma consulta de dados do Microsoft Graph. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo do Teams, inclusive para sua organização ou para a loja do Teams. |\n| &nbsp; | **Visual Studio Code extensões** | &nbsp; |\n| &nbsp; | [Ferramentas do Azure Functions Core versão 3.](/azure/azure-functions/functions-run-local) | Componentes de back-end localmente durante uma execução de depuração local, incluindo os auxiliares de autenticação necessários ao executar seus serviços no Azure. Ele é instalado no diretório do projeto (usando o npm `devDependencies`). |\n| &nbsp; | [SDK DO .NET](/dotnet/core/install/) | Associações personalizadas para depuração local e implantações Azure Functions aplicativo. Se você não tiver instalado o SDK do .NET 3.1 (ou posterior) globalmente, a versão portátil poderá ser instalada. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Verificar números de versão para ferramentas instaladas\n\nUse os comandos a seguir para verificar se as versões instaladas para as ferramentas são necessárias.\n\n> [!NOTE]\n> Use a janela do terminal com a qual você está mais familiarizado em sua plataforma. Esses exemplos usam o Git Bash (que está incluído na instalação do Git), mas esses scripts serão executados na maioria das plataformas.\n\nPara verificar os números de versão das ferramentas instaladas:\n\n1. Abra uma janela de terminal. \n2. Execute o seguinte comando para verificar a `git` versão instalada no computador:\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemplo de saída: `git version 2.19.0.windows.1`\n    \n3. Execute o seguinte comando para verificar a `node.js` versão:\n    \n    ```bash\n    $ node -v\n    ```\n\n    Exemplo de saída: `v8.9.3`\n\n4. Verifique o número de versão de `npm`:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Exemplo de saída: `5.5.1`\n\n5. Verifique o número de versão de `gulp`:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Exemplo de saída:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Execute o seguinte comando para verificar o número de versão Visual Studio Code:\n\n    ```bash\n    code --version\n    ```\n\n    Exemplo de saída:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nVocê pode usar uma versão diferente desses aplicativos sem nenhum problema.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de desenvolvimento do Teams\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, onde você conversa, compartilha arquivos e executa reuniões.\nEsse espaço também é onde você faz sideload e testa seu aplicativo. \n\nVamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"enable-sideloading-option\"></a>Habilitar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre em sua conta do Microsoft 365 para exibir essa opção.\n  \n> [!NOTE]\n> O sideload é necessário para visualizar e testar aplicativos no ambiente local do Teams. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo no Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode fazer sideload de aplicativos no Teams:\n\n1. No cliente do Teams, selecione o **ícone da** Loja.\n1. Selecione **Gerenciar seus aplicativos**.\n1. Procure a opção para **carregar um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado no Teams.\":::\n\n    > [!NOTE]\n    > Se o Teams não mostrar a opção de carregar um aplicativo personalizado, fale com o administrador do Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Criar um locatário de desenvolvedor gratuito do Teams\n\nSe você não tiver uma conta de desenvolvedor do Teams, poderá obtê-la gratuitamente. Participe do programa de desenvolvedor do Microsoft 365!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, selecione **Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemplo do que você vê depois de se inscrever no programa de desenvolvedor do Microsoft 365.\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem **a opção Carregar um aplicativo personalizado** no Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você quiser hospedar seu aplicativo ou acessar recursos no Azure, deverá ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configura suas contas. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar!\n\nVocê pode continuar a usar essa janela de terminal para executar os comandos a seguir neste tutorial.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Baixar o exemplo\n\nPara este tutorial, use [o Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) exemplo para começar. Você pode baixá-lo e cloná-lo do GitHub.\n\n**Para usar o Git Bash para clonar o repositório de exemplo**:\n\n1. Abra uma janela de terminal.\n1. Execute o seguinte comando para clonar o repositório de exemplo em seu computador:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Você pode [bifurcar](https://help.github.com/articles/fork-a-repo/) [esse repositório](https://github.com/OfficeDev/Microsoft-Teams-Samples) se quiser modificar e verificar suas alterações no repositório GitHub para referência futura.\n"
- title: Criar seu primeiro Node.js aplicativo
  durationInMinutes: 1
  content: "\nDepois de clonar o repositório para Node.js aplicativo de exemplo, você pode compilar e testar o aplicativo em seu ambiente local.\n\nNesta página, você aprenderá a:\n1. [Compilar e executar seu primeiro aplicativo](#build-and-run-the-sample)\n1. [Testar seu aplicativo de exemplo](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Criar e executar o exemplo\n\nDepois que o repositório for clonado, você poderá criar o aplicativo de exemplo.\n\n1. Abra uma janela de terminal.\n1. Execute o comando alterar diretório no terminal para alterar para o diretório do aplicativo de exemplo:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Instale todas as dependências usando o seguinte comando:\n\n    ```bash\n    npm install\n    ```\n\n    Você deve ver várias dependências sendo instaladas.\n\n1. Execute o aplicativo usando o seguinte comando após a conclusão da instalação:\n\n    ```bash\n    npm start\n    ```\n\n    Quando o Olá, Mundo é iniciado, ele é exibido `App started listening on port 3333` na janela do terminal.\n\n    > [!NOTE]\n    > Se você vir um número de porta diferente exibido na mensagem acima, é porque você tem uma variável de ambiente PORT definida. Você pode continuar a usar essa porta ou alterar sua variável de ambiente para 3333.\n\n1. Abra uma janela do navegador e use as seguintes URLs para verificar se todas as URLs Olá, Mundo aplicativo estão carregando:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Imagem mostrando Node.js host local\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Imagem mostrando Node.js página olá do host local\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Imagem mostrando Node.js primeira guia do host local\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Imagem mostrando Node.js segunda guia do host local\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Testar seu aplicativo de exemplo no ambiente local\n\nLembre-se de que os aplicativos no Microsoft Teams são aplicativos Web expondo um ou mais recursos. Disponibilizar seu aplicativo na Internet para que a plataforma teams possa carregá-lo. Para tornar seu aplicativo acessível pela Internet, você precisa *hospedar* seu aplicativo.\n\nPara testes locais, você pode executar o aplicativo em seu computador local e criar um túnel para ele com um ponto de extremidade da Web. [O ngrok](https://ngrok.com) é uma ferramenta gratuita que permite que você faça exatamente isso. Com *o ngrok*, você pode obter um endereço Web como `https://d0ac14a5.ngrok.io` (essa URL é apenas um exemplo). Você pode [baixar e instalar o](https://ngrok.com/download) *ngrok* para seu ambiente. Certifique-se de adicioná-lo a um local no `PATH`.\n\n### <a name=\"create-ngrok-tunnel\"></a>Criar túnel ngrok\n\nDepois de instalar o ngrok, você pode criar um túnel para implantar seu aplicativo localmente.\n\n1. Abra uma nova janela de terminal.\n1. Execute o comando a seguir para criar um túnel. O aplicativo de exemplo usa a porta 3333:\n\n    ```bash\n    ngrok http 3333 --host-header=localhost:3333\n    ```\n    O túnel ngrok é criado. Aqui está um exemplo de túnel ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Imagem mostrando o túnel ngrok\":::\n\n    *O Ngrok* escuta solicitações da Internet e as roteará para seu aplicativo em execução na porta 3333.\n\nPara verificar a implantação local do aplicativo:\n\n1. Abra o navegador.\n1. Carregue seu aplicativo usando a seguinte URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Aqui está um exemplo da URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Imagem mostrando node.js aplicativo em execução localmente no túnel ngrok\":::\n\n    Você pode tentar adicionar `hello`, `first`ou à `second` URL do túnel ngrok para exibir páginas de guias diferentes do aplicativo.\n\n    O Ngrok escuta solicitações da Internet e as roteia para seu aplicativo em execução na porta 3333.        \n\n1. Anote o endereço de encaminhamento no console do ngrok. Você precisa dessa URL para implantar seu aplicativo no Teams.\n\n    > [!NOTE]\n    > Se você usou uma porta diferente durante a [compilação](#build-and-run-the-sample) e a execução, use o mesmo número da porta para configurar o *túnel ngrok* .\n    \n    > [!TIP]\n    > É uma boa ideia executar o *ngrok* em uma janela de terminal diferente para mantê-lo em execução sem interferir no aplicativo de nó, que talvez você posteriormente tenha que parar, recriar e executar novamente. A *sessão ngrok* retornará informações úteis de depuração nesta janela. A versão paga do *ngrok* permite nomes persistentes.\n\n    >[!IMPORTANT] \n    > Se você usar a versão gratuita do ngrok, seu aplicativo estará disponível somente durante a sessão atual em seu computador de desenvolvimento. Ele não estará disponível se a máquina estiver desligada ou estiver dormindo. Quando você reinicia o serviço, ele retorna um novo endereço. Em seguida, você deve atualizar cada local que usa o endereço desatualizado. Lembre-se desta etapa ao compartilhar o aplicativo para teste.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Compilar Node.js pacote do aplicativo\n\nVocê pode usar `gulp CLI` para criar o pacote do aplicativo para Node.js.\n\n1. Abra uma janela de terminal.\n1. Verifique se você está no diretório em que o `node.js` arquivo é clonado. Esta é a pasta onde é `gulpfile.js` colocada. \n1. Execute o comando a seguir para compilar o pacote Node.js aplicativo.\n\n    ```$ gulp```\n\n    Aqui está um exemplo da saída do comando:\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    O pacote do helloworldapp.zip é criado. Você pode encontrar o arquivo de pacote no caminho a seguir.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Procure o arquivo do pacote do aplicativo, helloworldapp.zip, se o local não estiver claro na ferramenta que você está usando.\n"
- title: Configurar seu primeiro aplicativo Node.js usando o Portal do Desenvolvedor
  durationInMinutes: 1
  content: "\nVocê pode usar o [Portal do Desenvolvedor](https://dev.teams.microsoft.com/) para carregar o pacote do aplicativo no Teams e configurar os recursos do aplicativo. O Portal do Desenvolvedor é um aplicativo do Teams que simplifica a criação e o registro de um aplicativo. Instale na loja do Teams!\n\nDepois de criar e testar seu aplicativo teams, você pode configurá-lo e visualizá-lo usando o Portal do Desenvolvedor.\n\nA atualização do pacote do aplicativo inclui:\n\n1. [Importando o pacote do aplicativo para o Portal do Desenvolvedor](#import-the-app-package-to-developer-portal)\n1. [Configurando funcionalidades do aplicativo](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importar o pacote do aplicativo para o Portal do Desenvolvedor\n\nPara importar o pacote do aplicativo:\n\n1. Abra o Microsoft Teams.\n\n1. Selecione o **ícone** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: da Loja na barra à esquerda.\n\n1. **Pesquise o Portal do** Desenvolvedor na barra de pesquisa e selecione **Portal do Desenvolvedor***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Selecione o aplicativo Portal do Desenvolvedor\":::\n\n1. Selecione **Abrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Imagem mostrando o aplicativo Abrir Portal do Desenvolvedor\":::\n\n    O Portal do Desenvolvedor é aberto.\n\n1. Selecione a **guia Aplicativos** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Aplicativo portal do desenvolvedor\":::\n\n1. Selecione **Importar aplicativo**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Imagem mostrando o botão Importar aplicativo\":::\n\n1. Abra o pacote do aplicativo `helloworldapp.zip` no seguinte caminho na estrutura de diretório do repositório de exemplo C#:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    O **Olá, Mundo** aplicativo é importado no Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Imagem mostrando o aplicativo importado no Teams\":::\n\n    Depois de importar seu aplicativo para o Portal do Desenvolvedor, você pode exibir seus detalhes no Portal do Desenvolvedor.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Faça um tour pelo seu aplicativo no Portal do Desenvolvedor\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, você pode exibir seus detalhes, incluindo o arquivo de manifesto.\n\n#### <a name=\"view-app-information\"></a>Exibir informações do aplicativo\n\n1. Selecione **Informações Básicas** no painel esquerdo do Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"A imagem mostra o painel esquerdo do Portal do Desenvolvedor\":::\n\n1. Observe as seguintes informações das informações básicas:\n    - ID do aplicativo\n    - Informações do desenvolvedor\n    - URLs do aplicativo\n\n1. Selecione **Identidade Visual** no painel esquerdo para exibir as informações de identidade visual.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Imagem mostrando informações de identidade visual do aplicativo\":::\n\n    Esses detalhes serão importantes se você estiver escrevendo um novo aplicativo para distribuição.\n\n#### <a name=\"view-app-features\"></a>Exibir recursos do aplicativo\n\n- Selecione **Recursos do aplicativo** no painel esquerdo do Portal do Desenvolvedor.\n\n    Os recursos do aplicativo aparecem no painel direito. Você pode exibir cartões para aplicativo pessoal, Bot e Extensão de Mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Imagem mostrando os recursos do aplicativo\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Exibir o manifesto do aplicativo\n\nUse o arquivo de manifesto para configurar recursos, recursos necessários e outros atributos importantes para seu aplicativo.\n\n- Selecione **Publicar** no painel esquerdo para abrir a lista suspensa e, em seguida, selecione **Pacote do aplicativo**.\n\n    O manifesto do aplicativo aparece no painel direito.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Imagem mostrando o arquivo de manifesto do aplicativo no Portal do Desenvolvedor\":::\n\n    O arquivo de manifesto aparece no painel direito.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Configurar os recursos do aplicativo\n\nDepois de importar seu aplicativo para o Portal do Desenvolvedor, a próxima etapa é configurar os recursos do aplicativo. O Portal do Desenvolvedor contém todas as informações do aplicativo em seções diferentes. Isso facilita a configuração dos recursos do aplicativo.\n\nUsando o Portal do Desenvolvedor, você pode:\n1. [Configurar o aplicativo de guia pessoal](#configure-personal-tab-app).\n1. [Configurar o bot](#configure-bot).\n1. [Configurar a extensão de mensagem](#configure-message-extension).\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurar o aplicativo de guia pessoal\n\nPara configurar o aplicativo de guia pessoal:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no cartão **de aplicativo Pessoal** no painel **Recursos do** aplicativo e selecione **Editar**.\n\n    Os detalhes da guia Olá são exibidos.\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone da guia Olá e selecione **Editar** para abrir os detalhes do aplicativo para atualização.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Imagem mostrando o menu da guia Olá\":::\n\n1. Insira os detalhes do aplicativo para a guia Olá em **Adicionar uma guia ao seu aplicativo pessoal**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Imagem mostrando detalhes da guia Olá\":::\n\n    Insira os seguintes detalhes:\n    - **Nome**: guia Olá.\n    - **URL de conteúdo** **e URL do site**: o endereço de encaminhamento na sessão do console do ngrok.\n    - **Contexto**: selecione **a guia Pessoal**.\n\n1. Selecione **Atualizar**.\n\n    Os detalhes da guia Olá aparecem no **painel Aplicativo** Pessoal.\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Imagem mostrando os detalhes da guia Olá a serem salvos\":::\n\n    O **painel Aplicativo Pessoal** agora mostra a nova guia e uma guia Sobre criada automaticamente.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Imagem mostrando os detalhes da guia Olá e Sobre\":::\n\n#### <a name=\"configure-bot\"></a>Configurar bot\n\nÉ fácil adicionar a funcionalidade de bots ao seu aplicativo. O Olá, Mundo de exemplo já tem um bot como parte do exemplo, mas você deve registrá-lo no Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Imagem mostrando o aplicativo de bot importado sem nenhuma ID do aplicativo\":::\n\nO bot que foi importado do exemplo não tem uma ID de aplicativo associada. Você precisará excluí-lo e criar um bot. O Portal do Desenvolvedor cria uma nova ID de aplicativo e a registra no Teams.\n\nAdicionar e configurar um bot envolve:\n\n1. [Adicionando um novo bot](#to-add-a-new-bot).\n1. [Adicionando bot ao aplicativo](#to-add-bot-to-app).\n1. [Configurando o escopo do bot](#to-configure-bot-scope).\n\n##### <a name=\"to-add-a-new-bot\"></a>Para adicionar um novo bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no **cartão bot** no painel recursos **do** aplicativo e selecione **Excluir**.\n\n1. Selecione **Ferramentas** para adicionar funcionalidade.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Imagem mostrando a opção Ferramentas\":::\n\n1. Selecione **Gerenciamento de Bot** no **painel** Ferramentas.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Imagem mostrando o painel de gerenciamento de bots\":::\n\n1. Selecione **+ Novo Bot** no painel **de gerenciamento de** Bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Imagem mostrando a nova opção de bot\":::\n\n1. Insira um nome adequado para o bot e selecione **Adicionar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Imagem mostrando como adicionar bot\":::\n\n    O **painel** Configurar é exibido mostrando detalhes do novo bot no painel esquerdo.\n\n1. Insira a URL de encaminhamento no `ngrok` console e selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Imagem mostrando como adicionar o ponto de extremidade do bot\":::\n\n1. Selecione **Segredos do cliente** e, em seguida, **selecione Adicionar um segredo do cliente ao bot** para gerar uma senha para o bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Imagem mostrando a seção Segredo do cliente\":::\n\n    O Portal do Desenvolvedor gera uma senha para o bot.\n\n    Você pode usar o ícone :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: para copiar a senha. Para este tutorial, você não precisa copiá-lo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Imagem mostrando o segredo do cliente gerado\":::\n\n1. Selecione **OK**.\n\n1. Selecione **< Bots para** retornar ao **painel de gerenciamento de** Bot.\n\n    O **painel de gerenciamento** de bot mostra o novo Bot adicionado com uma ID do aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Imagem mostrando o novo bot com a ID do aplicativo\":::\n\n1. Salve a ID do Bot juntamente com a senha da **seção Segredo do** cliente.\n\n##### <a name=\"to-add-bot-to-app\"></a>Para adicionar bot ao aplicativo\n\n1. Abra o **painel Recursos do** aplicativo e selecione o **cartão do Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Imagem mostrando o cartão do bot\":::\n\n    O **painel Bot** é exibido.\n\n1. Selecione seu aplicativo de bot **em Selecionar um bot existente** e selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Imagem mostrando como selecionar um aplicativo de bot existente\":::\n\n    O novo bot é adicionado ao seu aplicativo com sua própria ID de aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Imagem mostrando o novo bot adicionado ao aplicativo\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Para configurar o escopo do bot\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no novo **cartão do Bot** e selecione **Editar**.\n\n1. Mova-se **pelo painel Bot** para exibir a **seção Comandos** e selecione **+ Adicionar um Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Imagem mostrando a seção de comandos\":::\n\n1. Insira um nome e uma descrição adequados para o **Comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Imagem mostrando como adicionar detalhes de comandos\":::\n\n1. Selecione todos os três escopos para o comando e selecione **Adicionar**.\n    - **Pessoal**\n    - **Equipe**\n    - **Chat em grupo**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Imagem mostrando como salvar detalhes dos comandos\":::\n\n    O novo comando é adicionado à seção **Comandos** do **painel Bot** .\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Imagem mostrando os detalhes dos comandos a serem salvos\":::\n\n    Os detalhes do comando são salvos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Imagem mostrando os detalhes dos comandos salvos\":::\n\n1. Abra **o painel Recursos** do aplicativo e selecione **Cartão de aplicativo** pessoal para exibir os detalhes da guia do aplicativo.\n\n    Você verá que uma guia para o novo chatbot é adicionada ao seu aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Imagem mostrando a guia chat configurada\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurar a extensão de mensagem\n\nAs extensões de mensagem permitem que os usuários solicitem informações do seu serviço e postem essas informações. As informações são postadas na forma de cartões na conversa do canal. As extensões de mensagem aparecem na parte inferior da caixa de redação.\n\nPara adicionar uma nova extensão de mensagem:\n\n1. Selecione o :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: ícone no cartão extensão **de** mensagem no painel **recursos do** aplicativo e selecione **Excluir**.\n\n1. Selecione **Extensão de** Mensagem no **painel Recursos do** aplicativo.\n\n1. Selecione o nome do aplicativo de bot na lista **suspensa** Selecionar um bot existente no **painel Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Imagem mostrando o painel Extensão de mensagem para selecionar o bot\":::\n\n1. Selecione **Salvar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Imagem mostrando o painel Extensão de mensagem\":::\n\n    A extensão de mensagem é salva e a **seção Comandos** aparece no **painel Extensão de** mensagem.\n\n1. Selecione **+ Adicionar um comando para** definir o escopo do que seu aplicativo de extensão de mensagem pode fazer.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Imagem mostrando a seção Comando\":::\n\n    A **caixa de diálogo Adicionar um** comando.\n\n1. Verifique se **a Pesquisa** está selecionada como o tipo de comando que você deseja adicionar na caixa de diálogo Adicionar **um comando** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar um Comando\":::\n\n1. Insira informações adequadas para os seguintes detalhes:\n    - ID do comando\n    - Título do comando\n    - Descrição do comando\n\n1. Percorrer a caixa de diálogo para exibir os detalhes restantes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Imagem mostrando os detalhes restantes na caixa de diálogo Adicionar um Comando\":::\n\n1. Verifique **se Make default** está selecionado.\n1. Selecione os seguintes contextos para o comando de extensão de mensagem:\n    - Caixa de comando\n    - Caixa de redação\n    - Mensagem\n1. Insira informações adequadas para os seguintes detalhes:\n    - Nome do parâmetro\n    - Título do parâmetro\n    - Descrição do parâmetro\n\n1. Selecione **Texto** como o tipo de entrada.\n1. Selecione **Salvar**.\n1. O comando de extensão de mensagem é salvo e aparece na lista de comandos no **painel Extensão de** mensagem.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Imagem mostrando o comando adicionado\":::\n\n1. Selecione **Salvar**.\n1. Abra **o painel recursos** do aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Imagem mostrando os recursos configurados para Olá, Mundo aplicativo\":::\n\n    Você verá todos os três recursos – aplicativo de guia pessoal, bot e extensão de mensagem – configurados para o Olá, Mundo aplicativo.\n"
- title: Visualizar e testar seu Node.js aplicativo
  durationInMinutes: 1
  content: "\nDepois de importar seu aplicativo e configurar os recursos no Portal do Desenvolvedor, você pode visualizar e testar o aplicativo de exemplo.\n\n## <a name=\"preview-your-app-in-teams\"></a>Visualizar seu aplicativo no Teams\n\nDepois de configurar os recursos do seu aplicativo, você pode visualizar e testar seu aplicativo no Teams no ambiente local.\n\nPara visualizar seu aplicativo:\n\n1. Selecione **Visualizar no Teams na** barra de ferramentas do Portal do Desenvolvedor.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Imagem mostrando o botão Visualizar\":::\n\n    O Portal do Desenvolvedor informa que seu aplicativo foi sideload com êxito.\n\n1. Selecione **Gerenciar seus aplicativos**.\n   Seu aplicativo está listado nos aplicativos de sideload. \n1. Localize seu aplicativo usando a caixa de pesquisa, selecione os três pontos em sua linha.\n1. Selecione a **opção Exibir** .\n    A **página Adicionar** é exibida para seu aplicativo.\n1. Selecione **Adicionar** para carregar o aplicativo no Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Imagem mostrando a caixa de diálogo Adicionar aplicativo\":::\n\n    Seu aplicativo agora está disponível no Teams. Você pode exibir todas as guias e testar os recursos:\n\n    - Guia Olá:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Imagem mostrando a guia Olá no ambiente local\":::\n\n    - Chatbot:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Imagem mostrando o bot do aplicativo no ambiente local\":::\n\n        Você pode enviar uma mensagem usando o chat.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Imagem mostrando o chat no ambiente local\":::\n\n    - Extensão de mensagem:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Imagem mostrando a extensão de mensagem no ambiente local\":::\n\n        Você pode tentar uma pesquisa usando a extensão de mensagem.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Imagem mostrando a pesquisa usando a extensão de mensagem no ambiente local\":::\n\n    - Guia Sobre:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Imagem mostrando a guia Sobre no ambiente local\":::"
