### YamlMime:Tutorial
title: Crie seu primeiro aplicativo de bot usando JavaScript
metadata:
  title: Olá, Mundo com JavaScript
  description: Com este módulo de aprendizado, você aprenderá a criar Olá, Mundo aplicativo com JavaScript configurando um novo projeto com o Teams Toolkit, compilar e implantar um aplicativo bot.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Visão geral de volta para Introdução
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 16e4ca53b8c4b111da4c59c07e89d2d399784cb8
  ms.sourcegitcommit: 0e4fcbc5efff4bfa1dbfba1e5467bbfaa6638705
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 10/28/2022
  ms.locfileid: "68773531"
items:
- durationInMinutes: 1
  content: "Inicie o desenvolvimento de aplicativos do Microsoft Teams com seu primeiro aplicativo do Teams. Você criará um aplicativo bot com o Teams. \n\nSeu aplicativo terá uma funcionalidade, que vem com sua própria interface do usuário e UX:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagrama mostrando que este aplicativo tem três recursos.\":::\n\n> [!NOTE]\n> Neste tutorial, você criará um aplicativo bot.\n\nNeste tutorial, você aprenderá:\n\n- Como configurar um novo projeto com o Teams Toolkit.\n- Como criar um aplicativo bot.\n- Como implantar seu aplicativo.\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará para criar e implantar seus aplicativos.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de ferramentas do Teams](#install-the-teams-toolkit) | Uma extensão do Microsoft Visual Studio Code que cria um scaffolding de projeto para seu aplicativo. Use a versão 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | O Microsoft Teams para colaborar com todos com quem você trabalha por meio de aplicativos para chats, reuniões, chamadas - tudo em um só lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Ambiente de runtime do JavaScript de back-end. Use a versão mais recente do V16 LTS.|\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Ambientes de compilação JavaScript, TypeScript ou Estrutura do SharePoint (SPFx). Use a versão 1.55 ou posterior. |\n| **Opcional** | &nbsp; | &nbsp; |\n| &nbsp; | [Ferramentas do Azure para Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) e [CLI do Azure](/cli/azure/install-azure-cli) | Ferramentas do Azure para acessar dados armazenados ou implantar um back-end baseado em nuvem para seu aplicativo teams no Azure. |\n| &nbsp; | [React Ferramentas de Desenvolvedor para Ferramentas de Desenvolvedor do Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React para Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Uma extensão DevTools do navegador para a biblioteca JavaScript React de código aberto. |\n| &nbsp; | [Microsoft Graph Explorer](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, uma ferramenta baseada em navegador que permite executar uma consulta de dados do Microsoft Graph. |\n| &nbsp; | [Portal do Desenvolvedor do Teams](https://dev.teams.microsoft.com/) | Portal baseado na Web para configurar, gerenciar e distribuir seu aplicativo do Teams, inclusive para sua organização ou para a loja do Teams. |\n\n\n> [!TIP]\n> Se você trabalha com dados do Microsoft Graph, deve aprender e marcar o Microsoft Graph Explorer. Essa ferramenta baseada no navegador permite consultar o Microsoft Graph fora de um aplicativo.\n\n\n## <a name=\"prepare-development-environment\"></a>Preparar o ambiente de desenvolvimento\n\nDepois de instalar as ferramentas necessárias, configure o ambiente de desenvolvimento.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalar o Kit de Ferramentas do Teams\n\nO Kit de Ferramentas do Teams ajuda a simplificar o processo de desenvolvimento com ferramentas para provisionar e implantar recursos de nuvem para seu aplicativo, publicar na loja do Teams e muito mais. \n \nVocê pode usar o kit de ferramentas com Visual Studio Code ou CLI (interface de linha de comando), chamada `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Código do Visual Studio](#tab/vscode)\n\n1. Abra Visual Studio Code e selecione a **exibição Extensões** (**Ctrl+Shift+X** / **⌘⇧-X** ou **Exibir extensões >**).\n1. Na caixa de pesquisa, **insira o Kit de Ferramentas do Teams**.\n1. Selecione **Instalar** ao lado do Kit de Ferramentas do Teams.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"A ilustração mostra a instalação da extensão do Teams Toolkit.\":::\n\n O ícone kit de ferramentas do Teams é exibido na barra lateral Visual Studio Code após a instalação.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"A ilustração mostra o ícone kit de ferramentas do Teams na barra lateral Visual Studio Code.\":::\n\nVocê também pode encontrar o Kit de Ferramentas do Teams no [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nPara instalar a CLI do TeamsFx, use o gerenciador de `npm` pacotes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nDependendo da configuração, talvez seja necessário usar `sudo` para instalar a CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEssa condição é mais comum em sistemas Linux e macOS.\n\nCertifique-se de adicionar o cache global npm ao SEU PATH. Normalmente, essa etapa é feita como parte do instalador de Node.js.  \n\nVocê pode usar a CLI com o `teamsfx` comando. Verifique se o comando está funcionando executando `teamsfx -h`.\n\n> [!CAUTION]\n> Antes de executar o TeamsFx em terminais do PowerShell, você deve habilitar a política de execução \"assinada remotamente\" para o PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de desenvolvimento do Teams\n\nUm **locatário** é como um espaço ou um contêiner para sua organização no Teams, onde você conversa, compartilha arquivos e executa reuniões. Esse espaço também é onde seu sideload e testa seu aplicativo. Vamos verificar se você está pronto para desenvolver com o locatário.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Esse processo é conhecido como sideload. Entre em sua conta do Microsoft 365 para exibir essa opção.\n\n > [!NOTE]\n > O sideload é necessário para visualizar e testar aplicativos no ambiente local do Teams. Se ele não estiver habilitado, você não poderá visualizar e testar seu aplicativo no Teams localmente.\n\nVocê já tem um locatário e tem acesso ao administrador? Vamos verificar se você realmente faz!\n\nVerifique se você pode carregar aplicativos de sideload no Teams:\n\n 1. No cliente do Teams, selecione o ícone **Store** .\n 1. Selecione **Gerenciar seus aplicativos**.\n 1. Selecione **Publicar um aplicativo**.\n 1. Procure a opção para **Carregar um aplicativo personalizado**. Se você vir a opção, os aplicativos de sideload estarão habilitados.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new1.png\" alt-text=\"bot home\":::\n\n     > [!NOTE]\n     > Se você não tiver a opção de carregar um aplicativo personalizado, converse com o administrador do Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário de desenvolvedor gratuito do Teams (opcional)\n\nSe você não tiver uma conta de desenvolvedor do Teams, poderá obtê-la gratuitamente. Ingresse no programa de desenvolvedor do Microsoft 365!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Na tela de boas-vindas, **selecione Configurar assinatura do E5**.\n1. Configurar a conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Entre no Teams usando a conta de administrador que você acabou de configurar. Verifique se você tem a opção **Carregar um aplicativo personalizado** no Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obter uma conta gratuita do Azure\n\nSe você deseja hospedar seu aplicativo ou acessar recursos no Azure, deverá ter uma assinatura do Azure. [Crie uma conta gratuita](https://azure.microsoft.com/free/) antes de começar.\n\nAgora você tem todas as ferramentas e configurou sua conta. Em seguida, vamos configurar seu ambiente de desenvolvimento e começar a criar! Selecione o aplicativo que você deseja fazer primeiro.\n"
- title: Criar workspace de projeto para seu aplicativo bot
  durationInMinutes: 1
  content: "\nVamos criar seu primeiro aplicativo bot.\n\nA funcionalidade de bot de um aplicativo do Teams cria um chatbot ou um bot de conversação. Você o usa para executar tarefas simples e automatizadas, como fornecer serviço ao cliente. Um bot conversa com um serviço Web e ajuda você a usar suas ofertas. Você pode obter previsão do tempo, fazer reservas ou qualquer outro serviço oferecido usando um bot de conversa.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"Diagrama mostrando que este aplicativo tem três recursos. O bot está realçado.\":::\n\nComo você já se preparou para criar esses aplicativos, você pode configurar um novo projeto do Teams para criar o aplicativo bot.\n\nNeste tutorial, você aprenderá:\n\n1. [Como configurar um novo projeto de bot com o Teams Toolkit.](#create-your-bot-project-workspace)\n1. [Sobre a estrutura de diretório do seu projeto de aplicativo.](#take-a-tour-of-the-bot-app-source-code)\n\n> [!IMPORTANT]\n> Atualmente, os bots estão disponíveis na Nuvem da Comunidade Governamental (GCC) e não estão disponíveis na GCC-High e departamento de defesa (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Criar seu workspace de projeto de bot\n\nSe os pré-requisitos estiverem em vigor, vamos começar!\n\n> [!NOTE]\n> A interface do usuário Visual Studio Code mostrada é do Mac. Pode ser diferente dependendo do sistema operacional, da versão do Teams Toolkit e do ambiente.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-project.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\":::\n\n1. Selecione **Criar um novo aplicativo do Teams** para criar um aplicativo usando o Kit de Ferramentas do Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app1.png\" alt-text=\"Início do assistente para Criar Novo Projeto\":::\n\n1. Verifique se o **Bot** está selecionado como o recurso que você deseja criar em seu aplicativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-bot.png\" alt-text=\"Captura de tela mostrando como adicionar capacidades ao seu novo aplicativo.\":::\n\n1. Selecione **JavaScript** como linguagem de programação.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language-tab.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\":::\n\n1. Selecione **Pasta padrão** para armazenar sua pasta raiz do projeto no local padrão.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-default-location.png\" alt-text=\"Selecione local padrão.\":::\n\n   Você também pode alterar o local padrão pelas seguintes etapas:\n\n   1. Selecione **Procurar**.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-browse.png\" alt-text=\"Selecione procurar local.\":::\n\n   1. Selecione o local para o workspace do projeto.\n   1. Selecione a **Pasta Selecionar**.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\":::\n\n1. Insira um nome adequado para seu aplicativo, como `hellobot`. Verifique se o nome do aplicativo é alfanumérico. Selecione **Enter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/hello-bot.png\" alt-text=\"Captura de tela mostrando onde inserir o nome do aplicativo.\":::\n\n    Uma caixa de diálogo é exibida, em que você seria obrigado a escolher sim ou não para confiar nos autores dos arquivos nesta pasta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/vsc-trust-authors.png\" alt-text=\"Esta captura de tela é um exemplo da caixa de diálogo para confiar ou não nos autores dos arquivos nesta pasta \":::\n\n1. Por padrão, o projeto é aberto em uma nova janela dentro de 10 segundos. Se você quiser abrir na janela atual, selecione **Abrir na janela atual**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/new-window-notification.png\" alt-text=\"Pop-up de nova janela\":::\n\n    Seu aplicativo teams com um recurso de bot é criado em alguns segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-created-bot.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\":::\n\n    Depois que seu aplicativo é criado, o Kit de Ferramentas do Teams exibe a seguinte mensagem:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"Mensagem de localização\":::\n    \n    Selecione **Depuração local** para visualizar seu projeto.\n    \n<details>\n<summary>Uma recapitulação rápida da criação de um aplicativo do Teams.</summary>\nAssista a esta breve recapitulação para criar um aplicativo do Teams.\n\n![Criar um aplicativo do Teams](~/assets/videos/javascript-bot-app1.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nUse a CLI `teamsfx` para criar o seu primeiro projeto.  Inicie pela pasta onde deseja criar a pasta do projeto.\n\n``` bash\nteamsfx new\n```\n\nVocê pode usar a CLI para criar um novo aplicativo do Teams. A CLI leva você a uma série de perguntas. Cada pergunta inclui uma instrução sobre como respondê-la.\n\nPor exemplo, use chaves de seta para selecionar uma opção. Depois de fazer a escolha, selecione **Inserir** para confirmá-la.\n\n1. Selecione **Criar um novo aplicativo do Teams**.\n1. Selecione **Bot** e desmarque **Tab**.\n1. Selecione **JavaScript** como linguagem de programação.\n1. Selecione **Inserir** para selecionar a pasta de workspace padrão.\n1. Insira um nome adequado para seu aplicativo, como `HelloBot`. O nome do aplicativo deve consistir apenas de caracteres alfanuméricos.\n\nDepois de responder a todas as perguntas, seu projeto será criado.\n\n---\n\n## <a name=\"take-a-tour-of-the-bot-app-source-code\"></a>Faça um tour pelo código-fonte do aplicativo bot\n\nDepois que o scaffolding for concluído, exiba os diretórios e arquivos do projeto na área do Explorer de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/folder-structure-bot-app.png\" alt-text=\"Estrutura de pastas.\":::\n\n| Nome da pasta | Conteúdos |\n| --- | --- |\n| `.fx/configs` | Arquivos de configuração que o usuário pode personalizar para o aplicativo teams. |\n| `.fx/configs/config.<envName>.json` | Arquivo de configuração para cada ambiente. |\n| `.fx/configs/azure.parameters.<envName>.json` | Arquivo de parâmetros para provisionamento do Azure BICEP para cada ambiente. |\n| `.fx/configs/projectSettings.json` | Configurações de projeto globais que se aplicam a todos os ambientes. |\n| `.fx/configs/ngrok.yml` | Configurações do Ngrok|\n| `bot` |  Código para a funcionalidade bot necessária no runtime. |\n| `bot/teamsBot.js` | Ponto de entrada principal para o aplicativo bot. |\n| `templates/appPackage` | Arquivos de modelo de manifesto de aplicativo e os ícones do aplicativo, color.png e outline.png. |\n| `templates/appPackage/manifest.template.json` | Manifesto do aplicativo para executar o aplicativo em ambiente local e remoto.  |\n| `templates/azure` | Arquivos de modelo BICEP |\n\n> [!Tip]\n> Familiarize-se com os bots fora do Teams antes de integrar o seu primeiro bot dentro do Teams.\n"
- title: Criar e executar seu primeiro aplicativo bot
  durationInMinutes: 1
  content: "\nDepois de configurar o workspace do projeto com o Teams Toolkit, crie seu projeto de bot. Verifique se você entrou em sua conta do Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Entre em sua conta do Microsoft 365\n\nUse essa conta para entrar no Teams. Se você estiver usando um locatário do programa de desenvolvedor do Microsoft 365, a conta de administrador que você configurou durante o registro é sua conta do Microsoft 365.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Selecione o ícone kit de  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: ferramentas do Teams na barra lateral.\n1. Selecione **Entrar no M365**.\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta.\n\n1. Entre em sua conta do Microsoft 365 usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n1. Retorne ao Teams Toolkit no Visual Studio Code.\n\n    Use essa conta para entrar no Teams. Se você estiver usando um locatário do programa de desenvolvedor do Microsoft 365, a conta de administrador que você configurou durante o registro é sua conta do Microsoft 365.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de tela mostrando onde entrar no Microsoft 365 e no Azure.\":::\n\n    Agora você está pronto para criar o aplicativo e executá-lo localmente!\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando você for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando você for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Agora que o ambiente de desenvolvimento está configurado, você pode criar, compilar e implantar seu primeiro aplicativo do Teams.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Criar e executar seu primeiro aplicativo bot localmente\n\nPara criar e executar seu aplicativo no ambiente local:\n\n1. Selecione **F5** no Visual Studio Code para executar seu aplicativo no modo de depuração.\n\n    > [!NOTE]\n    > Se o Teams Toolkit não conseguir verificar um pré-requisito específico, ele solicitará que você verifique.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Saiba o que acontece quando você executa seu aplicativo localmente no depurador.</summary>\n\n    Caso esteja se perguntando, ao pressionar a tecla **F5** , o Kit de Ferramentas do Teams:\n\n    1. Verifica todos os seguintes pré-requisitos:\n      - Você está conectado com uma conta do Microsoft 365.\n      - O sideload está habilitado para sua conta do Microsoft 365.\n      - A versão de Node.js com suporte está instalada.\n      - O Ngrok está instalado.\n      - A porta necessária pelo aplicativo bot está disponível.\n      \n    2. Instale pacotes npm.\n    3. Inicia o Ngrok para criar um túnel HTTP.\n    4. Registra o aplicativo no Azure AD e configura o aplicativo.\n    5. Registra o aplicativo bot no Bot Framework e configura o aplicativo bot.\n    6. Registra o aplicativo no Portal do Desenvolvedor do Teams e configura o aplicativo.\n    7. Inicia o aplicativo bot.\n    8. Inicia o Teams em um navegador da Web e carrega o aplicativo bot.\n\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Captura de tela mostrando quando a tecla F5 é pressionada para depuração.\":::\n\n    > [!NOTE]\n    > Quando você executa o aplicativo pela primeira vez, todas as dependências são baixadas e o aplicativo é criado. Uma janela do navegador é aberta automaticamente quando a compilação é concluída. Esse processo pode levar de três a cinco minutos para ser concluído.\n\n    O Teams executa seu aplicativo em um navegador da Web.\n\n1. Entre com sua conta do Microsoft 365, se solicitado.\n\n1. Selecione **Adicionar** quando solicitado a sideload do aplicativo no Teams em seu computador local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/add-bot-app-local-debug.png\" alt-text=\"Captura de tela mostrando que o bot está sendo adicionado no cliente do Teams.\":::\n\n    Agora o bot está sendo executado com êxito no Teams! Depois que o aplicativo é carregado, uma sessão de chat com o bot é aberta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-added-bot-local-debug.png\" alt-text=\"Captura de tela mostrando que o bot está em execução no cliente do Teams.\":::\n\n    Você pode digitar `welcome` para mostrar um cartão de introdução e digitar `learn` para acessar a documentação de comando de cartão adaptável e bot.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-app-learn-local-debug.png\" alt-text=\"Captura de tela mostrando o cartão learn no bot no cliente do Teams.\":::       \n\n    Você pode fazer atividades normais de depuração, como definir pontos de interrupção, como em qualquer outro aplicativo Web. Abra o arquivo `bot/teamsBot.js` e localize o método `onMessage()`. Defina um ponto de interrupção em qualquer caso. Em seguida, digite algum texto.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Saiba como solucionar problemas se o aplicativo não for executado localmente.</summary>\n\n  Para executar seu aplicativo com êxito no Teams, verifique se você habilitou o sideload em sua conta do Teams. Você pode saber mais sobre sideload na seção Pré-requisitos.\n\n  > [!IMPORTANT]\n  > Atualmente, os aplicativos de sideload estão disponíveis em GCC (Government Community Cloud), GCC-High e DOD.\n\n  > [!TIP]\n  > Verifique se há problemas antes de carregar o aplicativo, usando a [ferramenta de validação do aplicativo](https://dev.teams.microsoft.com/appvalidation.html). Essa ferramenta está incluída no kit de ferramentas. Corrija os erros para sideload do aplicativo.\n  </details> \n"
- title: Implantar seu primeiro aplicativo do Teams
  durationInMinutes: 1
  content: "\nVocê aprendeu a criar, compilar e executar o aplicativo teams com a capacidade do Bot. A etapa final é implantar seu aplicativo no Azure.\n\nVamos implantar o primeiro aplicativo com o recurso Bot no Azure usando o Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Entre em sua conta do Azure\n\nUse essa conta para acessar o Microsoft portal do Azure e provisionar novos recursos de nuvem para dar suporte ao seu aplicativo.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abra o Visual Studio Code.\n1. Abra a pasta de projeto na qual você criou o aplicativo de guias.\n1. Selecione o ícone kit de  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: ferramentas do Teams na barra lateral.\n1. Selecione **Entrar no Azure**.\n\n    > [!TIP]\n    > Se você tiver a extensão da Conta do Azure instalada e estiver usando a mesma conta, poderá ignorar esta etapa. Use a mesma conta que você está usando em outras extensões.\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta.\n1. Entre em sua conta do Azure usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n\n    A seção **ACCOUNTS** da barra lateral mostra as duas contas separadamente. Ele também lista o número de assinaturas utilizáveis do Azure disponíveis para você. Verifique se você tem pelo menos uma assinatura utilizável do Azure disponível. Caso contrário, saia e use uma conta diferente.\n\n    Agora você está pronto para implantar seu aplicativo no Azure!\n\n    Parabéns, você criou um aplicativo do Teams! \n    Agora vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Kit de Ferramentas do Teams.\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cline)\n\n1. Entre no Microsoft 365 com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando você for solicitado.\n\n2. Entre no Azure com a CLI do TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Seu navegador da Web padrão é aberto para permitir que você entre na conta. Entre em sua conta do Azure usando suas credenciais. Feche o navegador quando você for solicitado.\n\n    Os logons da conta são compartilhados entre Visual Studio Code e a CLI do TeamsFx.\n\n    Parabéns, você criou um aplicativo do Teams! \n    Agora vamos continuar e aprender a implantar um dos aplicativos no Azure usando o Kit de Ferramentas do Teams.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Saiba o que acontece quando você implanta o seu aplicativo no Azure</summary>\n\n  Antes da implantação, o aplicativo era executado localmente:\n\n  * O back-end é executado usando o **Azure Functions Core Tools**.\n  * O ponto de extremidade HTTP do aplicativo, onde o Microsoft Teams carrega o aplicativo, é executado localmente.\n\n  A implantação é um processo de duas etapas. Você provisiona os recursos em uma assinatura ativa do Azure e, em seguida, implanta ou carrega o back-end e o código de front-end do aplicativo no Azure.\n\n  * O back-end, se configurado, usa vários serviços do Azure, incluindo Serviço de Aplicativo do Azure e Armazenamento do Azure.\n  * O front-end do aplicativo será implantado em uma conta de Armazenamento do Microsoft Azure configurada para hospedagem Web estática.\n\n  </details>\n"
- title: Parabéns!
  durationInMinutes: 1
  content: "\nVocê fez isso!\n\nVocê criou um aplicativo bot.\n\nAgora que você aprendeu a criar um aplicativo básico, você pode passar a criar aplicativos mais complexos. Para começar, tente adicionar recursos aos seus aplicativos existentes.\n\nPara adicionar recursos ao aplicativo existente:\n\n1. Selecione **Adicionar recursos** na seção **Desenvolvimento** da barra lateral do Teams Toolkit.\n\n1. Selecione o recurso que você deseja adicionar ao seu aplicativo.\n\nIsso é tudo. O Teams Toolkit adiciona o scaffolding para o novo recurso à estrutura de diretório do seu aplicativo. Siga os procedimentos para criar e implantar o aplicativo, e seu aplicativo terá vários recursos. \n\nVocê concluiu o tutorial para criar bot com JavaScript."
