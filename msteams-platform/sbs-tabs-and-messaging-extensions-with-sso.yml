### YamlMime:Tutorial
title: AAD SSO para guias e extensão de mensagens
metadata:
  title: AAD SSO para guias e extensão de mensagens
  description: Neste tutorial, você aprenderá a configurar AAD SSO para guias.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Leia mais sobre autenticação SSO para guias.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1b8f123da8f82970ad0fe7fdc7d9a4486afde553
  ms.sourcegitcommit: abe5ccd61ba3e8eddc1bec01752fd949a7ba0cc2
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 01/31/2022
  ms.locfileid: "62281942"
items:
- durationInMinutes: 1
  content: "O Azure Active Directory o SSO (AAD SSO) ajuda a autenticar usuários Teams. \n\n**Principais aspectos do guia passo a passo do AAD SSO para guias e extensões de mensagens**\n\n * Após a primeira login, AAD SSO permite que o usuário entre automaticamente.\n * Permite que o usuário entre em outros dispositivos sem inserir credenciais de entrada.\n * Obtém token para o usuário conectado.   \n\nEste guia passo a passo ajuda você a criar guias e extensões de mensagens habilitando AAD autenticação SSO. Você verá a seguinte saída:\n\n  ![Imagem de congratulation](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "Certifique-se de instalar as seguintes ferramentas e configurar seu ambiente de desenvolvimento:  \n\n* Microsoft Teams com uma conta (não uma conta de convidado)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) versão 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok versão](https://ngrok.com/download) mais recente (somente para teste de devbox) ou qualquer solução de túnel equivalente\n* [Microsoft 365 conta de desenvolvedor](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) ou acesso Teams conta com as permissões apropriadas para instalar um aplicativo\n"
- title: Configurar ambiente local
  durationInMinutes: 1
  content: "Clone `Microsoft-Teams-Samples` o repositório para seu GitHub local:  \n\n 1. Abra [Microsoft Teams Exemplos](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Selecione **Código**.\n 1. No menu suspenso, selecione **Abrir com GitHub Desktop**.\n\n    ![Repositório clone](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. Selecione **Clonar**. \n"
- title: Criar e registrar seu bot no portal do Azure AD
  durationInMinutes: 5
  content: "As etapas a seguir orientam você para:\n\n* Crie o recurso bot do Azure para registrar bot com o Serviço bot do Azure.\n* Crie o segredo do cliente que habilita a autenticação SSO do bot.\n* Adicione Microsoft Teams canal para implantar o bot em um canal Teams.\n* Use ngrok para criar um túnel para os pontos de extremidade do servidor Web.\n* Adicione o ponto de extremidade de mensagens ao túnel de ngrok que você criou.\n\n**Para criar o recurso bot do Azure**\n\n1. Acesse o [Portal do Azure](https://portal.azure.com/).\n1. Selecione **Criar um recurso**.\n1. Na caixa de pesquisa, digite **Bot do Azure**.\n1. Selecione **Enter**.\n1. Selecione **Bot do Azure**.\n\n     ![Criar cartão de bot do Azure](~/assets/images/bots/createazurebot.png)\n\n1. Selecionar **Criar**.\n1. Insira o nome de alça de bot necessário no **alça bot**.\n1. Na lista **suspenso** Assinatura, selecione **msteams.nonprod.pub.msft.aplt**.\n1. Na lista **listada de grupos** de recursos, selecione seu grupo de recursos existente. Você também pode criar um novo grupo de recursos (selecione **Criar novo** > digite nome do recurso > selecione **OK**).\n\n    ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. Na seção **ID do Microsoft App** , por padrão **, Criar nova ID do Microsoft App** está selecionada. \n\n   Selecione **Usar o registro de aplicativo existente e** insira **A ID do aplicativo** existente e a **senha do** aplicativo existente para um aplicativo existente. Selecione **Criar nova ID do Microsoft App** para um novo aplicativo.\n\n   > [!NOTE]\n   > Não é possível criar mais de um bot com a mesma **ID do Microsoft App**.\n\n1. Selecione **Examinar + criar**.\n\n   ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Se a validação for aprovada, selecione **Criar**.\n\n    Leva alguns instantes para que o serviço de bot seja provisionado.\n\n1. Selecione **Acessar recursos**. \n\n    ![Implantar aplicativo](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Seu bot do Azure foi criado.\n\n    ![Implantar aplicativo](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**Para criar o segredo do cliente**\n\n  Execute as etapas a seguir se você tiver criado uma nova **ID do Microsoft App**:\n\n1. No painel esquerdo, selecione **Configuração**. \n\n   > [!TIP]\n   > Salve a **ID do Microsoft App** ou **a ID do Cliente** para referência futura.\n\n1. Selecione **MultiTenant** em **Tipo de Bot**.\n\n    ![Tipo de bot](~/assets/images/Tab-ME-SSO/bot-type.png)\n\n1. Ao lado da **ID do Microsoft App**, selecione **Gerenciar**.\n\n    ![ID do Aplicativo Microsoft](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. Na seção **Segredos do** cliente, selecione **Novo segredo do cliente**. \n\n    ![Novo segredo do cliente](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   A **janela Adicionar um segredo do** cliente é exibida.  \n\n1. Insira **Descrição**.\n\n1. Selecione **Adicionar**.\n\n    ![Adicionar segredo do cliente ao aplicativo](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. Na coluna **Valor** , selecione **Copiar para área de transferência**.\n\n     ![Valor do segredo do cliente](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Salve o **valor de segredos do** cliente ou a senha do aplicativo para referência futura.\n\n**Para adicionar o Microsoft Teams canal**\n\n1. Selecione **Início**.\n\n    ![Página inicial](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Selecione seu bot de **recursos recentes**.\n\n1. Selecione **Canais** no painel esquerdo. \n\n1. Selecione **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Selecione a caixa de seleção para aceitar os **Termos de Serviço**.\n\n1. Selecione **Concordar**.\n\n      ![Termos de serviço](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Selecione **Salvar**.\n\n      ![Selecione Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Para criar um túnel para o servidor Web local**\n\nUse o ngrok para criar um túnel para os pontos de extremidade HTTPS disponíveis publicamente do servidor Web em execução local. Execute o seguinte comando em ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Para adicionar ponto de extremidade de mensagens**\n\n1. De ngrok, copie a URL HTTPS (https para io).\n\n    ![URL HTTPS do ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > A URL HTTPS em seu ngrok é seu nome de domínio totalmente qualificado.\n    > O `WebAppDomain` é um nome de domínio totalmente qualificado que não inclui `https://` nele.\n\n1. Em **Configurações** para o bot do Azure que você criou, selecione **Configuração**.\n\n1. No **ponto de extremidade mensagens**, use a URL HTTPS disponível no ngrok e, no final da URL, adicione **/api/messages**.\n\n    ![Ponto de extremidade de mensagens](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Selecione **Aplicar**.\n\n    Você definiu com êxito um bot no Serviço de Bot do Azure.\n"
- title: Configurar o SSO para sua guia
  durationInMinutes: 1
  content: "**Para registrar seu aplicativo por meio do portal do Microsoft Azure AD**  \n\n1. Acesse o [Portal do Azure](https://portal.azure.com/).\n\n1. Selecione **Azure Active Directory**.\n\n1. Forme o painel esquerdo, selecione **Registros de Aplicativos**.\n\n1. Selecione seu bot.\n\n1. Selecione **Expor uma API**.\n\n1. Selecione **Definir**.\n\n   ![Expor uma API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. Definir o **URI de ID do Aplicativo** na forma de `api://botid-{AppID}`.\n\n   ![Definir link](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Selecione **Adicionar um escopo**. \n\n1. No painel exibido, digite como `access_as_user` o **nome do escopo**.\n\n1. Definir **Who pode consentir?** para `Admins and users`.\n\n1. Para configurar os prompts de consentimento do administrador e do usuário com valores apropriados para `access_as_user` escopo, forneça as seguintes informações nos campos:</br>\n\n   * Insira `Teams can access the user’s profile` como **Nome de exibição de consentimento do administrador**.\n\n   * Insira `Allows Teams to call the app’s web APIs as the current user` como **Descrição de consentimento do administrador**.\n\n   * Insira `Teams can access the user profile and make requests on the user’s behalf` como **Nome de exibição de consentimento do usuário**.\n\n   * Insira `Enable Teams to call this app’s APIs with the same rights as the user` como **Descrição de consentimento do usuário**.\n\n1. Verifique se o **Estado** está definido como **Habilitado**.\n\n1. Selecione **Adicionar escopo** para salvar.\n\n   ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > O **nome do escopo** deve corresponder ao URI `/access_as_user` **de ID do** aplicativo com anexado no final.</br>\n       `api://botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. Na seção **Aplicativos cliente autorizados,** identifique os aplicativos que você deseja autorizar para o aplicativo Web do seu aplicativo. \n\n1. Selecione **Adicionar um aplicativo cliente**. \n\n1. Insira cada uma das seguintes IDs de cliente e selecione o escopo autorizado:</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams aplicativo móvel ou desktop)\n\n       ![Adicionar aplicativo cliente](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams web)\n\n       ![Adicionar aplicativo cliente](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   A imagem a seguir exibe a **ID do Cliente**:\n\n     ![Aplicativos do cliente](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. No painel esquerdo, selecione **Permissões de API**. \n\n   > [!NOTE]\n   > Os usuários só precisam consentir com essas permissões se o aplicativo do Azure AD estiver registrado em um locatário diferente.\n\n1. Selecione **Adicionar uma permissão**.\n\n1. Selecione **Microsoft Graph**.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Selecione **Permissões delegadas**.\n\n   Por padrão, **User.Read** está selecionado.\n\n   ![User](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. Adicione as seguintes permissões:</br>\n    * **email**\n    * **offline_access**\n    * **OpenId**\n    * **profile**\n\n\n1. Selecione **Adicionar permissões**.\n\n1. No painel esquerdo, selecione **Autenticação** para definir um URI de redirecionamento. \n\n   > [!NOTE]\n   > Se um aplicativo não tiver o consentimento do administrador de IT, os usuários deverão fornecer consentimento na primeira vez que usarem um aplicativo.\n           \n     1. Selecione **Adicionar uma plataforma**.\n     1. Selecione **Web**.\n\n        ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. Insira **URIs de redirecionamento** como `https://token.botframework.com/.auth/web/redirect`.\n\n     1. **Habilitar fluxos implícitos de** concessão e híbridos selecionando as seguintes caixas de seleção:\n         * **Tokens de ID**\n         * **Tokens de acesso**\n\n     1. Selecione **Configurar**.\n\n        ![Configurar a Web](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**Para atualizar manifesto**\n\n1. Selecione **Manifesto** no painel esquerdo.\n\n1. Verifique se o item config está definido como **\"accessTokenAcceptedVersion\": 2**. Caso não seja, altere seu valor para **2** e selecione **Salvar**. \n\n   > [!Tip]\n   > Se você já estiver testando seu bot Teams, saia do bot e saia do Teams. Em seguida, entre novamente para ver essa alteração.\n\n   ![Manifesto de atualização](~/assets/images/bots/update-manifest.png)</br>\n\n**Para configurar a conexão de Serviço de Bot**\n\n1. Vá para **Página de configuraçãoAdd** >  **OAuth Connection Configurações**.\n\n1. Selecione **Adicionar conexão OAuth Configurações**.\n\n1. Em **Nova Configuração de Conexão**, insira os seguintes detalhes:\n\n    | Campo | Valor ou descrição |\n    | ----- | ----- |\n    | **Nome** | Digite o nome da nova configuração de conexão. Você pode usar o nome nas configurações do código de serviço de bot. |\n    | **Service Provider** | Selecione **Azure Active Directory V2**. |\n    | **ID do cliente** | Salvo anteriormente como sua **ID do Microsoft App**. |\n    | **Segredo do cliente** | Salvo anteriormente **como Valor** da ID secreta do cliente. |\n    | **URL Exchange token** | Use o **URI de ID** do Aplicativo obtido anteriormente durante a exposição do ponto de extremidade da API. |\n    | **ID do locatário** | Insira **comum**. |\n    | **Escopos** | Insira **User.Read** e adicione todos os **Escopos selecionados** ao especificar permissões para APIs de downstream. |\n\n1. Selecione **Salvar**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Configurar configurações de aplicativo
  durationInMinutes: 1
  content: "1. Navegue **até appsettings.json** no repositório clonado.\n\n    ![Local das configurações do aplicativo](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. Abra **appsettings.json** **no Visual Studio Code** e atualize as seguintes informações:  \n\n     * De `\"MicrosoftAppId\"` acordo com a **ID do aplicativo Microsoft do seu bot**.\n     * De `\"MicrosoftAppPassword\"` acordo com o valor da ID secreta do cliente do bot.\n     * De `\"DOMAIN-NAME\"` acordo com sua URL ngrok.\n     * De `\"ConnectionName\"` acordo com o nome da configuração de conexão OAuth.\n     * De `\"ClientId\"` acordo com a **ID do aplicativo Microsoft do seu bot**.\n     * De `\"AppSecret\"` acordo com o valor da ID secreta do cliente do bot.\n     * Definir `\"ApplicationIdURI\"` na forma de `api://584f****.ngrok.io/botid-{AppID}`.\n\n    ![Configurações do aplicativo](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Configurar arquivo de manifesto
  durationInMinutes: 1
  content: "1. Navegue **até manifest.json** no repositório clonado.\n\n    ![Local do arquivo de manifesto](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. Abra **manifest.json** **no Visual Studio Code** e faça as seguintes alterações:\n\n     * Substitua todas as ocorrências por `[DOMAIN-NAME]` seu nome de domínio ngrok. \n     * Substitua todas as ocorrências por `[YOUR-MICROSOFT-APP-ID]` uma **ID do aplicativo Microsoft do seu bot**.\n\n         > [!NOTE]\n         > Dependendo do cenário e `[YOUR-MICROSOFT-APP-ID]` pode `[DOMAIN-NAME]` ocorrer várias vezes.\n\n     * Definir `\"resource\"` como `api://584f****.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Imagem de manifesto2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Criar e executar o serviço
  durationInMinutes: 1
  content: "**Para criar e executar o serviço usando Visual Studio linha 2019 ou Command**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. Iniciar **Visual Studio 2019**.\n   1. Navegue **até** **FileOpen** >  >  **Project/Solution**.\n\n      ![Abrir arquivo](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Selecione **Arquivo SSO sample.csproj** do aplicativo na **pasta csharp** .\n\n      ![Project pasta](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. Você verá a seguinte saída:\n\n      ![Arquivo token](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Pressione **F5** para executar o projeto.\n\n   1. Selecione **Sim** se a caixa de diálogo a seguir for exibida:\n\n      ![Certificado de Confiança](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Uma página da Web é aberta com uma **mensagem Seu bot está pronto!**\n\n      ![Aplicativo pronto](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nNavegue até **a pasta csharp** em uma janela do Prompt de Comando e insira o seguinte comando:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Upload SSO App para Teams
  durationInMinutes: 1
  content: "**Para executar Teams aplicativo carregando o arquivo manifest.zip**\n\n1. Em seu repositório clonado, navegue até **csharp > exemplo de SSO de aplicativo > TeamsAppManifest**.\n\n1. Crie uma .zip com os seguintes arquivos presentes na **pasta Manifesto** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Selecionar arquivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Vá para **Microsoft Teams**.\n\n1. Selecione **Store**.\n1. Selecione **Gerenciar seus aplicativos**.\n1. Selecione **Publicar um aplicativo**.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. Selecione **Upload um aplicativo personalizado**. \n\n   ![Upload aplicativo personalizado](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. Selecione **Abrir** para carregar o arquivo .zip que você criou na **pasta Manifesto** .\n\n   ![Selecionar arquivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Selecione **Adicionar**.\n\n   ![Adicionar o aplicativo](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Envie uma mensagem para o bot. \n1. O bot executará Logom único e exibirá o cartão de perfil junto com o prompt de opção para exibir token.\n\n   ![Cartão de perfil](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. Selecione **Sim** para exibir token ou **Não** para continuar com o chat.\n  \n   ![Exibição de token](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Se o SSO não for executado, o bot executará o método de autenticação padrão para sua guia.\n\n      ![Sem SSO](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Selecione releitos **...** para abrir a extensão de mensagens.\n\n      ![extensão de mensagens](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Selecione seu novo aplicativo SSO.\n\n      ![Aplicativo SSO](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. Selecione **entrar**.\n\n      ![Entrar](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Insira suas credenciais na caixa de entrada e selecione **Próximo**.\n\n      ![Caixa de login](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Selecione **Aceitar**.\n\n      ![caixa de consentimento](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Abra a extensão de mensagens e selecione seu aplicativo.\n\n  1. Selecione seu perfil na caixa de pesquisa. Você verá algo assim:\n\n      ![Perfil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Envie `https://profile.botframework.com` para o aplicativo para obter um cartão de perfil.\n   \n      ![Cartão de perfil](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Desafio completo
  durationInMinutes: 1
  content: >
    Você achou algo assim?

       ![Perfil SSO](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Você concluiu o tutorial para começar com o SSO para aplicativo de extensão de mensagens e guias.
