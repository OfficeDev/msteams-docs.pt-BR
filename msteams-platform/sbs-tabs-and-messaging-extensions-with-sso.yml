### YamlMime:Tutorial
title: AAD SSO para guias e extensão de mensagens
metadata:
  title: AAD SSO para guias e extensão de mensagens
  description: 'Neste tutorial, você aprenderá a configurar AAD SSO para guias.'
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Leia mais sobre autenticação SSO para guias.
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      O Azure Active Directory o SSO (AAD SSO) ajuda a autenticar usuários Teams. 

      **Principais aspectos do guia passo a passo do AAD SSO para guias e extensões de mensagens**

       * Após a primeira login, AAD SSO permite que o usuário entre automaticamente.
       * Permite que o usuário entre em outros dispositivos sem inserir credenciais de entrada.
       * Obtém token para o usuário conectado.   

      Este guia passo a passo ajuda você a criar guias e extensões de mensagens habilitando AAD autenticação SSO. Você verá a seguinte saída:

        ![Imagem de congratulation](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   
  - title: Pré-requisitos
    durationInMinutes: 1
    content: |
      Certifique-se de instalar as seguintes ferramentas e configurar seu ambiente de desenvolvimento:  

      * Microsoft Teams com uma conta (não uma conta de convidado)
      * [.NET Core SDK](https://dotnet.microsoft.com/download) versão 3.1
      * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
      * [ngrok versão](https://ngrok.com/download) mais recente (somente para teste de devbox) ou qualquer solução de túnel equivalente
      * [Microsoft 365 conta de desenvolvedor](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) ou acesso Teams conta com as permissões apropriadas para instalar um aplicativo
  - title: Configurar ambiente local
    durationInMinutes: 1
    content: |
      Clone `Microsoft-Teams-Samples` o repositório para seu GitHub local:  

       1. Abra [Microsoft Teams Exemplos](https://github.com/OfficeDev/Microsoft-Teams-Samples).
       1. Selecione **Código**.
       1. No menu suspenso, selecione **Abrir com GitHub Desktop**.

          ![Repositório clone](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)

       1. Selecione **Clonar**. 
  - title: Criar e registrar seu bot no portal do Azure AD
    durationInMinutes: 5
    content: |
      As etapas a seguir orientam você para:

      * Crie o recurso bot do Azure para registrar bot com o Serviço bot do Azure.
      * Crie o segredo do cliente que habilita a autenticação SSO do bot.
      * Adicione Microsoft Teams canal para implantar o bot em um canal Teams.
      * Use ngrok para criar um túnel para os pontos de extremidade do servidor Web.
      * Adicione o ponto de extremidade de mensagens ao túnel de ngrok que você criou.

      **Para criar o recurso bot do Azure**

      1. Vá para o [portal Microsoft Azure.](https://portal.azure.com/)
      1. Selecione **Criar um recurso**.
      1. Na caixa de pesquisa, digite **Bot do Azure**.
      1. Selecione **Enter**.
      1. Selecione **Bot do Azure**.

           ![Criar cartão de bot do Azure](~/assets/images/bots/createazurebot.png)

      1. Selecionar **Criar**.
      1. Insira o nome de alça de bot necessário no **alça bot**.
      1. Na lista **suspenso** Assinatura, selecione **msteams.nonprod.pub.msft.aplt**.
      1. Na lista **listada de grupos** de recursos, selecione seu grupo de recursos existente. Você também pode criar um novo grupo de recursos (selecione **Criar novo** > digite nome do recurso > selecione **OK**).

          ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot.png)

      1. Na seção **ID do Microsoft App** , por padrão **, Criar nova ID do Microsoft App** está selecionada. 

         Selecione **Usar o registro de aplicativo existente e** insira **A ID do aplicativo** existente e a **senha do** aplicativo existente para um aplicativo existente. Selecione **Criar nova ID do Microsoft App** para um novo aplicativo.

         > [!NOTE]
         > Não é possível criar mais de um bot com a mesma **ID do Microsoft App**.

      1. Selecione **Examinar + criar**.

         ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot-2.png)

      1. Se a validação for aprovada, selecione **Criar**.

          Leva alguns instantes para que o serviço de bot seja provisionado.

      1. Selecione **Acessar recursos**. 

          ![Implantar aplicativo](~/assets/images/Tab-ME-SSO/go-to-resource.png)

          Seu bot do Azure foi criado.

          ![Implantar aplicativo](~/assets/images/Tab-ME-SSO/app-overview.png)

      **Para criar o segredo do cliente**

        Execute as etapas a seguir se você tiver criado uma nova **ID do Microsoft App**:

      1. No painel esquerdo, selecione **Configuração**. 

         > [!TIP]
         > Salve a **ID do Microsoft App** ou **a ID do Cliente** para referência futura.

      1. Selecione **MultiTenant** em **Tipo de Bot**.

          ![Tipo de bot](~/assets/images/Tab-ME-SSO/bot-type.png)

      1. Ao lado da **ID do Microsoft App**, selecione **Gerenciar**.

          ![ID do Aplicativo Microsoft](~/assets/images/Tab-ME-SSO/manage.png)

      1. Na seção **Segredos do** cliente, selecione **Novo segredo do cliente**. 

          ![Novo segredo do cliente](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)

         A **janela Adicionar um segredo do** cliente é exibida.  

      1. Insira **Descrição**.

      1. Selecione **Adicionar**.

          ![Adicionar segredo do cliente ao aplicativo](~/assets/images/Tab-ME-SSO/add-client-id.png)

      1. Na coluna **Valor** , selecione **Copiar para área de transferência**.

           ![Valor do segredo do cliente](~/assets/images/Tab-ME-SSO/client-ids.png)
         
         > [!TIP]
         > Salve o **valor de segredos do** cliente ou a senha do aplicativo para referência futura.

      **Para adicionar o Microsoft Teams canal**

      1. Selecione **Início**.

          ![Página inicial](~/assets/images/Tab-ME-SSO/home.png)

      1. Selecione seu bot de **recursos recentes**.

      1. Selecione **Canais** no painel esquerdo. 

      1. Selecione **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

      1. Selecione a caixa de seleção para aceitar os **Termos de Serviço**.

      1. Selecione **Concordar**.

            ![Termos de serviço](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)

      1. Selecione **Salvar**.

            ![Selecione Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   

      **Para criar um túnel para o servidor Web local**

      Use o ngrok para criar um túnel para os pontos de extremidade HTTPS disponíveis publicamente do servidor Web em execução local. Execute o seguinte comando em ngrok:

       ```bash
       ngrok http -host-header=localhost 3978
       ```

      **Para adicionar ponto de extremidade de mensagens**

      1. De ngrok, copie a URL HTTPS (https para io).

          ![URL HTTPS do ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)

          > [!NOTE]
          > A URL HTTPS em seu ngrok é seu nome de domínio totalmente qualificado.
          > O `WebAppDomain` é um nome de domínio totalmente qualificado que não inclui `https://` nele.

      1. Em **Configurações** para o bot do Azure que você criou, selecione **Configuração**.

      1. No **ponto de extremidade mensagens**, use a URL HTTPS disponível no ngrok e, no final da URL, adicione **/api/messages**.

          ![Ponto de extremidade de mensagens](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)

      1. Selecione **Aplicar**.

          Você definiu com êxito um bot no Serviço de Bot do Azure.
  - title: Configurar o SSO para sua guia
    durationInMinutes: 1
    content: |
      **Para registrar seu aplicativo por meio do portal do Microsoft Azure AD**  

      1. Vá para o [portal Microsoft Azure.](https://portal.azure.com/)

      1. Selecione **Azure Active Directory**.

      1. Forme o painel esquerdo, selecione **Registros de Aplicativos**.

      1. Selecione seu bot.

      1. Selecione **Expor uma API**.

      1. Selecione **Definir**.

         ![Expor uma API](~/assets/images/Tab-ME-SSO/application-id-set.png)

      1. Definir o **URI de ID do Aplicativo** na forma de `api://botid-{AppID}`.

         ![Definir link](~/assets/images/Tab-ME-SSO/appid-uri1.png)
          
      1. Selecione **Adicionar um escopo**. 

      1. No painel exibido, digite como `access_as_user` o **nome do escopo**.

      1. Definir **Who pode consentir?** para `Admins and users`.

      1. Para configurar os prompts de consentimento do administrador e do usuário com valores apropriados para `access_as_user` escopo, forneça as seguintes informações nos campos:</br>

         * Insira `Teams can access the user’s profile` como **Nome de exibição de consentimento do administrador**.

         * Insira `Allows Teams to call the app’s web APIs as the current user` como **Descrição de consentimento do administrador**.

         * Insira `Teams can access the user profile and make requests on the user’s behalf` como **Nome de exibição de consentimento do usuário**.

         * Insira `Enable Teams to call this app’s APIs with the same rights as the user` como **Descrição de consentimento do usuário**.

      1. Verifique se o **Estado** está definido como **Habilitado**.

      1. Selecione **Adicionar escopo** para salvar.

         ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)

          > [!NOTE]
          > O **nome do escopo** deve corresponder ao URI `/access_as_user` **de ID do** aplicativo com anexado no final.</br>
             `api://botid-00000000-0000-0000-0000-000000000000/access_as_user`

            ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) 

      1. Na seção **Aplicativos cliente autorizados,** identifique os aplicativos que você deseja autorizar para o aplicativo Web do seu aplicativo. 

      1. Selecione **Adicionar um aplicativo cliente**. 

      1. Insira cada uma das seguintes IDs de cliente e selecione o escopo autorizado:</br>

           * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams aplicativo móvel ou desktop)

             ![Adicionar aplicativo cliente](~/assets/images/Tab-ME-SSO/add-client-application.png) 

           * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams web)

             ![Adicionar aplicativo cliente](~/assets/images/Tab-ME-SSO/add-client-application21.png) 
          

         A imagem a seguir exibe a **ID do Cliente**:

           ![Aplicativos do cliente](~/assets/images/Tab-ME-SSO/client-id-2.png) 

      1. No painel esquerdo, selecione **Permissões de API**. 

         > [!NOTE]
         > Os usuários só precisam consentir com essas permissões se o aplicativo do Azure AD estiver registrado em um locatário diferente.

      1. Selecione **Adicionar uma permissão**.

      1. Selecione **Microsoft Graph**.

         ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)

      1. Selecione **Permissões delegadas**.

         Por padrão, **User.Read** está selecionado.

         ![Usuário](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)

      1. Adicione as seguintes permissões:</br>
          * **email**
          * **offline_access**
          * **OpenId**
          * **perfil**


      1. Selecione **Adicionar permissões**.

      1. No painel esquerdo, selecione **Autenticação** para definir um URI de redirecionamento. 

         > [!NOTE]
         > Se um aplicativo não tiver o consentimento do administrador de IT, os usuários deverão fornecer consentimento na primeira vez que usarem um aplicativo.
                 
           1. Selecione **Adicionar uma plataforma**.
           1. Selecione **Web**.

              ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)

           1. Insira **URIs de redirecionamento** como `https://token.botframework.com/.auth/web/redirect`.

           1. **Habilitar fluxos implícitos de** concessão e híbridos selecionando as seguintes caixas de seleção:
               * **Tokens de ID**
               * **Tokens de acesso**

           1. Selecione **Configurar**.

              ![Configurar a Web](~/assets/images/Tab-ME-SSO/configure-web.png)

      **Para atualizar manifesto**

      1. Selecione **Manifesto** no painel esquerdo.

      1. Verifique se o item config está definido como **"accessTokenAcceptedVersion": 2**. Caso não seja, altere seu valor para **2** e selecione **Salvar**. 

         > [!Tip]
         > Se você já estiver testando seu bot Teams, saia do bot e saia do Teams. Em seguida, entre novamente para ver essa alteração.

         ![Manifesto de atualização](~/assets/images/bots/update-manifest.png)</br>

      **Para configurar a conexão de Serviço de Bot**

      1. Vá para **Página de configuraçãoAdd** >  **OAuth Connection Configurações**.

      1. Selecione **Adicionar conexão OAuth Configurações**.

      1. Em **Nova Configuração de Conexão**, insira os seguintes detalhes:

          | Campo | Valor ou descrição |
          | ----- | ----- |
          | **Nome** | Digite o nome da nova configuração de conexão. Você pode usar o nome nas configurações do código de serviço de bot. |
          | **Service Provider** | Selecione **Azure Active Directory V2**. |
          | **ID do cliente** | Salvo anteriormente como sua **ID do Microsoft App**. |
          | **Segredo do cliente** | Salvo anteriormente **como Valor** da ID secreta do cliente. |
          | **URL Exchange token** | Use o **URI de ID** do Aplicativo obtido anteriormente durante a exposição do ponto de extremidade da API. |
          | **ID do locatário** | Insira **comum**. |
          | **Escopos** | Insira **User.Read** e adicione todos os **Escopos selecionados** ao especificar permissões para APIs de downstream. |

      1. Selecione **Salvar**.

          <img src="~/assets/images/Tab-ME-SSO/new-connection-setting.png" alt="Bot Service connection" width="300"/>
  - title: Configurar configurações de aplicativo
    durationInMinutes: 1
    content: |
      1. Navegue **até appsettings.json** no repositório clonado.

          ![Local das configurações do aplicativo](~/assets/images/Tab-ME-SSO/app-setting-folder.png)

      1. Abra **appsettings.json** **no Visual Studio Code** e atualize as seguintes informações:  

           * De `"MicrosoftAppId"` acordo com a **ID do aplicativo Microsoft do seu bot**.
           * De `"MicrosoftAppPassword"` acordo com o valor da ID secreta do cliente do bot.
           * De `"DOMAIN-NAME"` acordo com sua URL ngrok.
           * De `"ConnectionName"` acordo com o nome da configuração de conexão OAuth.
           * De `"ClientId"` acordo com a **ID do aplicativo Microsoft do seu bot**.
           * De `"AppSecret"` acordo com o valor da ID secreta do cliente do bot.
           * Definir `"ApplicationIdURI"` na forma de `api://584f****.ngrok.io/botid-{AppID}`.

          ![Configurações do aplicativo](~/assets/images/Tab-ME-SSO/app-setting1.png)
  - title: Configurar arquivo de manifesto
    durationInMinutes: 1
    content: |
      1. Navegue **até manifest.json** no repositório clonado.

          ![Local do arquivo de manifesto](~/assets/images/Tab-ME-SSO/folder-manifest.png)

      1. Abra **manifest.json** **no Visual Studio Code** e faça as seguintes alterações:

           * Substitua todas as ocorrências por `[DOMAIN-NAME]` seu nome de domínio ngrok. 
           * Substitua todas as ocorrências por `[YOUR-MICROSOFT-APP-ID]` uma **ID do aplicativo Microsoft do seu bot**.

               > [!NOTE]
               > Dependendo do cenário e `[YOUR-MICROSOFT-APP-ID]` pode `[DOMAIN-NAME]` ocorrer várias vezes.

           * Definir `"resource"` como `api://584f****.ngrok.io/botid-{AppID}`.</br>
          
          ![Imagem de manifesto2](~/assets/images/Tab-ME-SSO/vs-manifest.png)
  - title: Criar e executar o serviço
    durationInMinutes: 1
    content: |
      **Para criar e executar o serviço usando Visual Studio linha 2019 ou Command**

      # <a name="visual-studio-2019"></a>[Visual Studio 2019](#tab/vs2019)

         1. Iniciar **Visual Studio 2019**.
         1. Navegue **até** **FileOpen** >  >  **Project/Solution**.

            ![Abrir arquivo](~/assets/images/Tab-ME-SSO/open-project1.png)

         1. Selecione **Arquivo SSO sample.csproj** do aplicativo na **pasta csharp** .

            ![Project pasta](~/assets/images/Tab-ME-SSO/project-folder1.png)

         1. Você verá a seguinte saída:

            ![Arquivo token](~/assets/images/Tab-ME-SSO/output1.png)

         1. Pressione **F5** para executar o projeto.

         1. Selecione **Sim** se a caixa de diálogo a seguir for exibida:

            ![Certificado de Confiança](~/assets/images/Tab-ME-SSO/certificate.png)

            Uma página da Web é aberta com uma **mensagem Seu bot está pronto!**

            ![Aplicativo pronto](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) 

          
      # <a name="command-line"></a>[Linha de comando](#tab/cli)

      Navegue até **a pasta csharp** em uma janela do Prompt de Comando e insira o seguinte comando:

      ```bash
      dotnet run
      ```

      ![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)
        
  - title: Upload SSO App para Teams
    durationInMinutes: 1
    content: |
      **Para executar Teams aplicativo carregando o arquivo manifest.zip**

      1. Em seu repositório clonado, navegue até **csharp > exemplo de SSO de aplicativo > TeamsAppManifest**.

      1. Crie uma .zip com os seguintes arquivos presentes na **pasta Manifesto** : 
         * manifest.json
         * icon-outline.png
         * icon-color.png

         ![Selecionar arquivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)

      1. Vá para **Microsoft Teams**.

      1. Selecione **Store**.
      1. Selecione **Gerenciar seus aplicativos**.
      1. Selecione **Publicar um aplicativo**.

         ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)

      1. Selecione **Upload um aplicativo personalizado**. 

         ![Upload aplicativo personalizado](~/assets/images/Tab-ME-SSO/upload-custom-app.png)

      1. Selecione **Abrir** para carregar o arquivo .zip que você criou na **pasta Manifesto** .

         ![Selecionar arquivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)

      1. Selecione **Adicionar**.

         ![Adicionar o aplicativo](~/assets/images/Tab-ME-SSO/add-sso-app.png)

      1. Envie uma mensagem para o bot. 
      1. O bot executará Logom único e exibirá o cartão de perfil junto com o prompt de opção para exibir token.

         ![Cartão de perfil](~/assets/images/Tab-ME-SSO/Congratulation-image.png)

      1. Selecione **Sim** para exibir token ou **Não** para continuar com o chat.
        
         ![Exibição de token](~/assets/images/Tab-ME-SSO/token-view1.png)

        1. Se o SSO não for executado, o bot executará o método de autenticação padrão para sua guia.

            ![Sem SSO](~/assets/images/Tab-ME-SSO/not-login11.png)

        1. Selecione releitos **...** para abrir a extensão de mensagens.

            ![extensão de mensagens](~/assets/images/Tab-ME-SSO/message-extension.png)
        
        1. Selecione seu novo aplicativo SSO.

            ![Aplicativo SSO](~/assets/images/Tab-ME-SSO/recent-app-sso.png)

        1. Selecione **entrar**.

            ![Entrar](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)

        1. Insira suas credenciais na caixa de entrada e selecione **Próximo**.

            ![Caixa de login](~/assets/images/Tab-ME-SSO/sign-in-box.png)
        
        1. Selecione **Aceitar**.

            ![caixa de consentimento](~/assets/images/Tab-ME-SSO/concent-box.png)

        1. Abra a extensão de mensagens e selecione seu aplicativo.

        1. Selecione seu perfil na caixa de pesquisa. Você verá algo assim:

            ![Perfil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)

        1. Envie `https://profile.botframework.com` para o aplicativo para obter um cartão de perfil.
         
            ![Cartão de perfil](~/assets/images/Tab-ME-SSO/profile-card.png)
  - title: Desafio completo
    durationInMinutes: 1
    content: |
      Você achou algo assim?

         ![Perfil SSO](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
  - content: |
      Você concluiu o tutorial para começar com o SSO para aplicativo de extensão de mensagens e guias.