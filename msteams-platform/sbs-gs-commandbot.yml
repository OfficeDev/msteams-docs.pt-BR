### YamlMime:Tutorial
title: Compilar um bot de comando com JavaScript
metadata:
  title: Compilar um bot de comando com JavaScript
  description: Neste tutorial, você aprenderá a criar um bot de comando com JavaScript criando um bot de comando com o Kit de Ferramentas do Teams.
  audience: Developer
  level: Beginner
  ms.date: 05/05/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Voltar para Adicionar funcionalidade
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a2ae18fc62e56a268893690aacb11e4b66247dc9
  ms.sourcegitcommit: 4eeede81a0ae8ec985c6a1ad4f608df58371402f
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 07/14/2022
  ms.locfileid: "66792947"
items:
- durationInMinutes: 1
  content: "O Microsoft Teams permite automatizar tarefas repetitivas usando um bot de comando. Ele responde a comandos simples enviados em chats com cartões adaptáveis. \n\nNeste tutorial, você aprenderá:\n\n- Como criar um bot de comando com o Kit de Ferramentas do Teams.\n- Sobre a estrutura de diretório do seu aplicativo.\n\nEste guia passo a passo ajuda você a criar um bot de comando com o Kit de Ferramentas do Teams. Você verá a seguinte saída:\n\n  :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/final-output.png\" alt-text=\"saída final\":::\n"
- title: Pré-requisitos
  durationInMinutes: 1
  content: "\nAqui está uma lista de ferramentas que você precisará para criar e implantar seus aplicativos.\n\n| &nbsp; | Instalar | Para usar |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de ferramentas do Teams](#install-the-teams-toolkit) | Uma extensão Visual Studio Code Microsoft que cria um scaffolding de projeto para seu aplicativo. Use a versão 4.0.0.  |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams para colaborar com todas as pessoas com quem você trabalha por meio de aplicativos para chat, reuniões, chamadas e tudo em um só lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Ambiente de runtime do JavaScript de back-end. Use a versão 14 ou 16.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) ou [Google Chrome](https://www.google.com/chrome/) | Um navegador com ferramentas de desenvolvedor. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript ou TypeScript, crie ambientes. Use a versão mais recente. |\n| &nbsp; | [Conta de desenvolvedor do Microsoft 365](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Acesso à conta do Teams com as permissões apropriadas para instalar um aplicativo. |\n\n> [!NOTE]\n> O guia é testado no Teams Toolkit versão 4.0.0 e Nodejs versão 14 e 16. As etapas neste guia podem funcionar com outras versões, mas isso não foi testado.\n\n## <a name=\"prepare-development-environment\"></a>Preparar o ambiente de desenvolvimento\n\nDepois de instalar as ferramentas necessárias, configure o ambiente de desenvolvimento.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalar o Kit de Ferramentas do Teams\n\nO Kit de Ferramentas do Teams ajuda a simplificar o processo de desenvolvimento com ferramentas para provisionar e implantar recursos de nuvem para seu aplicativo, publicar na loja do Teams e muito mais. \n \nVocê pode usar o kit de ferramentas com Visual Studio Code ou a CLI (interface de linha de comando) chamada `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code e selecione **Extensões** (**Ctrl+Shift+X** / **⌘⇧-X** ou Exibir **> Extensões**).\n1. Na caixa de pesquisa, insira o **Kit de Ferramentas do Teams**.\n1. Selecione **Instalar** ao lado do Kit de Ferramentas do Teams.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/teams-toolkit.png\" alt-text=\"A ilustração mostra a instalação da extensão do Kit de Ferramentas do Teams.\":::\n\n O ícone do Kit de Ferramentas do Teams aparece Visual Studio Code barra lateral após sua instalação.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"A ilustração mostra o ícone do Kit de Ferramentas do Teams Visual Studio Code barra lateral.\":::\n\nVocê também pode encontrar o Kit de Ferramentas do Teams [no Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nPara instalar a CLI do TeamsFx, use o gerenciador de `npm` pacotes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nDependendo da configuração, talvez seja necessário usar para `sudo` instalar a CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nÉ mais comum em sistemas Linux e macOS.\n\nCertifique-se de adicionar o cache global npm ao path. Essa etapa normalmente é feita como parte do Node.js instalador.  \n\nVocê pode usar a CLI com o `teamsfx` comando. Verifique se o comando está funcionando executando `teamsfx -h`.\n\n> [!NOTE]\n> Antes de executar o TeamsFx em terminais do PowerShell, habilite a **política de** execução com sinal remoto para o PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar seu locatário de desenvolvimento do Teams\n\nUm **locatário** é como um espaço ou um contêiner em que você conversa, compartilha arquivos e executa reuniões para sua organização no Teams. Você também pode fazer sideload e testar seu aplicativo.\n\n### <a name=\"check-for-sideloading-option\"></a>Verificar a opção de sideload\n\nDepois de criar o aplicativo, você deve carregar seu aplicativo no Teams sem distribuí-lo. Isso é conhecido como sideload. Entre em sua conta do Microsoft 365 para exibir essa opção.\n\n > [!NOTE]\n > O sideload é necessário para visualizar e testar aplicativos no ambiente local do Teams. Habilite o Sideload para visualizar e testar seu aplicativo no Teams localmente.\n\nVocê já tem um locatário e tem acesso de administrador? Vamos verificar se você realmente faz!\n\nPara verificar o sideload de aplicativos no Teams:\n\n 1. No cliente do Teams, selecione **Store** .\n 1. Selecione **Gerenciar seus aplicativos**.\n 1. Selecione **Publicar um aplicativo**.\n 1. Procure a opção para **carregar um aplicativo personalizado**. Se você vir a opção, o sideload de aplicativos estará habilitado.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"A ilustração mostra a opção de carregar um aplicativo personalizado no Teams.\":::\n\n     > [!NOTE]\n     > Entre em contato com o administrador do Teams se você não tiver a opção de carregar um aplicativo personalizado.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Criar um locatário de desenvolvedor gratuito do Teams (opcional)\n\nSe você não tiver uma conta de desenvolvedor do Teams, poderá obtê-la gratuitamente. Participe do programa de desenvolvedor do Microsoft 365!\n\n1. Acesse o [Programa para desenvolvedores do Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecione **Ingressar Agora** e siga as instruções na tela.\n1. Selecione **Configurar assinatura do E5 na** tela de boas-vindas.\n1. Configurar conta de administrador. Depois de concluir, a tela a seguir será exibida.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Entre no Teams usando a nova conta de administrador. Agora você deve ter a **opção Carregar um aplicativo** personalizado.\n"
- title: Criar bot de comando
  durationInMinutes: 1
  content: "**Para criar um bot de comando usando Visual Studio Code**\n\n 1. Abra o Visual Studio Code.\n\n 1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n 1. Selecione **Criar um novo aplicativo do Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/create-new-teams-app.png\" alt-text=\"Localização do link de Criação de Novo Projeto na barra lateral do Kit de ferramentas do Teams.\":::\n\n 1. Selecione **Criar uma nova opção de aplicativo do Teams** para criar um aplicativo usando o Kit de Ferramentas do Teams.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"O assistente é iniciado para criar um novo projeto\":::\n\n 1. Verifique se **o bot de** comando está selecionado como a funcionalidade que você deseja compilar em seu aplicativo.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-bot.png\" alt-text=\"Selecionar Funcionalidade do Aplicativo\":::\n\n 1. Selecione **Servidor Restify do Gatilho HTTP** como o gatilho.\n 1. Selecione **OK**.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-trigger.png\" alt-text=\"Selecionar Gatilho\":::\n\n 1. Selecione **JavaScript** como linguagem de programação.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-script.png\" alt-text=\"Captura de tela mostrando como selecionar a linguagem de programação.\":::\n \n 1. Selecione o local para o workspace do projeto.\n 1. Selecione **Selecionar Pasta**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-folder.png\" alt-text=\"Selecione Pasta.\":::\n \n 1. Insira um nome adequado para seu aplicativo, como commandbot como o nome do aplicativo. \n 1. Selecione **Enter**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/app-name.png\" alt-text=\"Nome do aplicativo.\":::\n\n     > [!NOTE]\n     > Certifique-se de usar apenas caracteres alfanuméricos no nome do aplicativo.\n\n     O aplicativo de bot de comando é criado em alguns segundos.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/command-bot.png\" alt-text=\"Captura de tela mostrando o aplicativo criado.\":::\n\n 1. Selecione **o ícone Executar e Depurar** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: na Visual Studio Code lateral.\n\n 1. Selecione **Depurar(Edge)** **ou Depurar (Chrome)** na lista suspensa.\n\n 1. Selecione **o botão Iniciar Depuração** .\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/debug-app.png\" alt-text=\"Aplicativo de depuração\":::\n\n 1. Selecione **Adicionar**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/add-app.png\" alt-text=\"Adicionar um aplicativo\":::     \n\n 1. Selecione o bot de comando.\n \n 1. Selecione **Enter**.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/hello-world-command.png\" alt-text=\"Adicionar uma lista suspensa de aplicativos\":::  \n\n    Você receberá a seguinte resposta de comando no cartão adaptável:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/final-output.png\" alt-text=\"saída final\":::      \n\n ## <a name=\"take-tour-of-source-code\"></a>Faça um tour pelo código-fonte\n\n O Kit de Ferramentas do Teams fornece componentes para a criação de um aplicativo. Depois de criar o projeto, você pode exibir as pastas e os arquivos do projeto na área **explorer** do Visual Studio Code.\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/folder-structure.png\" alt-text=\"guia estrutura\":::\n\n Se você optar por usar a estrutura da interface do usuário, o código de modelo de exemplo a seguir fornecerá um scaffolding com React componentes. Ele contém o seguinte conteúdo:\n\n | Nome do arquivo | Conteúdos |\n | --- | --- |\n | `bot/src/internal/initialize.js` | Criar o adaptador de bot global e inicializar com o Teams Frameworks |\n | `bot/src/index.js` | Código do servidor para hospedar o aplicativo de bot e escutar /api/messages para processar a atividade do Teams com o Bot Framework |\n | `bot/src/helloworldCommandHandler.js` | Um manipulador de comandos hello world para processar um comando helloworld e retornar um cartão adaptável como resposta |\n | `bot/src/adaptiveCards/*.json` | Arquivo JSON de cartão adaptável usado como sua resposta de comando |\n"
- title: Implantar seu primeiro aplicativo teams
  durationInMinutes: 1
  content: "\nVocê aprendeu a criar e executar o aplicativo Teams com a funcionalidade do bot de comando. A etapa final é implantar seu aplicativo no Azure.\n\nVamos implantar o primeiro aplicativo com a funcionalidade de bot de comando no Azure usando o Kit de Ferramentas do Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Entrar em sua conta do Azure\n\nUse sua conta para acessar o Microsoft portal do Azure e fornecer provisionar novos recursos de nuvem para dar suporte ao seu aplicativo.\n\n1. Abra o Visual Studio Code.\n1. Abra a pasta do projeto que você criou o aplicativo de bot de comando.\n1. Selecione o ícone do Kit de Ferramentas do  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams na barra lateral.\n1. Selecione **Entrar no Azure**.\n\n    > [!TIP]\n    > Se você tiver a extensão de Conta do Azure instalada e estiver usando a mesma conta, ignore esta etapa.\n\n    O navegador da Web padrão é aberto para permitir que você entre na conta.\n1. Entre em sua conta do Azure usando suas credenciais.\n1. Feche o navegador quando solicitado e retorne ao Visual Studio Code.\n\n    A **seção ACCOUNTS** da barra lateral mostra as duas contas separadamente. Ele também lista o número de assinaturas utilizáveis do Azure disponíveis para você.\n    \n    > [!NOTE]\n    > Verifique se você tem pelo menos uma assinatura utilizável do Azure disponível.\n\n    Agora você está pronto para implantar seu aplicativo no Azure!\n\n## <a name=\"deploy-your-app-to-azure\"></a>Implantar seu aplicativo no Azure.\n\n Em **IMPLANTAÇÃO** , você pode provisionar os recursos de nuvem necessários e o código do aplicativo é copiado para os recursos de nuvem criados.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Selecione o ícone do Kit de Ferramentas do Teams:::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: na barra Visual Studio Code lateral.\n\n1. Selecione **Provisionar na nuvem em** **DEPLOYMENT**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/provision-cloud.png\" alt-text=\"Captura de tela mostrando os comandos de provisionamento\":::\n\n1. Selecione um grupo de recursos existente ou crie um novo.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/subscription-cloud.png\" alt-text=\"Captura de tela mostrando recursos para provisionamento\":::\n\n    > [!NOTE]\n    > Uma caixa de diálogo é exibida mencionando que os custos podem ser incorridos durante a execução de recursos no Azure.\n\n1. Selecione **Provisionar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/provision-confirm.png\" alt-text=\"Captura de tela da caixa de diálogo de provisionamento.\":::\n\n   O processo de provisionamento cria recursos na nuvem do Azure. Você pode monitorar o progresso observando os diálogos no canto inferior direito. Após alguns minutos, você verá o seguinte aviso:\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/deploy-provision-success.png\" alt-text=\"Captura de tela mostrando a caixa de diálogo de provisionamento concluída.\":::\n\n     Você tem a opção de exibir os recursos provisionados. Para este tutorial, você não precisa exibir recursos.\n\n1. Selecione **Implantar na nuvem em** **IMPLANTAÇÃO** após a conclusão do provisionamento.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/deploy-cloud.png\" alt-text=\"Captura de tela mostrando onde clicar para implantar na nuvem.\":::\n\n1. Selecione **Implantar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/Deploy-confirm.png\" alt-text=\"Implante para confirmar.\":::\n\n   A implantação leva algum tempo. Você pode monitorar o progresso na caixa de diálogo no canto inferior direito. Após alguns minutos, você verá o aviso a seguir.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/command-deploy-confirm.png\" alt-text=\"Implantar confirmação.\":::\n\n\n1. Abra o painel de depuração (**Ctrl+Shift+D** / **⌘⇧-D** ou **View > Run**) Visual Studio Code.\n1. Selecione **Iniciar Remoto (Edge)** na lista suspensa de configuração de inicialização.\n1. Selecione **o botão Iniciar Depuração** .\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/remote-debug.png\" alt-text=\"Depuração remota.\":::\n\n1. Selecione **Adicionar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/app-cloud-output.png\" alt-text=\"Saída da nuvem do aplicativo.\":::\n\n1. Selecione o bot de comando.\n1. Selecione **Enter**.  \n\n    :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/hello-world-cloud.png\" alt-text=\"Olá, Mundo comando\":::\n\n    Você receberá a seguinte resposta de comando no cartão adaptável:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/cloud-final-output.png\" alt-text=\"Saída final da nuvem\":::\n\n# <a name=\"command-line\"></a>[Linha de comando](#tab/cli)\n\nNa janela do terminal:\n\n1. Execute `teamsfx new` para criar um novo projeto.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Execute `teamsfx provision` para criar um recurso do Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Execute `teamsfx deploy` para implantar o aplicativo.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Execute `teamsfx preview` para executar o aplicativo.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Desafio completo
  durationInMinutes: 1
  content: >
    Você conseguiu algo assim?


    :::image type="content" source="~/assets/images/sbs-command-bot/final-output.png" alt-text="Saída final da nuvem":::
- content: Você concluiu o tutorial para criar o aplicativo de resposta de comando.
